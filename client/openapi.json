{
  "swagger": "2.0",
  "basePath": "/nms/api/v2.1",
  "info": {
    "title": "UNMS API",
    "version": "1.0.0",
    "description": "You can authorize calls with x-auth-token by clicking the button on the right.\n    You can get this token on endpoint /user/login"
  },
  "tags": [
    { "name": "Authorization", "description": "Login and user authorization." },
    { "name": "Users", "description": "Manage UNMS users and their profiles." },
    {
      "name": "Server",
      "description": "UNMS settings with SMTP configuration, SSL and backups configuration."
    },
    {
      "name": "Sites",
      "description": "Manage sites and clients (former endpoints), their pictures and network structure."
    },
    {
      "name": "Devices",
      "description": "Configuration and monitoring for all devices."
    },
    {
      "name": "Tasks",
      "description": "View, start or cancel UNMS background tasks, for example firmware upgrade."
    },
    { "name": "Logs", "description": "View devices log lines." },
    { "name": "Outages", "description": "View devices outages." },
    {
      "name": "Discovery",
      "description": "Scan for devices and connect them to UNMS."
    },
    { "name": "Firmware", "description": "Manage firmware files in UNMS." },
    {
      "name": "Traffic",
      "description": "Devices and clients traffic statistics generated thanks to NetFlow."
    },
    { "name": "Export", "description": "Client data export." },
    { "name": "Vault", "description": "Device credentials vault." },
    { "name": "Token", "description": "Manage access tokens." },
    { "name": "Gateways", "description": "Setup network device gateways." },
    { "name": "Backups", "description": "UNMS manual and automatic backups." },
    { "name": "Data Links", "description": "Data Links between devices." },
    { "name": "Speed Test", "description": "Scan speed between two devices." },
    { "name": "CRM", "description": "Customer relationship management." },
    { "name": "WebSocket", "description": "WebSocket connection." },
    { "name": "Simulation", "description": "Simulation for wireless devices." },
    { "name": "Installations", "description": "Installations APIs." }
  ],
  "securityDefinitions": {
    "UserSecurity": {
      "type": "apiKey",
      "in": "header",
      "name": "x-auth-token",
      "description": "User authorization token"
    }
  },
  "security": [{ "UserSecurity": [] }],
  "produces": ["application/json"],
  "paths": {
    "/nms/account/login/ubiquiti": {
      "get": {
        "summary": "SSO authentication response endpoint.",
        "operationId": "getNmsAccountLoginUbiquiti",
        "parameters": [
          {
            "type": "string",
            "name": "code",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "name": "state",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "name": "error",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "name": "error_description",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%201" },
            "description": "Successful"
          },
          "302": { "schema": { "type": "string" }, "description": "Found" },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/data-links": {
      "get": {
        "summary": "List of all data links.",
        "operationId": "getDatalinks",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "name": "siteLinksOnly",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Data Links"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfDataLinks" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create data link.",
        "operationId": "postDatalinks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DataLinkPayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Data Links"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DataLink" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "summary": "List of all devices in UNMS.",
        "operationId": "getDevices",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "withInterfaces",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "authorized",
            "in": "query",
            "required": false
          },
          {
            "type": "array",
            "x-constraint": { "single": true },
            "items": {
              "type": "string",
              "enum": [
                "onu",
                "olt",
                "unmsr",
                "unmss",
                "erouter",
                "eswitch",
                "epower",
                "airCube",
                "airMax",
                "airFiber",
                "toughSwitch",
                "solarBeam",
                "wave",
                "blackBox"
              ]
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "array",
            "x-constraint": { "single": true },
            "items": {
              "type": "string",
              "enum": [
                "router",
                "switch",
                "gpon",
                "ap",
                "station",
                "other",
                "ups",
                "server",
                "wireless",
                "convertor",
                "gateway"
              ]
            },
            "collectionFormat": "multi",
            "name": "role",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "Read-only overview for device list.",
            "schema": { "$ref": "#/definitions/ListOfDevices" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/firmwares": {
      "get": {
        "summary": "Fetch available firmware.",
        "operationId": "getFirmwares",
        "produces": ["application/json"],
        "tags": ["Firmware"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfFirmwares" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Upload new firmware image.",
        "operationId": "postFirmwares",
        "produces": ["application/json"],
        "tags": ["Firmware"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Firmware" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gateways": {
      "get": {
        "summary": "Get all gateways.",
        "operationId": "getGateways",
        "produces": ["application/json"],
        "tags": ["Gateways"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfGateways" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new gateway.",
        "operationId": "postGateways",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/NewGateway" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Gateways"],
        "responses": {
          "200": {
            "description": "status of updated gateway with data",
            "schema": { "$ref": "#/definitions/Model%2049" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/logs": {
      "get": {
        "summary": "List of all log items.",
        "operationId": "getLogs",
        "parameters": [
          {
            "type": "number",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "query"
          },
          {
            "type": "array",
            "x-constraint": { "single": true },
            "items": { "type": "string", "x-format": { "guid": true } },
            "collectionFormat": "multi",
            "name": "deviceId",
            "in": "query"
          },
          {
            "type": "string",
            "enum": ["info", "warning", "error"],
            "name": "level",
            "in": "query"
          },
          {
            "type": "string",
            "enum": [
              "login",
              "device",
              "email-dispatch",
              "nms-backup",
              "nms-update",
              "nms-error",
              "device-state",
              "device-backup",
              "device-upgrade",
              "device-interface",
              "site"
            ],
            "name": "tag",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Unix timestamp in milliseconds.",
            "minimum": 3600000,
            "maximum": 31536000000,
            "name": "period",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search pattern.",
            "minLength": 1,
            "name": "query",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Logs"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%206" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/outages": {
      "get": {
        "summary": "List of all network outages for last month.",
        "operationId": "getOutages",
        "parameters": [
          {
            "type": "number",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "query",
            "required": false
          },
          {
            "type": "number",
            "minimum": 3600,
            "name": "period",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "minLength": 1,
            "name": "query",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "enum": ["outage", "unreachable"],
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "inProgress",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Outages"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Outages" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/simulation": {
      "get": {
        "summary": "Get simulation devices and links.",
        "operationId": "getSimulation",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Simulation" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "summary": "List of sites in UNMS. Only some combinations of query parameters are valid.",
        "operationId": "getSites",
        "parameters": [
          {
            "type": "array",
            "description": "Return only sites with these IDs.",
            "x-constraint": { "single": true },
            "items": {
              "type": "string",
              "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
              "x-format": { "guid": true }
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return only sites that contain a device with this IP address.",
            "x-format": { "ip": { "cidr": "optional" } },
            "name": "ip",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return site containing device with this ID.",
            "name": "deviceId",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return sites with this type.",
            "enum": ["site", "endpoint", "client"],
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "If true, returns only sites that are bound with CRM. If false, returns only sites that are not bound with CRM. Can be used only with \"type\" parameter.",
            "name": "ucrm",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "Include CRM client and service details. Can be used with any other parameter.",
            "name": "ucrmDetails",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SitesList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new site.",
        "operationId": "postSites",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateSite" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Site" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/speed-tests": {
      "get": {
        "summary": "Return detail about running speedtests.",
        "operationId": "getSpeedtests",
        "produces": ["application/json"],
        "tags": ["Speed Test"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfSpeedTests" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "List all tasks.",
        "operationId": "getTasks",
        "parameters": [
          {
            "type": "number",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "enum": ["success", "failed", "in-progress", "canceled", "queued"],
            "name": "status",
            "in": "query"
          },
          {
            "type": "number",
            "x-constraint": { "positive": true },
            "name": "period",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Task" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Start FW upgrade task for a group of devices.",
        "operationId": "postTasks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2051" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token": {
      "get": {
        "summary": "Get all API tokens.",
        "operationId": "getToken",
        "produces": ["application/json"],
        "tags": ["Token"],
        "responses": {
          "200": {
            "description": "List of tokens.",
            "schema": { "$ref": "#/definitions/TokenListSchema" }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new API token.",
        "operationId": "postToken",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateToken" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Token"],
        "responses": {
          "200": {
            "description": "Information about new token.",
            "schema": { "$ref": "#/definitions/NewTokenSchema" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get the authenticated user.",
        "operationId": "getUser",
        "produces": ["application/json"],
        "tags": ["Authorization", "Users"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates authenticated user.",
        "operationId": "putUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/EditUser" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization", "Users"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Return list of all users.",
        "operationId": "getUsers",
        "produces": ["application/json"],
        "tags": ["Users"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UserList" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new user.",
        "operationId": "postUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateUser" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Users"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/access-groups/sites": {
      "get": {
        "summary": "Return site access groups.",
        "operationId": "getAccessgroupsSites",
        "parameters": [
          {
            "type": "array",
            "default": [],
            "x-constraint": { "single": true },
            "items": {
              "type": "string",
              "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
              "x-format": { "guid": true }
            },
            "collectionFormat": "multi",
            "name": "groupId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Whether to include internal access groups.",
            "default": false,
            "name": "withInternal",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Whether to include site and user counts.",
            "default": false,
            "name": "withOverview",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SiteAccessGroupList" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new site access group.",
        "operationId": "postAccessgroupsSites",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RequestSiteAccessGroup" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SiteAccessGroup" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crm/roles": {
      "get": {
        "summary": "Get CRM admin users.",
        "operationId": "getCrmRoles",
        "produces": ["application/json"],
        "tags": ["CRM"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CrmRoleListSchema" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/crm/service-plans": {
      "get": {
        "summary": "Get CRM service plans.",
        "operationId": "getCrmServiceplans",
        "produces": ["application/json"],
        "tags": ["CRM"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CrmServicePlanListSchema" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/data-links/{id}": {
      "get": {
        "summary": "Get data link based on its ID.",
        "operationId": "getDatalinksId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Data Links"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DataLink" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update data link.",
        "operationId": "putDatalinksId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DataLinkPayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Data Links"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DataLink" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete data link based on its ID.",
        "operationId": "deleteDatalinksId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Data Links"],
        "responses": {
          "200": {
            "schema": { "type": "string", "x-format": { "guid": true } },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/discovered": {
      "get": {
        "summary": "List of discovered devices.",
        "operationId": "getDevicesDiscovered",
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "Read-only overview for device list.",
            "schema": { "$ref": "#/definitions/ListOfDevices" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/ips": {
      "get": {
        "summary": "Return a list of devices IPs which are in UNMS monitored IP ranges.",
        "operationId": "getDevicesIps",
        "parameters": [
          {
            "type": "boolean",
            "description": "Return only IPs which are blocked.",
            "name": "suspended",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "Return also management IPs.",
            "name": "management",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return only IPs for this UNMS site.",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return only IPs for this UCRM service.",
            "name": "ucrmId",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%209" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/macs": {
      "get": {
        "summary": "Return a list of all devices MAC address (except for ONUs).",
        "operationId": "getDevicesMacs",
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2010" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/models": {
      "get": {
        "summary": "Returns list of all UI devices model info.",
        "operationId": "getDevicesModels",
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2011" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus": {
      "get": {
        "summary": "List of ONU in UNMS.",
        "operationId": "getDevicesOnus",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "parentId",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfOnuDevices" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/ssids": {
      "get": {
        "summary": "Get devices wireless configuration",
        "operationId": "getDevicesSsids",
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceSsidList" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unknown": {
      "get": {
        "summary": "Get unknown client devices (based on detected network traffic) ordered by total traffic.",
        "operationId": "getDevicesUnknown",
        "parameters": [
          {
            "type": "number",
            "description": "Get only devices that produced at least this amount of traffic (in bytes).",
            "default": 102400,
            "minimum": 0,
            "name": "minTraffic",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices", "Traffic"],
        "responses": {
          "200": {
            "description": "List of unknown devices.",
            "schema": { "$ref": "#/definitions/UnknownDevicesList" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "summary": "Device status overview.",
        "operationId": "getDevicesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete device.",
        "operationId": "deleteDevicesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/scan-status": {
      "get": {
        "summary": "Get current scan status (payload is WIP).",
        "operationId": "getDiscoveryScanstatus",
        "produces": ["application/json"],
        "tags": ["Discovery"],
        "responses": {
          "200": {
            "schema": { "type": "string" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/installations/devices": {
      "get": {
        "summary": "Get devices registered for installation ordered by current user's location.",
        "operationId": "getInstallationsDevices",
        "parameters": [
          {
            "type": "number",
            "description": "How many devices to get.",
            "default": 100,
            "minimum": 1,
            "name": "count",
            "in": "query"
          },
          {
            "type": "array",
            "description": "If specified, get only devices registered by given users.",
            "x-constraint": { "single": true },
            "items": {
              "type": "string",
              "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
              "x-format": { "guid": true }
            },
            "collectionFormat": "multi",
            "name": "userId",
            "in": "query"
          },
          {
            "type": "number",
            "minimum": -180,
            "maximum": 180,
            "name": "longitude",
            "in": "query"
          },
          {
            "type": "number",
            "minimum": -90,
            "maximum": 90,
            "name": "latitude",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/InstallationDeviceList" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "summary": "Register device for installation.",
        "operationId": "postInstallationsDevices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/NewInstallationDevice" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "description": "Installation device.",
            "schema": { "$ref": "#/definitions/InstallationDevice" }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/installations/{id}": {
      "get": {
        "summary": "Get installation data.",
        "operationId": "getInstallationsId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "description": "New installation.",
            "schema": { "$ref": "#/definitions/InstallationResponse" }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/address": {
      "get": {
        "summary": "Get IP address of the UNMS server, resolve hostname if necessary.",
        "operationId": "getNmsAddress",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "description": "IP addresss",
            "schema": {
              "type": "string",
              "description": "IP addresss",
              "example": "192.168.1.100",
              "x-format": { "ip": { "cidr": "optional" } }
            }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups": {
      "get": {
        "summary": "Get UNMS backups.",
        "operationId": "getNmsBackups",
        "produces": ["application/json"],
        "tags": ["Backups"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsBackupList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/changed": {
      "get": {
        "summary": "List of items in UNMS that changed since given timestamp.",
        "operationId": "getNmsChanged",
        "parameters": [
          {
            "type": "integer",
            "description": "Timestamp in milliseconds.",
            "minimum": 0,
            "name": "since",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Search items related to UCRM.",
            "name": "ucrm",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ChangedItems" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/connection": {
      "get": {
        "summary": "Return UNMS key for UNMS server.",
        "operationId": "getNmsConnection",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "type": "string" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/enums": {
      "get": {
        "summary": "Return UNMS enumerations.",
        "operationId": "getNmsEnums",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "description": "Enumerations object",
            "schema": { "type": "string", "description": "Enumerations object" }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/heartbeat": {
      "get": {
        "summary": "Liveness check.",
        "operationId": "getNmsHeartbeat",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/keep-alive": {
      "get": {
        "summary": "Extend validity of user token.",
        "operationId": "getNmsKeepalive",
        "produces": ["application/json"],
        "tags": ["Users"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2013" },
            "description": "Successful"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/log-verbosity": {
      "get": {
        "summary": "Get current server log verbosity.",
        "operationId": "getNmsLogverbosity",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServerLogVerbosityResponseSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Change current server log verbosity.",
        "operationId": "postNmsLogverbosity",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServerLogVerbosityPayloadSchema"
            }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServerLogVerbosityResponseSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/mailserver": {
      "get": {
        "summary": "Fetch mail server settings.",
        "operationId": "getNmsMailserver",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MailServer" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update mail server settings.",
        "operationId": "putNmsMailserver",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/smtp" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MailServer" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/news": {
      "get": {
        "summary": "Get news from UNMS feed for user.",
        "operationId": "getNmsNews",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/NewsSchemaList" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "406": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Acceptable"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/search": {
      "get": {
        "summary": "Search UNMS.",
        "operationId": "getNmsSearch",
        "parameters": [
          {
            "type": "string",
            "description": "Text to search for.",
            "name": "query",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Results per page.",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Results page.",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SearchResultSchema" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/server-config": {
      "get": {
        "summary": "Return UNMS server configuration.",
        "operationId": "getNmsServerconfig",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ServerConfig" },
            "description": "Successful"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/server-time": {
      "get": {
        "summary": "Get server time of the UNMS server.",
        "operationId": "getNmsServertime",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "description": "server time on server",
            "schema": {
              "type": "string",
              "description": "server time on server",
              "example": "2018-11-16T08:42:18.679Z"
            }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/settings": {
      "get": {
        "summary": "Get UNMS settings.",
        "operationId": "getNmsSettings",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/NmsSettings%201" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update UNMS settings.",
        "operationId": "putNmsSettings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/NmsUpdateSettings" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/NmsSettings%201" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "412": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Precondition Failed"
          },
          "422": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/setup": {
      "get": {
        "summary": "Return status of UNMS setup.",
        "operationId": "getNmsSetup",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ServerStatusUnmsSetup" },
            "description": "Successful"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Setup UNMS instance.",
        "operationId": "postNmsSetup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2059" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SetupUnmsFinish" },
            "description": "Successful"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/statistics": {
      "get": {
        "summary": "Get UNMS network statistics.",
        "operationId": "getNmsStatistics",
        "parameters": [
          {
            "type": "string",
            "enum": ["hour", "day", "month", "quarter", "year"],
            "name": "interval",
            "in": "query",
            "required": true
          },
          { "type": "boolean", "default": false, "name": "siri", "in": "query" }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/NetworkStatistics" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "406": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Acceptable"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/summary": {
      "get": {
        "summary": "Various badge-count like values, e.g. unread logs count.",
        "operationId": "getNmsSummary",
        "parameters": [
          {
            "type": "number",
            "default": 0,
            "name": "outagesTimestamp",
            "in": "query"
          },
          {
            "type": "number",
            "default": 0,
            "name": "logsTimestamp",
            "in": "query"
          },
          {
            "type": "array",
            "x-constraint": { "single": true },
            "items": { "type": "string", "enum": ["info", "warning", "error"] },
            "collectionFormat": "multi",
            "name": "logsLevel",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "default": 0,
            "name": "firmwaresTimestamp",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ServerSummary" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/traffic": {
      "get": {
        "summary": "Return if settings netflow.",
        "operationId": "getNmsTraffic",
        "produces": ["application/json"],
        "tags": ["Traffic", "Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/TrafficStatus" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/update": {
      "get": {
        "summary": "Get UNMS update status.",
        "operationId": "getNmsUpdate",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/NmsUpdateStatus" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "summary": "Request UNMS update.",
        "operationId": "putNmsUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2082" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/version": {
      "get": {
        "summary": "Get UNMS version.",
        "operationId": "getNmsVersion",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Version" },
            "description": "Successful"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/simulation/devices": {
      "get": {
        "summary": "Get simulation devices.",
        "operationId": "getSimulationDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationDeviceList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create simulation device.",
        "operationId": "postSimulationDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SimulationDevicePayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationDeviceWithLink" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/simulation/links": {
      "get": {
        "summary": "Get simulation links.",
        "operationId": "getSimulationLinks",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationLinkList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/search": {
      "get": {
        "summary": "Search sites based on name, address, MAC address or IP address.",
        "operationId": "getSitesSearch",
        "parameters": [
          {
            "type": "string",
            "description": "Text to search for in site.",
            "name": "query",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Results per page.",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Results page.",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Type of site to search.",
            "enum": ["site", "endpoint", "client"],
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "Search sites bound with UCRM.",
            "name": "ucrm",
            "in": "query",
            "required": false
          },
          {
            "type": "number",
            "description": "Order sites by distance from this latitude.",
            "name": "latitude",
            "in": "query",
            "required": false
          },
          {
            "type": "number",
            "description": "Order sites by distance from this longitude.",
            "name": "longitude",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SitesList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/traffic": {
      "get": {
        "summary": "Get traffic from each site between two points in time.",
        "operationId": "getSitesTraffic",
        "parameters": [
          {
            "type": "number",
            "description": "Timestamp of the beginning of the interval in milliseconds",
            "name": "from",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Timestamp of the end of the interval in milliseconds",
            "name": "to",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Granularity of the traffic stats",
            "enum": ["fiveMinutes", "oneHour"],
            "name": "granularity",
            "in": "query",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SiteTrafficList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{id}": {
      "get": {
        "summary": "Return a site's detail.",
        "operationId": "getSitesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Include CRM client and service details.",
            "name": "ucrmDetails",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Site" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update site.",
        "operationId": "putSitesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SiteUpdate" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Site" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete site. It's possible to call only on empty site.",
        "operationId": "deleteSitesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/in-progress": {
      "get": {
        "summary": "Return number of tasks in progress state.",
        "operationId": "getTasksInprogress",
        "produces": ["application/json"],
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/InProgress" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/{batchId}": {
      "get": {
        "summary": "Returns a mass upgrade task inner task items.",
        "operationId": "getTasksBatchid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "batchId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Task" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/{tokenId}": {
      "get": {
        "summary": "Get API token by ID.",
        "operationId": "getTokenTokenid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "tokenId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Token"],
        "responses": {
          "200": {
            "description": "Information about token.",
            "schema": { "$ref": "#/definitions/TokenSchema" }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete API token.",
        "operationId": "deleteTokenTokenid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "tokenId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Token"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/totpauth": {
      "get": {
        "summary": "Gets new information for two factor authentication.",
        "operationId": "getUserTotpauth",
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/TwoFactorSecret" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Sets two factor authentication for user.",
        "operationId": "putUserTotpauth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/EnableTotpAuth" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials": {
      "get": {
        "summary": "Get credentials vault status.",
        "operationId": "getVaultCredentials",
        "produces": ["application/json"],
        "tags": ["Vault"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Vault" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Update credentials vault status.",
        "operationId": "postVaultCredentials",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/VaultCredentials" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Vault"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/access-groups/sites/{groupId}": {
      "get": {
        "summary": "Get site access group.",
        "operationId": "getAccessgroupsSitesGroupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SiteAccessGroup" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update site access group.",
        "operationId": "putAccessgroupsSitesGroupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RequestSiteAccessGroup" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SiteAccessGroup" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete site access group.",
        "operationId": "deleteAccessgroupsSitesGroupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/airlink/proxy/airlink-be": {
      "get": {
        "summary": "Get elevation data between two points.",
        "operationId": "getAirlinkProxyAirlinkbe",
        "parameters": [
          {
            "type": "number",
            "description": "Latitude of the first point.",
            "minimum": -90,
            "maximum": 90,
            "name": "lat1",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Longitude of the first point.",
            "minimum": -180,
            "maximum": 180,
            "name": "lon1",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Latitude of the second point.",
            "minimum": -90,
            "maximum": 90,
            "name": "lat2",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Longitude of the second point.",
            "minimum": -180,
            "maximum": 180,
            "name": "lon2",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Number of elevations to get.",
            "default": 256,
            "minimum": 2,
            "maximum": 1024,
            "name": "samples",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirLinkBeSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/airlink/proxy/elevation": {
      "get": {
        "summary": "Get elevation data file.",
        "operationId": "getAirlinkProxyElevation",
        "parameters": [
          {
            "type": "string",
            "description": "Elevation file name.",
            "x-format": { "alphanum": true },
            "x-convert": { "uppercase": true },
            "name": "file",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Elevation file version.",
            "default": 1,
            "name": "version",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/data-links/device/{id}": {
      "get": {
        "summary": "Get data link based on device ID.",
        "operationId": "getDatalinksDeviceId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Data Links"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DataLink" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/data-links/sites/{siteId}": {
      "get": {
        "summary": "List of data links based siteId",
        "operationId": "getDatalinksSitesSiteid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Data Links"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfDataLinks" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}": {
      "get": {
        "summary": "Return AirCube detail.",
        "operationId": "getDevicesAircubesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirCube" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airfibers/{id}": {
      "get": {
        "summary": "Return AirFiber detail.",
        "operationId": "getDevicesAirfibersId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirFiber" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}": {
      "get": {
        "summary": "Return AirMax detail.",
        "operationId": "getDevicesAirmaxesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceAirmaxSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aps/profiles": {
      "get": {
        "summary": "List of all access points and their connection profiles.",
        "operationId": "getDevicesApsProfiles",
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceApsProfileListSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/blackboxes/{id}": {
      "get": {
        "summary": "Return Blackbox device.",
        "operationId": "getDevicesBlackboxesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BlackBox" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/epowers/{id}": {
      "get": {
        "summary": "Get epower device.",
        "operationId": "getDevicesEpowersId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "default": {
            "schema": { "type": "string" },
            "description": "Successful"
          }
        }
      }
    },
    "/devices/erouters/{id}": {
      "get": {
        "summary": "Return EdgeRouter detail.",
        "operationId": "getDevicesEroutersId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceStatusOverview" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/eswitches/{id}": {
      "get": {
        "summary": "Return EdgeSwitch detail.",
        "operationId": "getDevicesEswitchesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceStatusOverview" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/import/status": {
      "get": {
        "summary": "Status of devices import process.",
        "operationId": "getDevicesImportStatus",
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2020" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/mac/{mac}": {
      "get": {
        "summary": "Get info on device by mac address.",
        "operationId": "getDevicesMacMac",
        "parameters": [
          {
            "type": "string",
            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$",
            "name": "mac",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2021" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/olts/{id}": {
      "get": {
        "summary": "Return OLT detail.",
        "operationId": "getDevicesOltsId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Olt" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}": {
      "get": {
        "summary": "Return ONU detail.",
        "operationId": "getDevicesOnusId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Onu" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Update ONU configuration.",
        "operationId": "patchDevicesOnusId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2094" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Onu" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/solarbeams/{id}": {
      "get": {
        "summary": "Return SolarBeam detail.",
        "operationId": "getDevicesSolarbeamsId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceStatusOverview" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/toughswitches/{id}": {
      "get": {
        "summary": "Return ToughSwitch detail.",
        "operationId": "getDevicesToughswitchesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceStatusOverview" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}": {
      "get": {
        "summary": "Return UNMSR detail.",
        "operationId": "getDevicesUnmsrsId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceStatusOverview" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsss/{id}": {
      "get": {
        "summary": "Return UNMS Switch detail.",
        "operationId": "getDevicesUnmsssId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceStatusOverview" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/waves/{id}": {
      "get": {
        "summary": "Return Wave detail.",
        "operationId": "getDevicesWavesId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Wave" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/services": {
      "get": {
        "summary": "Device services.",
        "operationId": "getDevicesIdServices",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "object",
            "required": true,
            "name": "payload",
            "in": "path"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceService" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update device services.",
        "operationId": "putDevicesIdServices",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DeviceService" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceService" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/statistics": {
      "get": {
        "summary": "Return device statistics.",
        "operationId": "getDevicesIdStatistics",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "enum": ["hour", "day", "month", "quarter", "year"],
            "name": "interval",
            "in": "query",
            "required": true
          },
          { "type": "boolean", "default": false, "name": "siri", "in": "query" }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceStatistics" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/mac-table": {
      "get": {
        "summary": "Return mac table of device. [EdgeSwitch, EdgeRouter, AirMax]",
        "operationId": "getDevicesDeviceidMactable",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "column name",
            "enum": [
              "device_id",
              "addresses",
              "vendor",
              "mac",
              "vlan",
              "s_name",
              "hostname",
              "interface_id"
            ],
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "descending sort rows [z-a] or [9-0]",
            "name": "sortDesc",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "items count",
            "minimum": 0,
            "name": "count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "number page",
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          { "type": "string", "name": "search", "in": "query" }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MacTableSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system": {
      "get": {
        "summary": "Device system configuration.",
        "operationId": "getDevicesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceSystemConfiguration" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update a device's system settings.",
        "operationId": "putDevicesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DeviceSystem" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceSystemConfiguration" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/location": {
      "get": {
        "summary": "Return location of device.",
        "operationId": "getDevicesDeviceidLocation",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceLocation" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/supportfile": {
      "get": {
        "summary": "Get device's support file.",
        "operationId": "getDevicesIdSupportfile",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/mac-table-refresh": {
      "get": {
        "summary": "Fetch mac table from device and save to unms. [EdgeSwitch, EdgeRouter, AirMax, UNMSRouter, UNMSSwitch]",
        "operationId": "getDevicesDeviceidMactablerefresh",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/backups": {
      "get": {
        "summary": "Return list of device backups.",
        "operationId": "getDevicesIdBackups",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceBackupList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new device backup.",
        "operationId": "postDevicesIdBackups",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceBackup" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Upload device backup.",
        "operationId": "putDevicesIdBackups",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2083" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceBackup" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces": {
      "get": {
        "summary": "Return list of device interfaces.",
        "operationId": "getDevicesDeviceidInterfaces",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceInterfaceListSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/status/{deviceId}": {
      "get": {
        "summary": "Get device's discovery status.",
        "operationId": "getDiscoveryStatusDeviceid",
        "produces": ["application/json"],
        "tags": ["Discovery"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2024" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gdpr/clients/{id}": {
      "get": {
        "summary": "Download GDPR Client Report.",
        "operationId": "getGdprClientsId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Export"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups/{backupId}": {
      "get": {
        "summary": "Get UNMS backup file.",
        "operationId": "getNmsBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Backups"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete UNMS backup.",
        "operationId": "deleteNmsBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Backups"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/blog/posts": {
      "get": {
        "summary": "Get blog posts.",
        "operationId": "getNmsBlogPosts",
        "parameters": [
          {
            "type": "integer",
            "description": "items count",
            "minimum": 0,
            "name": "count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "number page",
            "minimum": 1,
            "name": "page",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BlogPosts" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/downloads/{token}": {
      "get": {
        "summary": "Download UNMS backups.",
        "operationId": "getNmsDownloadsToken",
        "produces": ["application/json"],
        "tags": ["Backups"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/maintenance/backup": {
      "get": {
        "summary": "Download data backup.",
        "operationId": "getNmsMaintenanceBackup",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Upload data backup.",
        "operationId": "putNmsMaintenanceBackup",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/maintenance/supportinfo": {
      "get": {
        "summary": "Download UNMS support file.",
        "operationId": "getNmsMaintenanceSupportinfo",
        "parameters": [
          {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "name": "period",
            "in": "query",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/questionnaires/active": {
      "get": {
        "summary": "Get currently active questionnaire.",
        "operationId": "getNmsQuestionnairesActive",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ActiveQuestionnaire" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/traffic/blacklist": {
      "get": {
        "summary": "Get subnets that are ignored by traffic collection.",
        "operationId": "getNmsTrafficBlacklist",
        "produces": ["application/json"],
        "tags": ["Server", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BlacklistSchema" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Set subnets that are ignored by traffic collection.",
        "operationId": "postNmsTrafficBlacklist",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/BlacklistSchema" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BlacklistSchema" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/traffic/subnets": {
      "get": {
        "summary": "Get subnets that are relevant for traffic collection.",
        "operationId": "getNmsTrafficSubnets",
        "produces": ["application/json"],
        "tags": ["Server", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SubnetList" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Set subnets that are relevant for traffic collection.",
        "operationId": "postNmsTrafficSubnets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2067" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SubnetList" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/update/log": {
      "get": {
        "summary": "Get latest update log.",
        "operationId": "getNmsUpdateLog",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "type": "string" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/version/latest": {
      "get": {
        "summary": "Get latest UNMS version.",
        "operationId": "getNmsVersionLatest",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "type": "string", "example": "1.0.5" },
            "description": "Successful"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/statistics": {
      "get": {
        "summary": "Get upload and download between site and its parent site",
        "operationId": "getSitesSiteidStatistics",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval for which to fetch traffic stats",
            "enum": ["hour", "day", "month"],
            "name": "interval",
            "in": "query",
            "required": true
          },
          { "type": "boolean", "default": false, "name": "siri", "in": "query" }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SitesStatistics" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/qos": {
      "get": {
        "summary": "Get client Traffic Shaping.",
        "operationId": "getSitesSiteidQos",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SiteTrafficShaping%201" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update client Traffic Shaping.",
        "operationId": "putSitesSiteidQos",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SiteTrafficShaping%201" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SiteTrafficShaping%201" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/traffic": {
      "get": {
        "summary": "Get site traffic between two points in time.",
        "operationId": "getSitesSiteidTraffic",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Timestamp of the beginning of the interval in milliseconds",
            "name": "from",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Timestamp of the end of the interval in milliseconds",
            "name": "to",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Granularity of the traffic stats",
            "enum": ["fiveMinutes", "oneHour"],
            "name": "granularity",
            "in": "query",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/TrafficList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{id}/images": {
      "get": {
        "summary": "Return all site images sorted by image order.",
        "operationId": "getSitesIdImages",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfImages" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Upload new image and create image thumbnail.",
        "operationId": "postSitesIdImages",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{id}/clients": {
      "get": {
        "summary": "List of all clients belonging to the given site.",
        "operationId": "getSitesIdClients",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SitesList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials/devices": {
      "get": {
        "summary": "Get all devices' credentials.",
        "operationId": "getVaultCredentialsDevices",
        "produces": ["application/json"],
        "tags": ["Vault"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Device%20list%20credentials" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/{id}/credentials": {
      "get": {
        "summary": "Get device credentials.",
        "operationId": "getVaultIdCredentials",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Vault"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Device's%20credentials" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/frequency-lists": {
      "get": {
        "summary": "Return AirCube frequency lists.",
        "operationId": "getDevicesAircubesIdFrequencylists",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/FrequencyList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/network": {
      "get": {
        "summary": "Get AirCube network configuration.",
        "operationId": "getDevicesAircubesIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirCubeNetworkConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube network configuration.",
        "operationId": "putDevicesAircubesIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/AirCubeNetworkConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/wireless": {
      "get": {
        "summary": "Get AirCube wireless config",
        "operationId": "getDevicesAircubesIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirCubeWifiConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube wireless configuration.",
        "operationId": "putDevicesAircubesIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/AirCubeWifiConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/stations": {
      "get": {
        "summary": "Return AirCube station list.",
        "operationId": "getDevicesAircubesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2030" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/tx-power-lists": {
      "get": {
        "summary": "Return AirCube tx power lists.",
        "operationId": "getDevicesAircubesIdTxpowerlists",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/TxPowerList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/system": {
      "get": {
        "summary": "Get AirCube system configuration.",
        "operationId": "getDevicesAircubesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirCubeSystemConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube system configuration.",
        "operationId": "putDevicesAircubesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/AirCubeSystemConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airfibers/{id}/stations": {
      "get": {
        "summary": "Return AirFiber station list.",
        "operationId": "getDevicesAirfibersIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2031" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/site-survey": {
      "get": {
        "summary": "Scan sites.",
        "operationId": "getDevicesAirmaxesIdSitesurvey",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfSitesAround" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/frequency-bands": {
      "get": {
        "summary": "Get AirMax stations frequency bands.",
        "operationId": "getDevicesAirmaxesIdFrequencybands",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceIdFrequencyBandsSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/system": {
      "get": {
        "summary": "Get AirMax system config.",
        "operationId": "getDevicesAirmaxesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/stations": {
      "get": {
        "summary": "Return AirMax station list.",
        "operationId": "getDevicesAirmaxesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfAirmaxStations" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/blackboxes/{id}/config": {
      "get": {
        "summary": "Return BlackBox device config.",
        "operationId": "getDevicesBlackboxesIdConfig",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceBlackBoxConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update BlackBox device config.",
        "operationId": "putDevicesBlackboxesIdConfig",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DeviceBlackBoxConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceBlackBoxConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/netflow": {
      "get": {
        "summary": "Get information on device's flow-accounting status.",
        "operationId": "getDevicesEroutersIdNetflow",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "minLength": 1,
            "name": "interfaceId",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2034" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/eswitches/{id}/system": {
      "get": {
        "summary": "Get EdgeSwitch system configuration.",
        "operationId": "getDevicesEswitchesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/network": {
      "get": {
        "summary": "Get an Onu's network settings.",
        "operationId": "getDevicesOnusIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuNetwork" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update an Onu's network settings.",
        "operationId": "putDevicesOnusIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OnuNetwork" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuNetwork" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/system": {
      "get": {
        "summary": "Get an Onu's system settings.",
        "operationId": "getDevicesOnusIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuSystem" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      },
      "put": {
        "summary": "Update an Onu's system settings.",
        "operationId": "putDevicesOnusIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2084" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2084" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/services": {
      "get": {
        "summary": "Get an Onu's services.",
        "operationId": "getDevicesOnusIdServices",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2038" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/vlans": {
      "get": {
        "summary": "Get list of OLT's VLANs.",
        "operationId": "getDevicesOnusIdVlans",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/vlanListSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/onus/{id}/wireless": {
      "get": {
        "summary": "Get an Onu's wireless settings.",
        "operationId": "getDevicesOnusIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuWireless" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      },
      "put": {
        "summary": "Update an Onu's wireless settings.",
        "operationId": "putDevicesOnusIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OnuWireless" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuWireless" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/clients": {
      "get": {
        "summary": "Get an Onu's connected devices MAC addressees.",
        "operationId": "getDevicesOnusIdClients",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuClientList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/toughswitches/{id}/system": {
      "get": {
        "summary": "Get ToughSwitch system configuration.",
        "operationId": "getDevicesToughswitchesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/netflow": {
      "get": {
        "summary": "Get information on device's flow-accounting status.",
        "operationId": "getDevicesUnmsrsIdNetflow",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "minLength": 1,
            "name": "interfaceId",
            "in": "query"
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2034" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsss/{id}/system": {
      "get": {
        "summary": "Get UNMS Switch system configuration.",
        "operationId": "getDevicesUnmsssIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/waves/{id}/stations": {
      "get": {
        "summary": "Return Wave station list.",
        "operationId": "getDevicesWavesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2042" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/backups/{backupId}": {
      "get": {
        "summary": "Return device configuration backup file.",
        "operationId": "getDevicesDeviceidBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "name": "replaceUnmsKey",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update backup.",
        "operationId": "putDevicesDeviceidBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DeviceBackup" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete backup.",
        "operationId": "deleteDevicesDeviceidBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/unms": {
      "get": {
        "summary": "Device specific UNMS settings.",
        "operationId": "getDevicesIdSystemUnms",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsSetting" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update device specific UNMS settings.",
        "operationId": "putDevicesIdSystemUnms",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PayloadUnmsSettings" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsSetting" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}": {
      "get": {
        "summary": "Get interface configuration.",
        "operationId": "getDevicesDeviceidInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceInterfaceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update interface configuration.",
        "operationId": "putDevicesDeviceidInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DeviceInterfaceSchema" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceInterfaceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete interface.",
        "operationId": "deleteDevicesDeviceidInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/installations/{id}/{mac}/configuration": {
      "get": {
        "summary": "Get recommended device configuration.",
        "operationId": "getInstallationsIdMacConfiguration",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$",
            "name": "mac",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "description": "Installation device configuration",
            "schema": {
              "$ref": "#/definitions/InstallationConfigurationSchema"
            }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/backups/{backupId}/download-token": {
      "get": {
        "summary": "Get temporary download token for this backup.",
        "operationId": "getNmsBackupsBackupidDownloadtoken",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Backups"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/maintenance/backup/restore": {
      "get": {
        "summary": "Restores uploaded UNMS backup file.",
        "operationId": "getNmsMaintenanceBackupRestore",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}": {
      "get": {
        "summary": "Return image file.",
        "operationId": "getSitesSiteidImagesImageid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete image.",
        "operationId": "deleteSitesSiteidImagesImageid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Update image.",
        "operationId": "patchSitesSiteidImagesImageid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "imageId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ImageData" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Image" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/traffic/interval": {
      "get": {
        "summary": "Get site traffic for specified interval up to now.",
        "operationId": "getSitesSiteidTrafficInterval",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval for which to fetch traffic stats",
            "enum": ["hour", "day", "month"],
            "name": "interval",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Granularity of the traffic stats",
            "enum": ["fiveMinutes", "oneHour"],
            "name": "granularity",
            "in": "query",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/TrafficList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/traffic/summary": {
      "get": {
        "summary": "Get site total upload and download for specified interval up to now.",
        "operationId": "getSitesSiteidTrafficSummary",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval for which to fetch traffic stats",
            "enum": ["hour", "day", "month"],
            "name": "interval",
            "in": "query",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/TrafficSummary" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/config/network": {
      "get": {
        "summary": "Get AirCube network config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/network' instead.",
        "operationId": "getDevicesAircubesIdConfigNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirCubeNetworkConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube network config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/network' instead.",
        "operationId": "putDevicesAircubesIdConfigNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/AirCubeNetworkConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/config/wireless": {
      "get": {
        "summary": "Get AirCube wireless config. This API endpoint is DEPRECATED.\n        Please refer to '/nms/api/v2.1/devices/aircubes/{id}/wireless' instead.",
        "operationId": "getDevicesAircubesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirCubeWifiConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube wireless config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/wireless' instead.",
        "operationId": "putDevicesAircubesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/AirCubeWifiConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/config/system": {
      "get": {
        "summary": "Get AirCube system config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/system' instead.",
        "operationId": "getDevicesAircubesIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirCubeSystemConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube system settings. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/system' instead.",
        "operationId": "putDevicesAircubesIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/AirCubeSystemConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/config/wireless": {
      "get": {
        "summary": "Get AirMax wireless config.",
        "operationId": "getDevicesAirmaxesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AirMaxWifiConfig" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirMax wireless config.",
        "operationId": "putDevicesAirmaxesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/AirMaxWifiConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/servers": {
      "get": {
        "summary": "Device DHCP servers.",
        "operationId": "getDevicesEroutersIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new DHCP server.",
        "operationId": "postDevicesEroutersIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateDHCPServer" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/ospf": {
      "get": {
        "summary": "Get OSPF configuration.",
        "operationId": "getDevicesEroutersIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/EdgeRouterOspf" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update OSPF configuration.",
        "operationId": "putDevicesEroutersIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2086" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/EdgeRouterOspf" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/leases": {
      "get": {
        "summary": "DHCP IP address leases.",
        "operationId": "getDevicesEroutersIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPLeaseList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create DHCP IP address lease.",
        "operationId": "postDevicesEroutersIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DHCPLease%202" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPLease" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/routes": {
      "get": {
        "summary": "Get all routes.",
        "operationId": "getDevicesEroutersIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfEdgeRouterRoutes" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new static route.",
        "operationId": "postDevicesEroutersIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRouteUpsert" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/EdgeRouterRoute" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Edit static route.",
        "operationId": "putDevicesEroutersIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRouteUpsert" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/EdgeRouterRoute" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/olts/{id}/onu/profiles": {
      "get": {
        "summary": "List of all ONU profiles.",
        "operationId": "getDevicesOltsIdOnuProfiles",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2046" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create ONU profile.",
        "operationId": "postDevicesOltsIdOnuProfiles",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OnuProfile%201" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuProfile" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/olts/{id}/onu/policies": {
      "get": {
        "summary": "Get ONU policies.",
        "operationId": "getDevicesOltsIdOnuPolicies",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuPolicies" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update ONU policies.",
        "operationId": "putDevicesOltsIdOnuPolicies",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OnuPolicies%201" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuPolicies" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/solarbeams/{id}/config/system": {
      "get": {
        "summary": "Get SolarBeam system configuration.",
        "operationId": "getDevicesSolarbeamsIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2047" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update SolarBeam system settings.",
        "operationId": "putDevicesSolarbeamsIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2047" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/dhcp/servers": {
      "get": {
        "summary": "Device DHCP servers.",
        "operationId": "getDevicesUnmsrsIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList%201" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new DHCP server.",
        "operationId": "postDevicesUnmsrsIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateDHCPServer%201" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList%203" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/router/ospf": {
      "get": {
        "summary": "Get OSPF configuration.",
        "operationId": "getDevicesUnmsrsIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsROspf" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update OSPF configuration.",
        "operationId": "putDevicesUnmsrsIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2089" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsROspf" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/router/routes": {
      "get": {
        "summary": "Get all routes.",
        "operationId": "getDevicesUnmsrsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfUnmsRRoutes" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new static route.",
        "operationId": "postDevicesUnmsrsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRouteUpsert" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsRRoute" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Edit static route.",
        "operationId": "putDevicesUnmsrsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRouteUpsert" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsRRoute" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/dhcp/leases": {
      "get": {
        "summary": "DHCP IP address leases.",
        "operationId": "getDevicesUnmsrsIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPLeaseList%201" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create DHCP IP address lease.",
        "operationId": "postDevicesUnmsrsIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DHCPLease%203" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPLease%201" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/udapi/{version}/{udapiUrl*}": {
      "get": {
        "summary": "Udapi device request.",
        "operationId": "getDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      },
      "post": {
        "summary": "Udapi device request.",
        "operationId": "postDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      },
      "put": {
        "summary": "Udapi device request.",
        "operationId": "putDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      },
      "patch": {
        "summary": "Udapi device request.",
        "operationId": "patchDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      },
      "delete": {
        "summary": "Udapi device request.",
        "operationId": "deleteDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/data-link/available": {
      "get": {
        "summary": "Return list of interfaces available to create data link.",
        "operationId": "getDevicesDeviceidInterfacesDatalinkAvailable",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "dataLinkId",
            "in": "query",
            "required": false
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfAvailableInterfaces" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/ospf/areas": {
      "get": {
        "summary": "All OSPF areas.",
        "operationId": "getDevicesEroutersIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "type": "string" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new OSPF area.",
        "operationId": "postDevicesEroutersIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OspfArea" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2079" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/servers/{serverName}": {
      "get": {
        "summary": "Get DHCP server configuration.",
        "operationId": "getDevicesEroutersIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update DHCP server configuration.",
        "operationId": "putDevicesEroutersIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UpdateDHCPServer" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete DHCP server.",
        "operationId": "deleteDevicesEroutersIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/router/ospf/areas": {
      "get": {
        "summary": "All OSPF areas.",
        "operationId": "getDevicesUnmsrsIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "type": "string" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new OSPF area.",
        "operationId": "postDevicesUnmsrsIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OspfArea" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2080" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/dhcp/servers/{serverName}": {
      "get": {
        "summary": "Get DHCP server configuration.",
        "operationId": "getDevicesUnmsrsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList%202" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update DHCP server configuration.",
        "operationId": "putDevicesUnmsrsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UpdateDHCPServer%201" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPServerList%204" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete DHCP server.",
        "operationId": "deleteDevicesUnmsrsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/installations": {
      "post": {
        "summary": "Initiate new installation.",
        "operationId": "postInstallations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/InstallationPayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "description": "New installation.",
            "schema": { "$ref": "#/definitions/InstallationResponse" }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/crm/clients": {
      "post": {
        "summary": "Create CRM client.",
        "operationId": "postCrmClients",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/NewClientSchema" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["CRM"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Site" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/devices/authorize": {
      "post": {
        "summary": "Authorize single or multiple devices.",
        "operationId": "postDevicesAuthorize",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2052" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/authorizefirst": {
      "post": {
        "summary": "Authorize first device in cloud setup.",
        "operationId": "postDevicesAuthorizefirst",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2053" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AuthorizeFirstDeviceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/backups": {
      "post": {
        "summary": "Create and download a new multi device backup.",
        "operationId": "postDevicesBackups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DevicesBackup" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/bulkdelete": {
      "post": {
        "summary": "Delete devices.",
        "operationId": "postDevicesBulkdelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2054" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BulkDeleteDevices" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/import": {
      "post": {
        "summary": "\n      Complex devices import which internally use discovery and creates blackboxes for unreachable and non-UBNT devices.\n      ",
        "operationId": "postDevicesImport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DevicesImport" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/refresh": {
      "post": {
        "summary": "Reset devices specific AES keys to universal AES keys.",
        "operationId": "postDevicesRefresh",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2054" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/import": {
      "post": {
        "summary": "Import devices to discovery.",
        "operationId": "postDiscoveryImport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DiscoveryImportList" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Discovery"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/rescan": {
      "post": {
        "summary": "Restart scanning process.",
        "operationId": "postDiscoveryRescan",
        "produces": ["application/json"],
        "tags": ["Discovery"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/firmwares/delete": {
      "post": {
        "summary": "Batch firmware delete.",
        "operationId": "postFirmwaresDelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ListOfFirmwareIds" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Firmware"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfFirmwares" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/firmwares/download": {
      "post": {
        "summary": "Batch firmware download.",
        "operationId": "postFirmwaresDownload",
        "produces": ["application/json"],
        "tags": ["Firmware"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ListOfFirmwares" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/installations/coverage": {
      "post": {
        "summary": "Returns modulation coverage in monitored area.",
        "operationId": "postInstallationsCoverage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2056" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2058" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "424": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Failed Dependency"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/bulkdelete": {
      "post": {
        "summary": "Delete sites. It's possible to call only on empty sites.",
        "operationId": "postSitesBulkdelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ListOfSiteIds" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BulkDeleteSites" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/devicesiterelations": {
      "post": {
        "summary": "Import sites/endpoints and their devices relations.",
        "operationId": "postSitesDevicesiterelations",
        "parameters": [
          {
            "type": "boolean",
            "description": "\n      If true it will create all sites and clients from payload.\n      In case of duplicate names or ucrmId it will not update them but create duplicates.",
            "default": false,
            "name": "forceCreate",
            "in": "query",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SiteImportList" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Import sites/endpoints and their devices relations.",
        "operationId": "deleteSitesDevicesiterelations",
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/speed-tests/start": {
      "post": {
        "summary": "Execute speed test between two devices.",
        "operationId": "postSpeedtestsStart",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PayloadSpeedTest" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Speed Test"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SpeedTestStart" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/check-credentials": {
      "post": {
        "summary": "Check user credentials.",
        "operationId": "postUserCheckcredentials",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UserCredentials" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization", "Users"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/check-session": {
      "post": {
        "summary": "Check that the session token and cookie are valid.",
        "operationId": "postUserChecksession",
        "produces": ["application/json"],
        "tags": ["Authorization", "Users"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/last-release-notes-seen": {
      "post": {
        "summary": "Updates authenticated last release notes seen version.",
        "operationId": "postUserLastreleasenotesseen",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UserLastReleaseNotesSeen" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/location": {
      "post": {
        "summary": "Updates user's location.",
        "operationId": "postUserLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UserLocationUpdate" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations", "Users"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UserLocation" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login.",
        "operationId": "postUserLogin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Login" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "security": [],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UserLogin" },
            "headers": {
              "x-auth-token": {
                "type": "string",
                "description": "User authorization token"
              }
            },
            "description": "Successful"
          },
          "201": {
            "schema": { "$ref": "#/definitions/TwoFactorToken" },
            "description": "Created"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "summary": "Logout.",
        "operationId": "postUserLogout",
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/import": {
      "post": {
        "summary": "Import users.",
        "operationId": "postUsersImport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ImportUsersListSchema" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Users"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ImportUsersResultListSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ws-api/connection": {
      "post": {
        "summary": "Create websocket connection session.",
        "operationId": "postWsapiConnection",
        "produces": ["application/json"],
        "tags": ["WebSocket"],
        "responses": {
          "201": {
            "schema": { "$ref": "#/definitions/Model%2060" },
            "description": "Created"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "406": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Acceptable"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ws-api/subscription": {
      "post": {
        "summary": "Update websocket subscriptions.",
        "operationId": "postWsapiSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2061" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["WebSocket"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "406": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Acceptable"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/stations": {
      "post": {
        "summary": "Returns AirMax stations for AirMax access points.",
        "operationId": "postDevicesAirmaxesStations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PayloadStationsCount" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ResponseStationsCount" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/blackboxes/config": {
      "post": {
        "summary": "Create new BlackBox device config.",
        "operationId": "postDevicesBlackboxesConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DeviceBlackBoxConfig" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "201": {
            "schema": { "$ref": "#/definitions/Model%2062" },
            "description": "Created"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/connect/other": {
      "post": {
        "summary": "Find and connect other device using IP address",
        "operationId": "postDevicesConnectOther",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ConnectOtherDevice" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/connect/ubnt": {
      "post": {
        "summary": "Find and connect UBNT device using IP and provided credentials.",
        "operationId": "postDevicesConnectUbnt",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ConnectUbntDevice" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/maintenance/disable": {
      "post": {
        "summary": "Disable maintenance mode on one or more devices.",
        "operationId": "postDevicesMaintenanceDisable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MaintenanceModeSchema" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/maintenance/enable": {
      "post": {
        "summary": "Enable maintenance mode on one or more devices.",
        "operationId": "postDevicesMaintenanceEnable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MaintenanceModeSchema" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/unassign": {
      "post": {
        "summary": "Unassign device.",
        "operationId": "postDevicesIdUnassign",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/restart": {
      "post": {
        "summary": "Restart device, device action reboot.",
        "operationId": "postDevicesIdRestart",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/upgrade-to-latest": {
      "post": {
        "summary": "\n      Upgrade device FW to the latest FW version in UNMS. It's possible to track upgrade process via /tasks API.\n      ",
        "operationId": "postDevicesIdUpgradetolatest",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "422": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/authorize": {
      "post": {
        "summary": "Authorize device. [Deprecated in favor of route POST /nms/api/v2.1/devices/authorize]",
        "operationId": "postDevicesIdAuthorize",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2063" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/{id}/reset-link-score": {
      "post": {
        "summary": "Reset link score.",
        "operationId": "postDevicesIdResetlinkscore",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/refresh": {
      "post": {
        "summary": "Reset device specific AES key to universal AES key.",
        "operationId": "postDevicesIdRefresh",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/update": {
      "post": {
        "summary": "Set update of device to realtime profile.",
        "operationId": "postDevicesIdUpdate",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/connect/other": {
      "post": {
        "summary": "Start connect process for discovered other devices.",
        "operationId": "postDiscoveryConnectOther",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2064" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Discovery"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/connect/ubnt": {
      "post": {
        "summary": "Start connect process for discovered UBNT devices.",
        "operationId": "postDiscoveryConnectUbnt",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2065" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Discovery"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/installations/{id}/chat": {
      "post": {
        "summary": "Add chat message to the installation.",
        "operationId": "postInstallationsIdChat",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/InstallationChatPayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "description": "Installation chat message.",
            "schema": { "$ref": "#/definitions/InstallationChatResponse" }
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/backups/create": {
      "post": {
        "summary": "Create UNMS backup.",
        "operationId": "postNmsBackupsCreate",
        "produces": ["application/json"],
        "tags": ["Backups"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsBackup" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/mailserver/test": {
      "post": {
        "summary": "Test mail server settings by sending email.",
        "operationId": "postNmsMailserverTest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2066" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/ucrm/bindings": {
      "post": {
        "summary": "Import UNMS sites to UCRM services relations description.",
        "operationId": "postSitesUcrmBindings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ListOfSiteBindings" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/suspend": {
      "post": {
        "summary": "Suspend client.",
        "operationId": "postSitesSiteidSuspend",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "description": "Result of suspend, updated site",
            "schema": { "$ref": "#/definitions/Site%201" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/unsuspend": {
      "post": {
        "summary": "Unsuspend client.",
        "operationId": "postSitesSiteidUnsuspend",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "description": "Result of unsuspend, updated site",
            "schema": { "$ref": "#/definitions/Site%202" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/{batchId}/cancel": {
      "post": {
        "summary": "Cancel a task.",
        "operationId": "postTasksBatchidCancel",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "batchId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login/totpauth": {
      "post": {
        "summary": "Two Factor Authentication login step 2.",
        "operationId": "postUserLoginTotpauth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Two%20Factor%20Login" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "security": [],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UserLogin" },
            "headers": {
              "x-auth-token": {
                "type": "string",
                "description": "User authorization token"
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login/ubiquiti": {
      "post": {
        "summary": "Login using Ubiquiti SSO.",
        "operationId": "postUserLoginUbiquiti",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SsoLogin" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "security": [],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SsoUserLogin" },
            "headers": {
              "x-auth-token": {
                "type": "string",
                "description": "User authorization token"
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/password/requestreset": {
      "post": {
        "summary": "Request password reset.",
        "operationId": "postUserPasswordRequestreset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PasswordResetRequest" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization", "Users"],
        "security": [],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/password/reset": {
      "post": {
        "summary": "Reset user password.",
        "operationId": "postUserPasswordReset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PasswordResetAction" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization", "Users"],
        "security": [],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/password/strength": {
      "post": {
        "summary": "Check password strength.",
        "operationId": "postUserPasswordStrength",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PasswordStrength" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "security": [],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/PasswordStrengthMetadata" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}/reinvite": {
      "post": {
        "summary": "Reinvites user by email.",
        "operationId": "postUsersIdReinvite",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Users"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials/regenerate": {
      "post": {
        "summary": "Generate new password for devices. Returns status.",
        "operationId": "postVaultCredentialsRegenerate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2054" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Vault"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "412": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Precondition Failed"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials/unlock": {
      "post": {
        "summary": "Unlock private pgp key.",
        "operationId": "postVaultCredentialsUnlock",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/VaultCredentialsUnlock" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Vault"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/update": {
      "post": {
        "summary": "Set update of ONU to realtime profile.",
        "operationId": "postDevicesOnusIdUpdate",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2070" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/block": {
      "post": {
        "summary": "Delete ONU GPON password and set status to blocked.",
        "operationId": "postDevicesOnusIdBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/resetstats": {
      "post": {
        "summary": "Reset onu data statistics.",
        "operationId": "postDevicesOnusIdResetstats",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/unblock": {
      "post": {
        "summary": "Unblock ONU device.",
        "operationId": "postDevicesOnusIdUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/system/unms/hostname": {
      "post": {
        "summary": "Update devices UNMS Key hostname and port.",
        "operationId": "postDevicesSystemUnmsHostname",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadSystemUnmsKeyHostnamePort"
            }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "422": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/system/unms/key": {
      "post": {
        "summary": "Update devices UNMS Key.",
        "operationId": "postDevicesSystemUnmsKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PayloadSystemUnmsKey" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "type": "string" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "422": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/enablelag": {
      "post": {
        "summary": "Enable link aggregation.",
        "operationId": "postDevicesDeviceidInterfacesEnablelag",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/vlan": {
      "post": {
        "summary": "Create new VLAN interface.",
        "operationId": "postDevicesDeviceidInterfacesVlan",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2072" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceInterfaceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/lag": {
      "post": {
        "summary": "Create new Lag interface.",
        "operationId": "postDevicesDeviceidInterfacesLag",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2073" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceInterfaceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/locate/start": {
      "post": {
        "summary": "Start locating indication on device.",
        "operationId": "postDevicesIdLocateStart",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/pppoe": {
      "post": {
        "summary": "Create new PPPoE interface.",
        "operationId": "postDevicesDeviceidInterfacesPppoe",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2074" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceInterfaceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/locate/stop": {
      "post": {
        "summary": "Stop locating indication on device.",
        "operationId": "postDevicesIdLocateStop",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/disablelag": {
      "post": {
        "summary": "Disable link aggregation.",
        "operationId": "postDevicesDeviceidInterfacesDisablelag",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/{id}/iplink/redirect": {
      "post": {
        "summary": "Perform device authorization before opening a devices UI.",
        "operationId": "postDevicesIdIplinkRedirect",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/IpLinkRedirect" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/bridge": {
      "post": {
        "summary": "Create new Bridge interface.",
        "operationId": "postDevicesDeviceidInterfacesBridge",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2077" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeviceInterfaceSchema" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups/{backupId}/restore": {
      "post": {
        "summary": "Restore UNMS backup.",
        "operationId": "postNmsBackupsBackupidRestore",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Backups"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/blog/posts/readall": {
      "post": {
        "summary": "Set all blog posts as read.",
        "operationId": "postNmsBlogPostsReadall",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/questionnaires/{id}/touch": {
      "post": {
        "summary": "Mark the questionnaire as visited. It will pop up later if it is not submitted.",
        "operationId": "postNmsQuestionnairesIdTouch",
        "parameters": [
          {
            "type": "string",
            "enum": ["Q1"],
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/questionnaires/{id}/submit": {
      "post": {
        "summary": "Submit answers to questionnaire.",
        "operationId": "postNmsQuestionnairesIdSubmit",
        "parameters": [
          {
            "type": "string",
            "enum": ["Q1"],
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/QuestionnaireAnswers" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/ucrm/unbind": {
      "post": {
        "summary": "Unbind UCRM services and UNMS site.",
        "operationId": "postSitesSiteidUcrmUnbind",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/ucrm/bind": {
      "post": {
        "summary": "Bind UCRM services and UNMS site.",
        "operationId": "postSitesSiteidUcrmBind",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SiteBinding" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/{id}/credentials/regenerate": {
      "post": {
        "summary": "Generate new password for device. This endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/vault/credentials/regenerate' instead.",
        "operationId": "postVaultIdCredentialsRegenerate",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Vault"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Device's%20credentials" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "412": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Precondition Failed"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/block": {
      "post": {
        "summary": "Block interface.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/backups/{backupId}/apply": {
      "post": {
        "summary": "Update device configuration from backup file.",
        "operationId": "postDevicesDeviceidBackupsBackupidApply",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceId}/resetstats": {
      "post": {
        "summary": "Reset interface statistics.",
        "operationId": "postDevicesDeviceidInterfacesInterfaceidResetstats",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/cable-test": {
      "post": {
        "summary": "Cable test port.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameCabletest",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Data%20coming%20from%20cabkle%20test%20on%20ES%20devices"
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/reset": {
      "post": {
        "summary": "Reset port.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameReset",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2078" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/unblock": {
      "post": {
        "summary": "Unblock interface.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/blog/posts/{postId}/read": {
      "post": {
        "summary": "Set blog post as read.",
        "operationId": "postNmsBlogPostsPostidRead",
        "parameters": [
          {
            "type": "string",
            "description": "post id",
            "x-format": { "guid": true },
            "name": "postId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}/rotateleft": {
      "post": {
        "summary": "Rotate the image 90 degrees to left.",
        "operationId": "postSitesSiteidImagesImageidRotateleft",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}/rotateright": {
      "post": {
        "summary": "Rotate the image 90 degrees to right.",
        "operationId": "postSitesSiteidImagesImageidRotateright",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}/reorder": {
      "post": {
        "summary": "Change image order.",
        "operationId": "postSitesSiteidImagesImageidReorder",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "imageId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/ImageOrder" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Sites"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/routes/delete": {
      "post": {
        "summary": "Delete route.",
        "operationId": "postDevicesEroutersIdRouterRoutesDelete",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRoute" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/EdgeRouterRoute" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/routes/unblock": {
      "post": {
        "summary": "Unblock static route.",
        "operationId": "postDevicesEroutersIdRouterRoutesUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRoute" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/routes/block": {
      "post": {
        "summary": "Block static route.",
        "operationId": "postDevicesEroutersIdRouterRoutesBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRoute" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/router/routes/block": {
      "post": {
        "summary": "Block static route.",
        "operationId": "postDevicesUnmsrsIdRouterRoutesBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRoute" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/router/routes/unblock": {
      "post": {
        "summary": "Unblock static route.",
        "operationId": "postDevicesUnmsrsIdRouterRoutesUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRoute" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/router/routes/delete": {
      "post": {
        "summary": "Delete route.",
        "operationId": "postDevicesUnmsrsIdRouterRoutesDelete",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RouterRoute" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UnmsRRoute" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/unms/key/reachable": {
      "post": {
        "summary": "Checks if the UNMS Key is reachable from the device.",
        "operationId": "postDevicesIdSystemUnmsKeyReachable",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2081" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "type": "boolean" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/unms/hostname/reachable": {
      "post": {
        "summary": "Checks if the hostname and port is reachable from the device.",
        "operationId": "postDevicesIdSystemUnmsHostnameReachable",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PayloadUnmsHostnameReachable" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "type": "boolean" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/servers/{serverName}/block": {
      "post": {
        "summary": "Block DHCP server.",
        "operationId": "postDevicesEroutersIdDhcpServersServernameBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/servers/{serverName}/unblock": {
      "post": {
        "summary": "Unblock DHCP server.",
        "operationId": "postDevicesEroutersIdDhcpServersServernameUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/dhcp/servers/{serverName}/block": {
      "post": {
        "summary": "Block DHCP server.",
        "operationId": "postDevicesUnmsrsIdDhcpServersServernameBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/dhcp/servers/{serverName}/unblock": {
      "post": {
        "summary": "Unblock DHCP server.",
        "operationId": "postDevicesUnmsrsIdDhcpServersServernameUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gateways/{id}": {
      "put": {
        "summary": "Update a gateway.",
        "operationId": "putGatewaysId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%204" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Gateways"],
        "responses": {
          "200": {
            "description": "status of updated gateway with data",
            "schema": { "$ref": "#/definitions/Model%2049" }
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a gateway.",
        "operationId": "deleteGatewaysId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Gateways"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/refresh-certificate": {
      "put": {
        "summary": "Refresh UNMS certificate.",
        "operationId": "putNmsRefreshcertificate",
        "produces": ["application/json"],
        "tags": ["Server"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/disabledtotpauth": {
      "put": {
        "summary": "Disable two factor authorization for user.",
        "operationId": "putUserDisabledtotpauth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/VerifyPasswordAction" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/preferences": {
      "put": {
        "summary": "Updates authenticated user's preferences.",
        "operationId": "putUserPreferences",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/EditUserPreferences" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization", "Users"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Update user.",
        "operationId": "putUsersId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UpdateUser" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Users"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete user.",
        "operationId": "deleteUsersId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          { "type": "boolean", "name": "notifyUser", "in": "query" }
        ],
        "produces": ["application/json"],
        "tags": ["Users"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/User" },
                { "$ref": "#/x-alt-definitions/SsoUserSchema" }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/installations/{id}/{mac}": {
      "put": {
        "summary": "Set device installation data.",
        "operationId": "putInstallationsIdMac",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$",
            "name": "mac",
            "in": "path",
            "required": true
          },
          { "in": "body", "name": "body", "schema": { "type": "string" } }
        ],
        "produces": ["application/json"],
        "tags": ["Installations"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/simulation/devices/{id}": {
      "put": {
        "summary": "Update simulation device.",
        "operationId": "putSimulationDevicesId",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SimulationDevicePayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationDevice" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete simulation device.",
        "operationId": "deleteSimulationDevicesId",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationDevice" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Patch simulation device.",
        "operationId": "patchSimulationDevicesId",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SimulationDevicePartialPayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationDevice" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/simulation/links/{id}": {
      "put": {
        "summary": "Update simulation link.",
        "operationId": "putSimulationLinksId",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SimulationLinkPayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationLink" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Patch simulation link.",
        "operationId": "patchSimulationLinksId",
        "parameters": [
          {
            "type": "string",
            "description": "Token for user authorization.",
            "name": "x-auth-token",
            "in": "header"
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SimulationLinkPartialPayload" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Simulation"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SimulationLink" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/access-groups/sites/{groupId}/{siteId}": {
      "put": {
        "summary": "Add or change access to single site.",
        "operationId": "putAccessgroupsSitesGroupidSiteid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestSiteAccessGroupSingleSite"
            }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Remove access to single site.",
        "operationId": "deleteAccessgroupsSitesGroupidSiteid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Authorization"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "409": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Conflict"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/system/users": {
      "put": {
        "summary": "Update AirMax system users.",
        "operationId": "putDevicesAirmaxesIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2085" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/eswitches/{id}/system/users": {
      "put": {
        "summary": "Update EdgeSwitch system users.",
        "operationId": "putDevicesEswitchesIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2087" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/toughswitches/{id}/system/users": {
      "put": {
        "summary": "Update ToughSwitch system users.",
        "operationId": "putDevicesToughswitchesIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2088" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsss/{id}/system/users": {
      "put": {
        "summary": "Update UNMS Switch system users.",
        "operationId": "putDevicesUnmsssIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2090" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2032" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/ospf": {
      "put": {
        "summary": "Set interface OSPF config.",
        "operationId": "putDevicesDeviceidInterfacesInterfacenameOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model%2091" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Unset interface OSPF config.",
        "operationId": "deleteDevicesDeviceidInterfacesInterfacenameOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/olts/{id}/onu/profiles/{profileId}": {
      "put": {
        "summary": "Update ONU profile.",
        "operationId": "putDevicesOltsIdOnuProfilesProfileid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OnuProfile%201" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OnuProfile" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete ONU profile.",
        "operationId": "deleteDevicesOltsIdOnuProfilesProfileid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "profileId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/ospf/areas/{areaId}": {
      "put": {
        "summary": "Update OSPF area.",
        "operationId": "putDevicesEroutersIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "ip": { "cidr": "optional" } },
            "name": "areaId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OspfArea" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2079" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete OSPF area.",
        "operationId": "deleteDevicesEroutersIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "ip": { "cidr": "optional" } },
            "name": "areaId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/leases/{serverName}/{leaseId}": {
      "put": {
        "summary": "Update DHCP IP lease.",
        "operationId": "putDevicesEroutersIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DHCPLease%202" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPLease" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Update DHCP IP lease.",
        "operationId": "deleteDevicesEroutersIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/router/ospf/areas/{areaId}": {
      "put": {
        "summary": "Update OSPF area.",
        "operationId": "putDevicesUnmsrsIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "ip": { "cidr": "optional" } },
            "name": "areaId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/OspfArea" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2080" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete OSPF area.",
        "operationId": "deleteDevicesUnmsrsIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": { "ip": { "cidr": "optional" } },
            "name": "areaId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unmsrs/{id}/dhcp/leases/{serverName}/{leaseId}": {
      "put": {
        "summary": "Update DHCP IP lease.",
        "operationId": "putDevicesUnmsrsIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DHCPLease%203" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DHCPLease%201" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Update DHCP IP lease.",
        "operationId": "deleteDevicesUnmsrsIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/speed-tests/{id}": {
      "delete": {
        "summary": "Stop speed test between two devices.",
        "operationId": "deleteSpeedtestsId",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Speed Test"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unknown/{ipAddress}": {
      "delete": {
        "summary": "Delete unknown client devices (based on detected network traffic).",
        "operationId": "deleteDevicesUnknownIpaddress",
        "parameters": [
          {
            "type": "string",
            "x-format": { "ip": { "cidr": "optional" } },
            "name": "ipAddress",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices", "Traffic"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Status" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/stations": {
      "delete": {
        "summary": "Delete station from this device.",
        "operationId": "deleteDevicesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": { "guid": true },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/PayloadDeviceStation" }
          }
        ],
        "produces": ["application/json"],
        "tags": ["Devices"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model%2092" },
            "description": "Successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Bad Request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Unauthorized"
          },
          "403": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Forbidden"
          },
          "404": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Not Found"
          },
          "500": {
            "schema": { "$ref": "#/definitions/Error" },
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Model 1": {
      "type": "object",
      "properties": { "token": { "type": "string" } },
      "required": ["token"]
    },
    "validation": { "type": "object" },
    "Error": {
      "type": "object",
      "properties": {
        "statusCode": { "type": "number", "minimum": 400, "maximum": 599 },
        "error": { "type": "string" },
        "message": { "type": "string" },
        "validation": { "$ref": "#/definitions/validation" }
      },
      "required": ["statusCode", "error"]
    },
    "parent": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "name": { "type": "string" },
        "type": { "type": "string" },
        "status": { "type": "string" },
        "parent": { "type": "string", "x-format": { "guid": true } }
      }
    },
    "identification": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "name": { "type": "string" },
        "type": { "type": "string" },
        "status": { "type": "string" },
        "parent": { "$ref": "#/definitions/parent" }
      }
    },
    "DataLinkSite": {
      "type": "object",
      "properties": {
        "identification": { "$ref": "#/definitions/identification" }
      },
      "required": ["identification"]
    },
    "identification 1": {
      "type": "object",
      "properties": {
        "authorized": { "type": "boolean" },
        "category": { "type": "string" },
        "displayName": { "type": "string" },
        "firmwareVersion": { "type": "string" },
        "id": { "type": "string", "x-format": { "guid": true } },
        "ipAddress": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "mac": { "type": "string" },
        "model": { "type": "string" },
        "name": { "type": "string" },
        "platformId": { "type": "string" },
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "serialNumber": { "type": "string" },
        "siteId": { "type": "string", "x-format": { "guid": true } },
        "type": { "type": "string" },
        "updated": { "type": "number" }
      },
      "required": [
        "authorized",
        "category",
        "displayName",
        "id",
        "model",
        "name",
        "role",
        "type"
      ]
    },
    "antenna": {
      "type": "object",
      "properties": {
        "gain": { "type": "number" },
        "name": { "type": "string" }
      }
    },
    "overview": {
      "type": "object",
      "properties": {
        "antenna": { "$ref": "#/definitions/antenna" },
        "channelWidth": { "type": "number" }
      }
    },
    "meta": { "type": "object" },
    "attributes": {
      "type": "object",
      "properties": { "series": { "type": "string" } }
    },
    "DataLinkDevice": {
      "type": "object",
      "properties": {
        "frequency": { "type": "number" },
        "identification": { "$ref": "#/definitions/identification%201" },
        "overview": { "$ref": "#/definitions/overview" },
        "meta": { "$ref": "#/definitions/meta" },
        "signal": { "type": "number" },
        "ssid": { "type": "string" },
        "status": { "type": "string" },
        "attributes": { "$ref": "#/definitions/attributes" }
      },
      "required": ["status", "attributes"]
    },
    "interface": { "type": "object" },
    "from": {
      "type": "object",
      "properties": {
        "site": { "$ref": "#/definitions/DataLinkSite" },
        "device": { "$ref": "#/definitions/DataLinkDevice" },
        "interface": {
          "$ref": "#/definitions/interface",
          "x-alternatives": [
            { "$ref": "#/x-alt-definitions/interface" },
            { "$ref": "#/x-alt-definitions/addressComponents" }
          ]
        }
      }
    },
    "DataLinkSite 1": {
      "type": "object",
      "properties": {
        "identification": { "$ref": "#/definitions/identification" }
      }
    },
    "to": {
      "type": "object",
      "properties": {
        "site": { "$ref": "#/definitions/DataLinkSite%201" },
        "device": { "$ref": "#/definitions/DataLinkDevice" },
        "interface": {
          "$ref": "#/definitions/interface",
          "x-alternatives": [
            { "$ref": "#/x-alt-definitions/interface" },
            { "$ref": "#/x-alt-definitions/addressComponents" }
          ]
        }
      }
    },
    "DataLink": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "from": { "$ref": "#/definitions/from" },
        "to": { "$ref": "#/definitions/to" },
        "ssid": { "type": "string" },
        "type": { "type": "string", "enum": ["ethernet", "pon", "wireless"] },
        "state": {
          "type": "string",
          "enum": ["active", "disabled", "disconnected", "proposed"]
        },
        "frequency": { "type": "number" },
        "signal": { "type": "number" },
        "sitesDistance": {
          "type": "number",
          "description": "Nullable property in meters."
        },
        "devicesDistance": {
          "type": "number",
          "description": "Nullable property in meters."
        },
        "origin": {
          "type": "string",
          "description": "Generated by UNMS or manually added",
          "enum": ["unms", "manual"]
        }
      },
      "required": ["id", "ssid", "frequency", "signal", "origin"]
    },
    "ListOfDataLinks": {
      "type": "array",
      "items": { "$ref": "#/definitions/DataLink" }
    },
    "apDevice": {
      "type": "object",
      "properties": {
        "series": { "type": "string" },
        "id": { "type": "string" },
        "name": { "type": "string" },
        "type": { "type": "string" },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        }
      }
    },
    "DeviceAttributes": {
      "type": "object",
      "properties": {
        "series": { "type": "string" },
        "ssid": { "type": "string", "description": "SSID" },
        "gatewayId": { "type": "string" },
        "hasGatewayInterfaceAvailable": { "type": "boolean" },
        "isGatewaySupported": { "type": "boolean", "example": true },
        "apDevice": { "$ref": "#/definitions/apDevice" },
        "country": {
          "type": "string",
          "enum": [
            "Unknown",
            "Licensed",
            "Afghanistan",
            "Åland Islands",
            "Albania",
            "Algeria",
            "American Samoa",
            "Andorra",
            "Angola",
            "Anguilla",
            "Antarctica",
            "Antigua and Barbuda",
            "Argentina",
            "Armenia",
            "Aruba",
            "Australia",
            "Austria",
            "Azerbaijan",
            "Bahamas",
            "Bahrain",
            "Bangladesh",
            "Barbados",
            "Belarus",
            "Belgium",
            "Belize",
            "Benin",
            "Bermuda",
            "Bhutan",
            "Bolivia",
            "Bonaire, Sint Eustatius and Saba",
            "Bosnia and Herzegovina",
            "Botswana",
            "Bouvet Island",
            "Brazil",
            "British Indian Ocean Territory",
            "Brunei Darussalam",
            "Bulgaria",
            "Burkina Faso",
            "Burundi",
            "Cabo Verde",
            "Cambodia",
            "Cameroon",
            "Canada",
            "Cayman Islands",
            "Central Africa Republic",
            "Chad  ",
            "Chile",
            "China",
            "Christmas Island",
            "Cocos Islands",
            "Colombia",
            "Comoros",
            "Cook Islands",
            "Costa Rica",
            "Côte d'Ivoire",
            "Croatia",
            "Curaçao",
            "Cyprus",
            "Czech Republic",
            "Democratic Republic of the Congo",
            "Denmark",
            "Djibouti",
            "Dominica",
            "Dominican Republic",
            "Ecuador",
            "Egypt",
            "El Salvador",
            "Equatorial Guinea",
            "Eritrea",
            "Estonia",
            "Eswatini",
            "Ethiopia",
            "Falkland Islands",
            "Faroe Islands",
            "Fiji",
            "Finland",
            "France",
            "French Guiana",
            "French Polynesia",
            "French Southern Territories",
            "Gabon",
            "Gambia",
            "Georgia",
            "Germany",
            "Ghana",
            "Gibraltar",
            "Greece",
            "Greenland",
            "Grenada",
            "Guadeloupe",
            "Guam",
            "Guatemala",
            "Guernsey",
            "Guinea",
            "Guinea-Bissau",
            "Guyana",
            "Haiti",
            "Heard Island and McDonald Islands",
            "Honduras",
            "Hong Kong",
            "Hungary",
            "Iceland",
            "India",
            "Indonesia",
            "Iraq",
            "Ireland",
            "Isle of Man",
            "Israel",
            "Italy",
            "Jamaica",
            "Japan",
            "Jersey",
            "Jordan",
            "Kazakhstan",
            "Kenya",
            "Kiribati",
            "Kuwait",
            "Kyrgyzstan",
            "Lao People's Democratic Republic",
            "Latvia",
            "Lebanon",
            "Lesotho",
            "Liberia",
            "Libya",
            "Liechtenstein",
            "Lithuania",
            "Luxembourg",
            "Macau Sar",
            "Macedonia, Fyro",
            "Madagascar",
            "Malawi",
            "Malaysia",
            "Maldives",
            "Mali",
            "Malta",
            "Marshall Islands",
            "Martinique",
            "Mauritania",
            "Mauritius",
            "Mayotte",
            "Mexico",
            "Micronesia",
            "Moldova",
            "Monaco",
            "Mongolia",
            "Montenegro",
            "Montserrat",
            "Morocco",
            "Mozambique",
            "Myanmar",
            "Namibia",
            "Nauru",
            "Nepal",
            "Netherlands",
            "New Caledonia",
            "New Zealand",
            "Nicaragua",
            "Niger",
            "Nigeria",
            "Niue",
            "Norfolk Island",
            "Northern Mariana Islands",
            "Norway",
            "Oman",
            "Pakistan",
            "Palau",
            "Panama",
            "Papua New Guinea",
            "Paraguay",
            "Peru",
            "Philippines",
            "Pitcairn",
            "Poland",
            "Portugal",
            "Puerto Rico",
            "Qatar",
            "Republic of Korea",
            "Republic of Serbia",
            "Republic of Seychelles",
            "Republic of the Congo",
            "Reunion",
            "Romania",
            "Russia",
            "Rwanda",
            "Saint Barthélemy",
            "Saint Helena, Ascension and Tristan da Cunh",
            "Saint Kitts and Nevis",
            "Saint Lucia",
            "Saint Martin",
            "Saint Pierre Miquelon",
            "Saint Vincent Grenadiens",
            "Samoa",
            "San Marino",
            "Sao Tome and Principe",
            "Saudi Arabia",
            "Senegal",
            "Sierra Leone",
            "Singapore",
            "Sint Maarten",
            "Slovakia",
            "Slovenia",
            "Solomon Islands",
            "Somalia",
            "South Africa",
            "South Georgia and the South Sandwich Islands",
            "South Sudan",
            "Spain",
            "Sri Lanka",
            "State of Palestine",
            "Suriname",
            "Svalbard and Jan Mayen",
            "Sweden",
            "Switzerland",
            "Taiwan",
            "Tajikistan",
            "Tanzania",
            "Thailand",
            "Timor-Leste",
            "Togo",
            "Tokelau",
            "Tonga",
            "Trinidad and Tobago",
            "Tunisia",
            "Turkey",
            "Turkmenistan",
            "Turks Caicos",
            "Tuvalu",
            "Uganda",
            "Ukraine",
            "United Arab Emirates",
            "United Kingdom",
            "United States",
            "Uruguay",
            "Uzbekistan",
            "Vanuatu",
            "Vatican City State",
            "Venezuela",
            "Vietnam",
            "Virgin Islands (British)",
            "Virgin Islands (U.S.)",
            "Wallis Futuna",
            "Western Sahara",
            "Yemen",
            "Zambia",
            "Zimbabwe"
          ]
        }
      }
    },
    "visibleBy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "name": { "type": "string" }
      },
      "required": ["id", "type", "model", "name"]
    },
    "discovery": {
      "type": "object",
      "properties": {
        "configured": { "type": "boolean" },
        "error": { "type": "string" },
        "protocol": { "type": "string" },
        "snmpCommunity": { "type": "string" },
        "status": { "type": "string" },
        "isProcessing": { "type": "boolean" },
        "visibleBy": { "$ref": "#/definitions/visibleBy" }
      }
    },
    "vlans": {
      "type": "object",
      "properties": {
        "interface": {
          "$ref": "#/definitions/interface",
          "x-alternatives": [
            { "$ref": "#/x-alt-definitions/interface" },
            { "$ref": "#/x-alt-definitions/addressComponents" }
          ]
        },
        "vlanId": {
          "$ref": "#/definitions/interface",
          "x-alternatives": [
            { "$ref": "#/x-alt-definitions/interface" },
            { "$ref": "#/x-alt-definitions/addressComponents" }
          ]
        }
      }
    },
    "eswitch": {
      "type": "object",
      "properties": { "vlans": { "$ref": "#/definitions/vlans" } }
    },
    "unmss": {
      "type": "object",
      "properties": { "vlans": { "$ref": "#/definitions/vlans" } }
    },
    "prerelease": {
      "type": "array",
      "items": {
        "oneOf": [
          {"type": "string"},
          {"type": "number"}
        ]
      }
    },
    "current": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "latest": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "semver": {
      "type": "object",
      "properties": {
        "current": { "$ref": "#/definitions/current" },
        "latest": { "$ref": "#/definitions/latest" }
      },
      "required": ["current", "latest"]
    },
    "DeviceFirmware": {
      "type": "object",
      "properties": {
        "current": {
          "type": "string",
          "description": "Current firmware version."
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version."
        },
        "compatible": {
          "type": "boolean",
          "description": "Is firmware compatible with UNMS"
        },
        "semver": { "$ref": "#/definitions/semver" }
      },
      "required": ["current", "latest", "compatible"]
    },
    "parent 1": { "type": "object" },
    "site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Site ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Site name.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": ["site", "endpoint"]
        },
        "parent": { "$ref": "#/definitions/parent%201" }
      },
      "required": ["id", "status", "type"]
    },
    "DeviceIdentification": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS."
        },
        "category": {
          "type": "string",
          "enum": ["optical", "wired", "wireless", "accessories"]
        },
        "displayName": {
          "type": "string",
          "description": "UNMS device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "hostname": { "type": "string" },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UFiber OLT."
        },
        "name": { "type": "string" },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UFiber NanoG",
            "UFiber Loco",
            "UFiber Wifi",
            "UFiber Instant",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "lturocket",
            "GP",
            "ltu60",
            "SunMax",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "serialNumber": { "type": "string" },
        "site": {
          "$ref": "#/definitions/site",
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/site" }]
        },
        "started": { "type": "string", "format": "date-time" },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "wanInterfaceId": { "type": "string" },
        "updated": { "type": "string", "format": "date-time" }
      },
      "required": ["id"]
    },
    "latestBackup": {
      "type": "object",
      "description": "Latest backup info.",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Latest backup timestamp.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "id": { "type": "string", "description": "Latest backup ID." }
      },
      "required": ["timestamp", "id"]
    },
    "DeviceMeta": {
      "type": "object",
      "properties": {
        "alias": { "type": "string", "maxLength": 30 },
        "customIpAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "failedMessageDecryption": { "type": "boolean" },
        "maintenance": { "type": "boolean" },
        "note": { "type": "string", "maxLength": 300 },
        "restartTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": ["failedMessageDecryption", "maintenance", "restartTimestamp"]
    },
    "linkScore": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalDownlinkCapacity": { "type": "integer" },
        "theoreticalUplinkCapacity": { "type": "integer" }
      }
    },
    "wirelessActiveInterfaceIds": {
      "type": "array",
      "description": "Main active radios currently used to send/receive traffic.",
      "example": ["wlan0"],
      "items": { "type": "string" }
    },
    "DeviceOverview": {
      "type": "object",
      "description": "Read-only basic device/client overview attributes.",
      "properties": {
        "batteryCapacity": { "type": "number" },
        "batteryTime": { "type": "number" },
        "biasCurrent": {
          "type": "number",
          "description": "Nullable property in milliamperes."
        },
        "canUpgrade": {
          "type": "boolean",
          "description": "TRUE if device can be upgraded."
        },
        "cpu": { "type": "number", "description": "Current cpu load." },
        "createdAt": { "type": "string", "format": "date-time" },
        "distance": {
          "type": "number",
          "description": "Nullable property in meters."
        },
        "frequency": {
          "type": "number",
          "description": "Nullable prop; current frequency (only for airmax devices)."
        },
        "isLocateRunning": {
          "type": "boolean",
          "description": "TRUE if device is in location mode."
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Last seen timestamp in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "powerStatus": { "type": "number" },
        "runningOnBattery": {
          "type": "boolean",
          "description": "TRUE if device is running on battery"
        },
        "ram": { "type": "number", "description": "Current memory usage." },
        "signal": {
          "type": "number",
          "description": "Nullable prop; current signal level (only for airmax devices), for example -55 dBm.",
          "example": "-55"
        },
        "signalMax": {
          "type": "number",
          "description": "Theoretical max local signal level.",
          "example": "-55"
        },
        "remoteSignalMax": {
          "type": "number",
          "description": "Theoretical max remote signal level.",
          "example": "-55"
        },
        "stationsCount": {
          "type": "number",
          "description": "Count of stations (only for airmax and aircube)."
        },
        "status": {
          "type": "string",
          "description": "Read-only value generated by UNMS."
        },
        "temperature": { "type": "number" },
        "uptime": { "type": "number", "description": "Uptime in seconds." },
        "voltage": {
          "type": "number",
          "description": "System input voltage in V."
        },
        "linkScore": { "$ref": "#/definitions/linkScore" },
        "downlinkCapacity": { "type": "integer" },
        "uplinkCapacity": { "type": "integer" },
        "theoreticalUplinkCapacity": { "type": "integer" },
        "theoreticalDownlinkCapacity": { "type": "integer" },
        "theoreticalMaxUplinkCapacity": { "type": "integer" },
        "theoreticalMaxDownlinkCapacity": { "type": "integer" },
        "antenna": { "$ref": "#/definitions/antenna" },
        "channelWidth": { "type": "number" },
        "transmitPower": { "type": "number" },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "wirelessActiveInterfaceIds": {
          "$ref": "#/definitions/wirelessActiveInterfaceIds"
        }
      }
    },
    "firmware": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "DeviceUpgrade": {
      "type": "object",
      "properties": {
        "status": { "type": "string" },
        "progress": { "type": "number" },
        "firmware": { "$ref": "#/definitions/firmware" }
      },
      "required": ["status", "progress", "firmware"]
    },
    "Model 2": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string",
          "example": "192.168.1.100/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "origin": {
          "type": "string",
          "example": "dhcp",
          "enum": ["dhcp", "slaac", "link-local", "static"]
        },
        "type": {
          "type": "string",
          "example": "dynamic",
          "enum": ["dynamic", "static", "dhcp", "dhcpv6"]
        },
        "version": { "type": "string", "example": "v4", "enum": ["v4", "v6"] }
      },
      "required": ["cidr", "type"]
    },
    "addresses": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%202" }
    },
    "InterfaceIdentification": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Nullable string.",
          "example": "Uplink"
        },
        "displayName": {
          "type": "string",
          "description": "Computed display name from name and description",
          "example": "eth0"
        },
        "mac": {
          "type": "string",
          "example": "fc:ec:da:03:bb:a8",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "name": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        },
        "position": {
          "type": "integer",
          "description": "Physical port position.",
          "example": 0
        },
        "type": { "type": "string", "example": "eth" }
      }
    },
    "ports": { "type": "array", "items": { "type": "string" } },
    "stp": {
      "type": "object",
      "properties": {
        "edgePort": { "type": "string", "enum": ["auto", "enable", "disable"] },
        "enabled": { "type": "boolean" },
        "pathCost": { "type": "number" },
        "portPriority": { "type": "number" }
      }
    },
    "lag": {
      "type": "object",
      "properties": {
        "mode": { "type": "string" },
        "vlanNative": { "type": "number" },
        "includeVlans": { "type": "string" },
        "ports": { "$ref": "#/definitions/ports" },
        "loadBalance": { "type": "string" },
        "linkTrap": { "type": "boolean" },
        "dhcpSnooping": { "type": "boolean" },
        "static": { "type": "boolean" },
        "stp": { "$ref": "#/definitions/stp" }
      }
    },
    "ospfConfig": {
      "type": "object",
      "properties": {
        "auth": { "type": "string", "example": null },
        "authKey": { "type": "string", "example": null },
        "cost": { "type": "string", "example": null },
        "enabled": { "type": "boolean", "example": false }
      }
    },
    "InterfaceOspf": {
      "type": "object",
      "properties": {
        "ospfCapable": { "type": "boolean", "example": true },
        "ospfConfig": { "$ref": "#/definitions/ospfConfig" }
      },
      "required": ["ospfConfig"]
    },
    "capacities": {
      "type": "array",
      "items": { "type": "string", "enum": ["off"] }
    },
    "InterfacePoe": {
      "type": "object",
      "properties": {
        "capacities": { "$ref": "#/definitions/capacities" },
        "output": {
          "type": "string",
          "example": "off",
          "enum": [
            "off",
            "active",
            "24v",
            "48v",
            "54v",
            "24v-4pair",
            "54v-4pair",
            "pthru"
          ]
        }
      }
    },
    "capacities 1": {
      "type": "array",
      "items": { "type": "string", "enum": ["auto"] }
    },
    "InterfaceSpeeds": {
      "type": "object",
      "properties": {
        "capacities": { "$ref": "#/definitions/capacities%201" },
        "speed": {
          "type": "string",
          "example": "auto",
          "enum": [
            "auto",
            "autodetect",
            "10-half",
            "10-full",
            "100-half",
            "100-full",
            "300-full",
            "1000-half",
            "1000-full",
            "2500-full",
            "10000-full"
          ]
        }
      }
    },
    "interfacePppoe": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "parent": { "type": "string" },
        "account": { "type": "string" },
        "password": { "type": "string" }
      }
    },
    "interfaceSfp": {
      "type": "object",
      "properties": {
        "present": { "type": "boolean" },
        "vendor": { "type": "string" },
        "part": { "type": "string" },
        "maxSpeed": { "type": "integer" },
        "olt": { "type": "boolean" },
        "vlanNative": { "type": "object" },
        "includeVlans": { "type": "object" }
      }
    },
    "loadBalanceValues": { "type": "array", "items": { "type": "string" } },
    "capabilities": {
      "type": "object",
      "properties": {
        "supportCableTest": { "type": "boolean" },
        "supportReset": { "type": "boolean" },
        "loadBalanceValues": { "$ref": "#/definitions/loadBalanceValues" }
      }
    },
    "InterfaceStatistics": {
      "type": "object",
      "properties": {
        "dropped": { "type": "number", "example": 0 },
        "errors": { "type": "number", "example": 0 },
        "rxbytes": { "type": "number", "example": 7487858302 },
        "rxrate": { "type": "number", "example": 3440 },
        "txbytes": { "type": "number", "example": 368737600 },
        "txrate": { "type": "number", "example": 736 },
        "poePower": { "type": "number", "example": 736 }
      }
    },
    "InterfaceStatus": {
      "type": "object",
      "properties": {
        "currentSpeed": { "type": "string", "example": "1000-full" },
        "description": { "type": "string", "example": "1 Gbps - Full Duplex" },
        "plugged": { "type": "boolean", "example": true },
        "speed": { "type": "string", "example": "auto" },
        "status": { "type": "string", "example": "active" }
      }
    },
    "vid": { "type": "array", "items": { "type": "string" } },
    "Model 3": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "pvid": { "type": "integer" },
        "vid": { "$ref": "#/definitions/vid" },
        "displayName": { "type": "string" },
        "enabled": { "type": "boolean" },
        "hasAddress": { "type": "boolean" }
      },
      "required": ["id", "enabled", "hasAddress"]
    },
    "ports 1": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%203" }
    },
    "switch": {
      "type": "object",
      "example": null,
      "properties": {
        "ports": { "$ref": "#/definitions/ports%201" },
        "vlanCapable": { "type": "boolean" },
        "vlanEnabled": { "type": "boolean" }
      },
      "required": ["ports", "vlanCapable", "vlanEnabled"]
    },
    "pingWatchdog": {
      "type": "object",
      "example": null,
      "properties": {
        "address": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "enabled": { "type": "boolean" },
        "failureCount": { "type": "number" },
        "interval": { "type": "number" },
        "offDelay": { "type": "number" },
        "startDelay": { "type": "number" }
      }
    },
    "speedLimit": {
      "type": "object",
      "example": null,
      "properties": {
        "enabled": { "type": "boolean" },
        "rx": { "type": "number", "minimum": 0, "maximum": 1000000 },
        "tx": { "type": "number", "minimum": 0, "maximum": 1000000 }
      }
    },
    "stp 1": {
      "type": "object",
      "example": null,
      "properties": {
        "edgePort": { "type": "string", "enum": ["auto", "enable", "disable"] },
        "enabled": { "type": "boolean" },
        "pathCost": { "type": "number" },
        "portPriority": { "type": "number" }
      }
    },
    "port": {
      "type": "object",
      "description": "Properties specific for ports on ES and TS devices.",
      "example": null,
      "properties": {
        "dhcpSnooping": { "type": "boolean" },
        "flowControl": { "type": "boolean" },
        "isolated": { "type": "boolean" },
        "pingWatchdog": { "$ref": "#/definitions/pingWatchdog" },
        "speedLimit": { "$ref": "#/definitions/speedLimit" },
        "routed": { "type": "boolean" },
        "stp": { "$ref": "#/definitions/stp%201" }
      }
    },
    "vlan": {
      "type": "object",
      "description": "VLAN config",
      "properties": {
        "id": { "type": "integer" }
      }
    },
    "dfsLockouts": {
      "type": "array",
      "description": "DFS lockout frequencies",
      "example": [5440, 5460],
      "items": { "type": "number" }
    },
    "antenna 1": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "gain": { "type": "number" },
        "cableLoss": { "type": "number" }
      }
    },
    "wireless": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string",
          "description": "SSID",
          "example": "ubnt.com"
        },
        "frequency": {
          "type": "number",
          "description": "Frequency in MHz, on which radio is listening.",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBand": {
          "type": "string",
          "enum": ["2.4GHz", "3GHz", "4GHz", "5GHz", "11GHz", "24GHz", "60GHz"]
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width in MHz radio is operating on.",
          "example": 40,
          "minimum": 0
        },
        "dfsTimeRemaining": {
          "type": "number",
          "description": "DFS wait time remaining.",
          "example": 0
        },
        "dfsTimeTotal": {
          "type": "number",
          "description": "DFS expected total wait time.",
          "example": 0
        },
        "dfsLockouts": { "$ref": "#/definitions/dfsLockouts" },
        "key": { "type": "string", "description": "Pre shared key" },
        "security": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "transmitPower": { "type": "number" },
        "transmitEirp": { "type": "number" },
        "frameLength": { "type": "number", "minimum": 0 },
        "minTxPower": { "type": "number" },
        "maxTxPower": { "type": "number" },
        "antenna": { "$ref": "#/definitions/antenna%201" }
      },
      "required": [
        "ssid",
        "frequency",
        "channelWidth",
        "dfsTimeRemaining",
        "dfsTimeTotal",
        "dfsLockouts",
        "key",
        "security",
        "frameLength"
      ]
    },
    "DeviceIdentification 1": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS."
        },
        "category": {
          "type": "string",
          "enum": ["optical", "wired", "wireless", "accessories"]
        },
        "displayName": {
          "type": "string",
          "description": "UNMS device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "hostname": { "type": "string" },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UFiber OLT."
        },
        "name": { "type": "string" },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UFiber NanoG",
            "UFiber Loco",
            "UFiber Wifi",
            "UFiber Instant",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "lturocket",
            "GP",
            "ltu60",
            "SunMax",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "serialNumber": { "type": "string" },
        "site": {
          "$ref": "#/definitions/site",
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/site" }]
        },
        "started": { "type": "string", "format": "date-time" },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "wanInterfaceId": { "type": "string" },
        "updated": { "type": "string", "format": "date-time" }
      },
      "required": ["id"]
    },
    "rxChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [30, 40],
      "items": { "type": "integer" }
    },
    "txChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [30, 40],
      "items": { "type": "integer" }
    },
    "statistics": {
      "type": "object",
      "properties": {
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer",
          "description": "Theoretical downlink capacity."
        },
        "theoreticalUplinkCapacity": {
          "type": "integer",
          "description": "Theoretical uplink capacity."
        }
      }
    },
    "Station": {
      "type": "object",
      "properties": {
        "connected": { "type": "boolean" },
        "deviceIdentification": {
          "$ref": "#/definitions/DeviceIdentification%201"
        },
        "distance": {
          "type": "integer",
          "description": "Distance in meters.",
          "example": 100
        },
        "downlinkCapacity": { "type": "integer" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latency": {
          "type": "integer",
          "description": "Latency in milliseconds.",
          "example": 10
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "interfaceId": {
          "type": "string",
          "description": "Interface name, where the station is connected.",
          "example": "wlan0"
        },
        "name": { "type": "string", "example": "lab-ISM5-1" },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "radio": {
          "type": "string",
          "enum": ["2.4GHz", "3GHz", "4GHz", "5GHz", "11GHz", "24GHz", "60GHz"]
        },
        "rxBytes": {
          "type": "integer",
          "description": "Received bytes.",
          "example": 926000
        },
        "rxModulation": {
          "type": "string",
          "description": "Local Rx data rate.",
          "example": 8
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 456
        },
        "rxSignal": {
          "type": "integer",
          "description": "Local Signal in dBm.",
          "example": -44
        },
        "rxChain": { "$ref": "#/definitions/rxChain" },
        "rxChainMask": { "type": "integer", "example": 2 },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "txBytes": {
          "type": "integer",
          "description": "Transmitted/Sent bytes.",
          "example": 436000
        },
        "txModulation": {
          "type": "string",
          "description": "Remote Rx data rate.",
          "example": 8
        },
        "txRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 325
        },
        "txSignal": {
          "type": "integer",
          "description": "Remote Signal in dBm.",
          "example": -39
        },
        "txChain": { "$ref": "#/definitions/txChain" },
        "txChainMask": { "type": "integer", "example": 2 },
        "noiseFloor": {
          "type": "integer",
          "description": "Wireless noise level in dBm",
          "example": -84
        },
        "uplinkCapacity": { "type": "integer" },
        "uptime": { "type": "integer" },
        "vendor": { "type": "string", "example": "Ubiquiti Networks" },
        "statistics": { "$ref": "#/definitions/statistics" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" }
      },
      "required": [
        "rxChain",
        "rxChainMask",
        "txChain",
        "txChainMask",
        "noiseFloor"
      ]
    },
    "stations": {
      "type": "array",
      "items": { "$ref": "#/definitions/Station" }
    },
    "DeviceInterfaceSchema": {
      "type": "object",
      "properties": {
        "addresses": { "$ref": "#/definitions/addresses" },
        "bridge": { "type": "string" },
        "canDisplayStatistics": { "type": "boolean", "example": true },
        "enabled": { "type": "boolean", "example": true },
        "identification": { "$ref": "#/definitions/InterfaceIdentification" },
        "isSwitchedPort": { "type": "boolean" },
        "lag": { "$ref": "#/definitions/lag" },
        "mtu": { "type": "number" },
        "ospf": { "$ref": "#/definitions/InterfaceOspf" },
        "poe": { "$ref": "#/definitions/InterfacePoe" },
        "speeds": { "$ref": "#/definitions/InterfaceSpeeds" },
        "pppoe": { "$ref": "#/definitions/interfacePppoe" },
        "proxyARP": { "type": "boolean" },
        "sfp": { "$ref": "#/definitions/interfaceSfp" },
        "speed": {
          "type": "string",
          "example": "auto",
          "pattern": "^autodetect|auto|\\d+-(half|full)$"
        },
        "capabilities": { "$ref": "#/definitions/capabilities" },
        "statistics": { "$ref": "#/definitions/InterfaceStatistics" },
        "status": { "$ref": "#/definitions/InterfaceStatus" },
        "switch": { "$ref": "#/definitions/switch" },
        "visible": { "type": "boolean", "example": true },
        "vlan": { "$ref": "#/definitions/vlan" },
        "port": { "$ref": "#/definitions/port" },
        "wireless": { "$ref": "#/definitions/wireless" },
        "stations": { "$ref": "#/definitions/stations" }
      },
      "required": ["identification"]
    },
    "DeviceInterfaceListSchema": {
      "type": "array",
      "items": { "$ref": "#/definitions/DeviceInterfaceSchema" }
    },
    "DeviceStatusOverview": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "ListOfDevices": {
      "type": "array",
      "description": "Read-only overview for device list.",
      "items": { "$ref": "#/definitions/DeviceStatusOverview" }
    },
    "models": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "UF-Nano",
          "UF-Loco",
          "UF-Wifi",
          "UF-Instant",
          "UF-OLT",
          "UF-OLT4",
          "UNMS-R-PRO",
          "UNMS-R-Lite",
          "UNMS-S-Lite",
          "ER-X",
          "ER-X-SFP",
          "ERLite-3",
          "ERPoe-5",
          "ERPro-8",
          "ER-8",
          "ER-8-XG",
          "ER-4",
          "ER-6P",
          "ER-12",
          "ER-12P",
          "ER-10X",
          "EP-R8",
          "EP-R6",
          "EP-S16",
          "ES-12F",
          "ES-16-150W",
          "ES-24-250W",
          "ES-24-500W",
          "ES-24-Lite",
          "ES-48-500W",
          "ES-48-750W",
          "ES-48-Lite",
          "ES-8-150W",
          "ES-16-XG",
          "ES-10XP",
          "ES-10X",
          "ES-18X",
          "ES-26X",
          "EP-54V-150W",
          "EP-24V-72W",
          "EP-54V-72W",
          "TSW-PoE",
          "TSW-PoE PRO",
          "ACB-AC",
          "ACB-ISP",
          "ACB-LOCO",
          "AF11FX",
          "AF24",
          "AF24HD",
          "AF2X",
          "AF3X",
          "AF4X",
          "AF5",
          "AF5U",
          "AF5X",
          "AF-5XHD",
          "AF-LTU",
          "LTU-LITE",
          "AF-LTU5",
          "LTU-Rocket",
          "AFLTULR",
          "AF60",
          "AF60-LR",
          "WaveAP",
          "WaveCPE",
          "GBE-LR",
          "GBE",
          "GBE-Plus",
          "GBE-AP",
          "R2N",
          "R2T",
          "R5N",
          "R6N",
          "R36-GPS",
          "RM3-GPS",
          "R2N-GPS",
          "R5N-GPS",
          "R9N-GPS",
          "R5T-GPS",
          "RM3",
          "R36",
          "R9N",
          "N2N",
          "N5N",
          "N6N",
          "NS3",
          "N36",
          "N9N",
          "N9S",
          "LM2",
          "LM5",
          "B2N",
          "B2T",
          "B5N",
          "B5T",
          "BAC",
          "AG2",
          "AG2-HP",
          "AG5",
          "AG5-HP",
          "p2N",
          "p5N",
          "M25",
          "P2B-400",
          "P5B-300",
          "P5B-300-ISO",
          "P5B-400",
          "P5B-400-ISO",
          "P5B-620",
          "LB5-120",
          "LB5",
          "N5B",
          "N5B-16",
          "N5B-19",
          "N5B-300",
          "N5B-400",
          "N5B-Client",
          "N2B",
          "N2B-13",
          "N2B-400",
          "PAP",
          "LAP-HP",
          "LAP",
          "AGW",
          "AGW-LR",
          "AGW-Pro",
          "AGW-Installer",
          "PB5",
          "PB3",
          "P36",
          "PBM10",
          "NB5",
          "NB2",
          "NB3",
          "B36",
          "NB9",
          "SM5",
          "WM5",
          "IS-M5",
          "Loco5AC",
          "NS-5AC",
          "R5AC-PTMP",
          "R5AC-PTP",
          "R5AC-Lite",
          "R5AC-PRISM",
          "R2AC-Prism",
          "R2AC-Gen2",
          "RP-5AC-Gen2",
          "NBE-2AC-13",
          "NBE-5AC-16",
          "NBE-5AC-19",
          "NBE-5AC-Gen2",
          "PBE-5AC-300",
          "PBE-5AC-300-ISO",
          "PBE-5AC-400",
          "PBE-5AC-400-ISO",
          "PBE-5AC-500",
          "PBE-5AC-500-ISO",
          "PBE-5AC-620",
          "PBE-5AC-620-ISO",
          "PBE-2AC-400",
          "PBE-2AC-400-ISO",
          "PBE-5AC-X-Gen2",
          "PBE-5AC-Gen2",
          "PBE-5AC-ISO-Gen2",
          "PBE-5AC-400-ISO-Gen2",
          "LBE-5AC-16-120",
          "LAP-120",
          "LBE-5AC-23",
          "LBE-5AC-Gen2",
          "LBE-5AC-LR",
          "LAP-GPS",
          "IS-5AC",
          "PS-5AC",
          "SolarSwitch",
          "SolarPoint",
          "BulletAC-IP67",
          "B-DB-AC",
          "UNKNOWN"
        ]
      }
    },
    "FirmwareIdentification": {
      "type": "object",
      "properties": {
        "filename": { "type": "string" },
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "lite": { "type": "boolean" },
        "models": { "$ref": "#/definitions/models" },
        "origin": { "type": "string" },
        "platformId": {
          "type": "string",
          "enum": [
            "UF_NANOG",
            "UF_LOCO",
            "UF_WIFI",
            "UF_INSTANT",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "eswh",
            "esgh",
            "ES",
            "esx",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "aflturocket",
            "GP",
            "ltu60",
            "SB",
            "UNKNOWN"
          ]
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UFiber NanoG",
            "UFiber Loco",
            "UFiber Wifi",
            "UFiber Instant",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "lturocket",
            "GP",
            "ltu60",
            "SunMax",
            "UNKNOWN"
          ]
        },
        "stable": { "type": "boolean" },
        "version": { "type": "string" }
      }
    },
    "FirmwareSemVer": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "FirmwareSupport": {
      "type": "object",
      "properties": {
        "airMaxCustomScripts": { "type": "boolean" },
        "UNMS": { "type": "boolean" }
      }
    },
    "Firmware": {
      "type": "object",
      "properties": {
        "date": { "type": "integer", "minimum": 0 },
        "identification": { "$ref": "#/definitions/FirmwareIdentification" },
        "semver": { "$ref": "#/definitions/FirmwareSemVer" },
        "size": { "type": "number" },
        "supports": { "$ref": "#/definitions/FirmwareSupport" },
        "url": { "type": "string" }
      }
    },
    "ListOfFirmwares": {
      "type": "array",
      "items": { "$ref": "#/definitions/Firmware" }
    },
    "suspendAllowedIps": {
      "type": "array",
      "description": "Array of IP addresses in IPv4 format that are allowed for suspended clients.",
      "example": ["192.168.1.2"],
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "forbidden" } }
      }
    },
    "connectivityIpQueue": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "type": "string",
          "description": "Interface name, for example eth0 which handles connectivity to WAN network. If null, speed limits are applied on all interfaces.",
          "example": "eth0"
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Max speed given in kbps. If 0 value is configured then ingress traffic for this tariff is blocked. If null, no maximum speed is assumed.",
          "example": 1000,
          "minimum": 0
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Max speed given in kbps. If 0 value is configured then egress traffic for this tariff is blocked. If null, no maximum speed is assumed.",
          "example": 1000,
          "minimum": 0
        },
        "clientsUploadSpeedSum": {
          "type": "integer",
          "description": "Sum of all client sites traffic shaping upload values in kbps.",
          "example": 1000,
          "minimum": 0
        },
        "clientsDownloadSpeedSum": {
          "type": "integer",
          "description": "Sum of all client sites traffic shaping download values in kbps.",
          "example": 1000,
          "minimum": 0
        }
      },
      "required": ["interfaceId", "downloadSpeed", "uploadSpeed"]
    },
    "defaultIpQueue": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable configuration for QoS queue for IPs without any specific queue. The main purpose of this configuration is to block new devices without any active queue. If null, traffic not belonging to any queue is not limited.",
          "example": true,
          "default": false
        },
        "downloadSpeed": {
          "type": "integer",
          "minimum": 0,
          "x-alternatives": [{ "type": "integer", "minimum": 0 }]
        },
        "uploadSpeed": {
          "type": "integer",
          "minimum": 0,
          "x-alternatives": [{ "type": "integer", "minimum": 0 }]
        }
      }
    },
    "device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of gateway device",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Device name",
          "example": "Main gateway"
        },
        "status": {
          "type": "string",
          "description": "Device status",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "Device IP address in CIDR format",
          "example": "192.168.1.2/24",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "description": "Device MAC address",
          "example": "78:8a:20:f9:4e:78",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "Device firmware version",
          "example": "2.0.7"
        },
        "platformId": {
          "type": "string",
          "description": "Device platform id",
          "example": "e50"
        },
        "model": {
          "type": "string",
          "description": "Device model",
          "example": "ER-X"
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter"
        },
        "category": {
          "type": "string",
          "description": "Device category",
          "example": "wired",
          "enum": ["optical", "wired", "wireless", "accessories"]
        }
      },
      "required": ["id", "status", "mac"]
    },
    "Model 4": {
      "type": "object",
      "properties": {
        "netflowEnabled": {
          "type": "boolean",
          "description": "Set to true to enable NetFlow.",
          "example": true
        },
        "netflowAlerts": {
          "type": "boolean",
          "description": "Set to true to enable alerts.",
          "example": true
        },
        "qosEnabled": {
          "type": "boolean",
          "description": "Set to true to enable traffic shaping.",
          "example": true
        },
        "suspend": {
          "type": "boolean",
          "description": "Set to true to enable suspend.",
          "example": true
        },
        "suspendAllowedIps": { "$ref": "#/definitions/suspendAllowedIps" },
        "connectivityIpQueue": { "$ref": "#/definitions/connectivityIpQueue" },
        "defaultIpQueue": { "$ref": "#/definitions/defaultIpQueue" },
        "forceOverwrite": {
          "type": "boolean",
          "description": "Set to true to force write new NetFlow settings to device over current device's settings.",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "Gateway id",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "lastTrafficSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of last traffic in ISO format",
          "example": "2019-08-22T09:49:24.675Z"
        },
        "netflowStatus": {
          "type": "string",
          "description": "Netflow status",
          "example": "inactive",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        },
        "device": { "$ref": "#/definitions/device" }
      },
      "required": [
        "netflowEnabled",
        "netflowAlerts",
        "qosEnabled",
        "suspend",
        "id",
        "lastTrafficSeen",
        "device"
      ]
    },
    "ListOfGateways": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%204" }
    },
    "tags": {
      "type": "array",
      "description": "Log tags.",
      "example": ["device", "device-state"],
      "minItems": 0,
      "items": {
        "type": "string",
        "enum": [
          "login",
          "device",
          "email-dispatch",
          "nms-backup",
          "nms-update",
          "nms-error",
          "device-state",
          "device-backup",
          "device-upgrade",
          "device-interface",
          "site"
        ]
      }
    },
    "DeviceIdentification 2": {
      "type": "object",
      "description": "Log respective device identification object.",
      "example": null,
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS."
        },
        "category": {
          "type": "string",
          "enum": ["optical", "wired", "wireless", "accessories"]
        },
        "displayName": {
          "type": "string",
          "description": "UNMS device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "hostname": { "type": "string" },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UFiber OLT."
        },
        "name": { "type": "string" },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UFiber NanoG",
            "UFiber Loco",
            "UFiber Wifi",
            "UFiber Instant",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "lturocket",
            "GP",
            "ltu60",
            "SunMax",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "serialNumber": { "type": "string" },
        "site": {
          "$ref": "#/definitions/site",
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/site" }]
        },
        "started": { "type": "string", "format": "date-time" },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "wanInterfaceId": { "type": "string" },
        "updated": { "type": "string", "format": "date-time" }
      },
      "required": ["id"]
    },
    "deviceMetadata": {
      "type": "object",
      "description": "Log respective device meta data object.",
      "example": null,
      "properties": { "alias": { "type": "string" } }
    },
    "site 1": {
      "type": "object",
      "description": "Log respective site.",
      "example": null,
      "properties": {
        "id": {
          "type": "string",
          "description": "Log respective site id",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Log respective site name",
          "example": "Site name"
        },
        "parent": {
          "type": "string",
          "description": "Log respective site parent id",
          "example": "2020-05-12T10:19:10.056Z"
        },
        "status": {
          "type": "string",
          "description": "Site current status",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "type": {
          "type": "string",
          "description": "Type of site.",
          "example": "client",
          "enum": ["site", "endpoint", "client"]
        }
      },
      "required": ["id", "name", "parent"]
    },
    "Model 5": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Log item id.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the log creation.",
          "example": "2020-05-12T10:19:10.056Z"
        },
        "message": {
          "type": "string",
          "description": "Log message",
          "example": "lab-AF5XHD-1 MAC: 78:8a:20:5f:2a:ff, IP: 10.43.21.41 was deleted."
        },
        "level": {
          "type": "string",
          "description": "Log severity level",
          "example": "info",
          "enum": ["info", "warning", "error"]
        },
        "tags": { "$ref": "#/definitions/tags" },
        "device": { "$ref": "#/definitions/DeviceIdentification%202" },
        "deviceMetadata": { "$ref": "#/definitions/deviceMetadata" },
        "site": { "$ref": "#/definitions/site%201" }
      },
      "required": ["id", "timestamp", "message", "level", "tags"]
    },
    "items": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%205" }
    },
    "aggregation": {
      "type": "object",
      "properties": {
        "allCount": { "type": "integer", "minimum": 0 },
        "infoCount": { "type": "integer", "minimum": 0 },
        "warningCount": { "type": "integer", "minimum": 0 },
        "errorCount": { "type": "integer", "minimum": 0 }
      },
      "required": ["allCount", "infoCount", "warningCount", "errorCount"]
    },
    "pagination": {
      "type": "object",
      "properties": {
        "total": { "type": "integer", "minimum": 0 },
        "count": { "type": "integer", "minimum": 0 },
        "page": { "type": "integer", "minimum": 0 },
        "pages": { "type": "integer", "minimum": 0 }
      },
      "required": ["total", "count", "page", "pages"]
    },
    "Model 6": {
      "type": "object",
      "properties": {
        "items": { "$ref": "#/definitions/items" },
        "aggregation": { "$ref": "#/definitions/aggregation" },
        "pagination": { "$ref": "#/definitions/pagination" }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "Number of items per page"
        },
        "total": { "type": "number", "description": "Total number of items" },
        "page": { "type": "number", "description": "Ordinal number of page" },
        "pages": { "type": "number", "description": "Total number of pages" }
      },
      "required": ["count", "total", "page", "pages"]
    },
    "aggregation 1": {
      "type": "object",
      "properties": {
        "allCount": { "type": "number" },
        "outageCount": { "type": "number" },
        "unreachableCount": { "type": "number" }
      }
    },
    "parent 2": { "type": "object" },
    "SiteIdentification": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "status": {
          "type": "string",
          "enum": ["active", "disconnected", "inactive"]
        },
        "name": { "type": "string" },
        "type": { "type": "string", "enum": ["site", "endpoint", "client"] },
        "parent": { "$ref": "#/definitions/parent%202" }
      },
      "required": ["id", "status", "name", "type"]
    },
    "parent 3": { "type": "object" },
    "site 2": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "status": {
          "type": "string",
          "enum": ["active", "disconnected", "inactive"]
        },
        "name": { "type": "string" },
        "type": { "type": "string", "enum": ["site", "endpoint", "client"] },
        "parent": { "$ref": "#/definitions/parent%203" }
      },
      "required": ["id", "status", "name", "type"]
    },
    "DeviceOutage": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "Technical ID only for UNMS" },
        "firmwareVersion": { "type": "string" },
        "model": { "type": "string" },
        "modelName": { "type": "string" },
        "name": { "type": "string" },
        "displayName": { "type": "string" },
        "mac": {
          "type": "string",
          "description": "Available only for clients (ONU)"
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "category": {
          "type": "string",
          "enum": ["optical", "wired", "wireless", "accessories"]
        },
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "site": { "$ref": "#/definitions/site%202" },
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS"
        },
        "serialNumber": { "type": "string" },
        "platformId": { "type": "string" },
        "platformName": { "type": "string" },
        "ip": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": [
        "id",
        "firmwareVersion",
        "model",
        "modelName",
        "name",
        "displayName",
        "mac",
        "type",
        "category",
        "role",
        "authorized",
        "serialNumber",
        "platformId",
        "platformName",
        "ip"
      ]
    },
    "OutageDeviceMetadata": {
      "type": "object",
      "properties": { "alias": { "type": "string" } },
      "required": ["alias"]
    },
    "Model 7": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "startTimestamp": { "type": "string" },
        "endTimestamp": { "type": "string" },
        "type": { "type": "string", "enum": ["outage", "unreachable"] },
        "aggregatedTime": { "type": "number", "minimum": 1 },
        "ongoing": { "type": "boolean" },
        "inProgress": { "type": "boolean" },
        "site": { "$ref": "#/definitions/SiteIdentification" },
        "device": { "$ref": "#/definitions/DeviceOutage" },
        "deviceMetadata": { "$ref": "#/definitions/OutageDeviceMetadata" }
      },
      "required": [
        "id",
        "startTimestamp",
        "endTimestamp",
        "aggregatedTime",
        "ongoing",
        "inProgress"
      ]
    },
    "items 1": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%207" }
    },
    "Outages": {
      "type": "object",
      "properties": {
        "pagination": { "$ref": "#/definitions/Pagination" },
        "aggregation": { "$ref": "#/definitions/aggregation%201" },
        "items": { "$ref": "#/definitions/items%201" }
      }
    },
    "antenna 2": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "maxLength": 200 },
        "gain": { "type": "integer" },
        "angle": { "type": "number" },
        "custom": { "type": "boolean" }
      },
      "required": ["name", "gain", "angle", "custom"]
    },
    "SimulationDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "link": {
          "$ref": "#/definitions/interface",
          "x-alternatives": [
            { "$ref": "#/x-alt-definitions/interface" },
            { "$ref": "#/x-alt-definitions/addressComponents" }
          ]
        },
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "role": { "type": "string", "enum": ["ap", "cpe"] },
        "apType": { "type": "string", "enum": ["ptp", "ptmp"] },
        "name": { "type": "string", "maxLength": 200 },
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "height": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "altitude": { "type": "number", "minimum": -10000, "maximum": 10000 },
        "radius": { "type": "number", "enum": [0] },
        "coverageCpeHeight": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "deviceName": {
          "type": "string",
          "example": "NanoStation 5AC Loco",
          "maxLength": 200
        },
        "eirp": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "frequency": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "antenna": { "$ref": "#/definitions/antenna%202" },
        "channelWidth": {
          "type": "number",
          "example": 40,
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "color": { "type": "string", "example": "#ff00ff", "maxLength": 20 },
        "heading": { "type": "number" },
        "updatedAt": { "type": "string", "format": "date-time" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": [
        "id",
        "deviceId",
        "role",
        "apType",
        "name",
        "latitude",
        "longitude",
        "height",
        "altitude",
        "radius",
        "coverageCpeHeight",
        "deviceName",
        "eirp",
        "frequency",
        "antenna",
        "channelWidth",
        "color",
        "heading",
        "updatedAt",
        "createdAt"
      ]
    },
    "SimulationDeviceList": {
      "type": "array",
      "items": { "$ref": "#/definitions/SimulationDevice" }
    },
    "terrain": {
      "type": "object",
      "properties": {
        "altitudeAp": { "type": "number", "minimum": -10000, "maximum": 10000 },
        "altitudeCpe": { "type": "number", "minimum": -10000, "maximum": 10000 }
      },
      "required": ["altitudeAp", "altitudeCpe"]
    },
    "SimulationLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "apDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "cpeDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "quality": { "type": "string", "maxLength": 200 },
        "terrain": { "$ref": "#/definitions/terrain" },
        "updatedAt": { "type": "string", "format": "date-time" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": [
        "id",
        "apDeviceId",
        "cpeDeviceId",
        "quality",
        "terrain",
        "updatedAt",
        "createdAt"
      ]
    },
    "SimulationLinkList": {
      "type": "array",
      "items": { "$ref": "#/definitions/SimulationLink" }
    },
    "Simulation": {
      "type": "object",
      "properties": {
        "devices": { "$ref": "#/definitions/SimulationDeviceList" },
        "links": { "$ref": "#/definitions/SimulationLinkList" }
      }
    },
    "parent 4": { "type": "object" },
    "SiteIdentificationDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": ["site", "endpoint"]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "parent": { "$ref": "#/definitions/parent%204" },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        }
      },
      "required": ["id", "type", "name", "status"]
    },
    "SiteDescriptionContact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact person."
        },
        "email": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        }
      }
    },
    "SiteDescriptionLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 86.922623,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": 27.986065,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["longitude", "latitude"]
    },
    "SiteEndpointIdentification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": ["site", "endpoint"]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "parentId": {
          "type": "string",
          "description": "Parent siteId.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status",
        "parentId",
        "updated",
        "suspended"
      ]
    },
    "SiteEndpointsList": {
      "type": "array",
      "items": { "$ref": "#/definitions/SiteEndpointIdentification" }
    },
    "ipAddresses": {
      "type": "array",
      "description": "Devices IPs assigned to a site/client site.",
      "items": {
        "type": "string",
        "example": "192.168.10.12",
        "x-format": { "ip": { "cidr": "optional" } }
      }
    },
    "SiteDescription": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "contact": { "$ref": "#/definitions/SiteDescriptionContact" },
        "location": { "$ref": "#/definitions/SiteDescriptionLocation" },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "endpoints": { "$ref": "#/definitions/SiteEndpointsList" },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices in this site.",
          "example": 1
        },
        "deviceListStatus": {
          "type": "string",
          "description": "Deprecated. Use site.identification.status instead.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "ipAddresses": { "$ref": "#/definitions/ipAddresses" }
      }
    },
    "Model 8": {
      "type": "object",
      "description": "Users who will receive notifications. Notification type must be set to custom.",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "username": { "type": "string" },
        "email": { "type": "string", "x-format": { "email": true } }
      },
      "required": ["id", "username", "email"]
    },
    "users": {
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/definitions/Model%208" }
    },
    "SiteNotifications": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "What notification system is used by this site.",
          "example": "system",
          "enum": ["system", "custom", "none"]
        },
        "users": { "$ref": "#/definitions/users" }
      },
      "required": ["type", "users"]
    },
    "SiteTrafficShaping": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE if optional Traffic Shaping queue are activated.",
          "example": true
        },
        "propagation": {
          "type": "string",
          "description": "\n      Whether or not set Traffic Shaping on Client devices like, CPEs and ONUs.\n      Enabling this will lower your traffic in local network.\n    ",
          "enum": ["all", "gateway"]
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Download speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": { "positive": true }
        },
        "downloadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at downloadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": { "positive": true }
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Upload speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": { "positive": true }
        },
        "uploadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at uploadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": { "positive": true }
        },
        "aggregation": {
          "type": "integer",
          "description": "\n      Number indicating how many times the guaranteed rate is less than the maximum allowed bandwidth.\n      Null for auto calculation by UNMS.\n    ",
          "example": 2,
          "minimum": 1,
          "maximum": 10000
        }
      },
      "required": [
        "enabled",
        "downloadSpeed",
        "downloadBurstSize",
        "uploadSpeed",
        "uploadBurstSize",
        "aggregation"
      ]
    },
    "client": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "123" },
        "name": {
          "type": "string",
          "description": "CRM client's name.",
          "example": "John Smith"
        }
      },
      "required": ["id", "name"]
    },
    "service": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "123" },
        "name": {
          "type": "string",
          "description": "Service name.",
          "example": "Building B"
        },
        "status": {
          "type": "number",
          "description": "Service status.",
          "example": 7,
          "enum": [0, 1, 2, 3, 4, 5, 6, 7]
        },
        "activeFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the service was activated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "tariffId": {
          "type": "string",
          "description": "ID of the tariff (service plan) used for this service.",
          "example": "1"
        }
      },
      "required": ["id", "name", "status", "activeFrom", "tariffId"]
    },
    "SiteUcrmDescription": {
      "type": "object",
      "properties": {
        "client": { "$ref": "#/definitions/client" },
        "service": { "$ref": "#/definitions/service" }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "identification": { "$ref": "#/definitions/SiteIdentificationDetail" },
        "description": { "$ref": "#/definitions/SiteDescription" },
        "notifications": { "$ref": "#/definitions/SiteNotifications" },
        "qos": { "$ref": "#/definitions/SiteTrafficShaping" },
        "ucrm": { "$ref": "#/definitions/SiteUcrmDescription" }
      },
      "required": ["identification", "description", "notifications", "qos"]
    },
    "SitesList": { "type": "array", "items": { "$ref": "#/definitions/Site" } },
    "SpeedTestObject": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": ["uplink", "downlink", "bidirectional"]
        },
        "resultIndex": { "type": "number" },
        "speed": { "type": "number" },
        "speedTestId": { "type": "string", "x-format": { "guid": true } },
        "timestamp": { "type": "number" }
      },
      "required": [
        "direction",
        "resultIndex",
        "speed",
        "speedTestId",
        "timestamp"
      ]
    },
    "data": {
      "type": "array",
      "items": { "$ref": "#/definitions/SpeedTestObject" }
    },
    "SpeedTest": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/data" },
        "masterId": { "type": "string", "x-format": { "guid": true } },
        "slaveId": { "type": "string", "x-format": { "guid": true } },
        "speedTestId": { "type": "string", "x-format": { "guid": true } },
        "timeLimit": { "type": "number" },
        "timestamp": { "type": "number" }
      },
      "required": ["masterId", "slaveId", "speedTestId", "timestamp"]
    },
    "ListOfSpeedTests": {
      "type": "array",
      "items": { "$ref": "#/definitions/SpeedTest" }
    },
    "TaskAggregation": {
      "type": "object",
      "properties": {
        "queued": { "type": "integer", "minimum": 0 },
        "in-progress": { "type": "integer", "minimum": 0 },
        "success": { "type": "integer", "minimum": 0 },
        "failed": { "type": "integer", "minimum": 0 },
        "canceled": { "type": "integer", "minimum": 0 }
      }
    },
    "identification 2": {
      "type": "object",
      "properties": { "id": { "type": "string" } }
    },
    "tasks": {
      "type": "object",
      "properties": {
        "canceled": { "type": "integer", "minimum": 0 },
        "failed": { "type": "integer", "minimum": 0 },
        "inProgress": { "type": "integer", "minimum": 0 },
        "queued": { "type": "integer", "minimum": 0 },
        "successful": { "type": "integer", "minimum": 0 },
        "total": { "type": "integer", "minimum": 0 }
      }
    },
    "TaskItem": {
      "type": "object",
      "properties": {
        "identification": { "$ref": "#/definitions/identification%202" },
        "startTimestamp": { "type": "integer", "minimum": 0 },
        "endTimestamp": { "type": "integer", "minimum": 0 },
        "progress": { "type": "number", "minimum": 0 },
        "status": { "type": "string", "example": "success" },
        "tasks": { "$ref": "#/definitions/tasks" }
      }
    },
    "ListOfTaskItems": {
      "type": "array",
      "items": { "$ref": "#/definitions/TaskItem" }
    },
    "Task": {
      "type": "object",
      "properties": {
        "pagination": { "$ref": "#/definitions/Pagination" },
        "aggregation": { "$ref": "#/definitions/TaskAggregation" },
        "items": { "$ref": "#/definitions/ListOfTaskItems" }
      }
    },
    "scope": {
      "type": "array",
      "description": "Authorization scope of this token.",
      "example": ["admin"],
      "items": { "type": "string" }
    },
    "user": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Id of the user this token represents.",
          "example": "261aa95a-0270-4416-894a-616a0cecedbb"
        },
        "username": {
          "type": "string",
          "description": "User name of the user this token represents.",
          "example": "JohnDoe"
        }
      },
      "required": ["userId"]
    },
    "TokenSchema": {
      "type": "object",
      "description": "Information about token.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Token ID, not the token itself.",
          "example": "d37ecad9-2643-4555-981a-23ee30086807",
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Human readable token name.",
          "example": "Mobile App"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was created.",
          "example": "2011-10-03T14:48:00.000Z"
        },
        "lastUsed": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was last used. If null then it has not been used yet.",
          "example": "2011-10-04T14:48:00.000Z"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token will expire unless it is renewed. If null than it will never expire.",
          "example": "2011-10-05T14:48:00.000Z"
        },
        "maxExpiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Latest time when the token will expire. If null then it will never expire.",
          "example": "2011-11-05T14:48:00.000Z"
        },
        "scope": { "$ref": "#/definitions/scope" },
        "userId": {
          "type": "string",
          "description": "Id of the user this token represents. Null if the token is not bound to any user.",
          "example": "261aa95a-0270-4416-894a-616a0cecedbb"
        },
        "user": { "$ref": "#/definitions/user" },
        "transient": {
          "type": "boolean",
          "description": "If true then the token will be deleted when server restarts.",
          "example": false
        },
        "currentSession": {
          "type": "boolean",
          "description": "If true than this token was used in this request.",
          "example": false
        },
        "meta": {
          "type": "string",
          "description": "Token metadata.",
          "example": ""
        }
      },
      "required": [
        "id",
        "name",
        "createdAt",
        "lastUsed",
        "expiresAt",
        "maxExpiresAt",
        "scope",
        "transient",
        "currentSession"
      ]
    },
    "TokenListSchema": {
      "type": "array",
      "description": "List of tokens.",
      "items": { "$ref": "#/definitions/TokenSchema" }
    },
    "tableConfig": { "type": "object" },
    "mapConfig": {
      "type": "object",
      "properties": { "showClientSites": { "type": "boolean" } }
    },
    "preferences": { "type": "object" },
    "UserLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the location was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": ["latitude", "longitude", "updated"]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "username": { "type": "string", "example": "admin" },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": { "email": true }
        },
        "firstName": { "type": "string", "example": "John" },
        "lastName": { "type": "string", "example": "Doe" },
        "alerts": { "type": "boolean" },
        "totpAuthEnabled": { "type": "boolean" },
        "role": {
          "type": "string",
          "description": "Role of this user in UNMS. 'anonymous' if user is only allowed to access CRM.",
          "example": "admin",
          "enum": ["superadmin", "admin", "guest", "anonymous", "installer"]
        },
        "presentationMode": {
          "type": "boolean",
          "description": "Obsolete.",
          "example": false
        },
        "forceChangePassword": { "type": "boolean" },
        "tableConfig": { "$ref": "#/definitions/tableConfig" },
        "mapConfig": { "$ref": "#/definitions/mapConfig" },
        "preferences": { "$ref": "#/definitions/preferences" },
        "lastLogItemId": { "type": "string" },
        "location": { "$ref": "#/definitions/UserLocation" },
        "sessionTimeout": {
          "type": "integer",
          "description": "Session expiration in milliseconds, max 30 days.",
          "example": 3600000,
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "lastNewsSeenDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last news check time in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "Last seen version of release notes.",
          "example": "1.0.0-alpha"
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM user that is bound with this user.",
          "example": "123"
        },
        "ucrmRole": {
          "type": "string",
          "description": "Role of this user in UCRM. 'null' if user is not allowed to access UCRM.",
          "example": "1"
        },
        "homeScreen": {
          "type": "string",
          "description": "Where should the user be redirected after login.",
          "example": "/nms",
          "enum": ["/nms", "/crm"]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the user can log in or not.",
          "example": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the user was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "alerts",
        "forceChangePassword",
        "location",
        "keepMeSignedIn",
        "lastNewsSeenDate",
        "lastReleaseNotesSeen",
        "ucrmId",
        "ucrmRole",
        "homeScreen",
        "enabled",
        "updated"
      ]
    },
    "UserList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User",
        "x-alternatives": [
          { "$ref": "#/x-alt-definitions/User" },
          { "$ref": "#/x-alt-definitions/SsoUserSchema" }
        ]
      }
    },
    "SiteAccessGroupSingleSite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "isReadOnly": {
          "type": "boolean",
          "description": "If true, access to site is read-only. If false, access to site is read-write.",
          "example": true
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Building B"
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "endpoint",
          "enum": ["site", "endpoint", "client"]
        }
      },
      "required": ["id", "isReadOnly", "name", "type"]
    },
    "whitelist": {
      "type": "array",
      "description": "List of accessible sites.",
      "items": { "$ref": "#/definitions/SiteAccessGroupSingleSite" }
    },
    "site 3": {
      "type": "object",
      "properties": {
        "all": {
          "type": "number",
          "description": "Number of sites with read access.",
          "example": 4
        },
        "readOnly": {
          "type": "number",
          "description": "Number of sites with read-only access.",
          "example": 1
        },
        "readWrite": {
          "type": "number",
          "description": "Number of sites with read-write access.",
          "example": 3
        }
      },
      "required": ["all", "readOnly", "readWrite"]
    },
    "endpoint": {
      "type": "object",
      "properties": {
        "all": {
          "type": "number",
          "description": "Number of client sites with read access.",
          "example": 3
        },
        "readOnly": {
          "type": "number",
          "description": "Number of client sites with read-only access.",
          "example": 1
        },
        "readWrite": {
          "type": "number",
          "description": "Number of client sites with read-write access.",
          "example": 2
        }
      },
      "required": ["all", "readOnly", "readWrite"]
    },
    "user 1": {
      "type": "object",
      "properties": {
        "all": {
          "type": "number",
          "description": "Number of users using this access group.",
          "example": 1
        }
      },
      "required": ["all"]
    },
    "counts": {
      "type": "object",
      "properties": {
        "site": { "$ref": "#/definitions/site%203" },
        "endpoint": { "$ref": "#/definitions/endpoint" },
        "user": { "$ref": "#/definitions/user%201" }
      }
    },
    "SiteAccessGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Access group id.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": { "type": "string", "example": "Section 1", "maxLength": 100 },
        "isAuto": {
          "type": "boolean",
          "description": "If true the access group is automatically generated and cannot be edited.",
          "example": false
        },
        "isInternal": {
          "type": "boolean",
          "description": "If true the access group is internal. User should not be able to select it",
          "example": false
        },
        "whitelist": { "$ref": "#/definitions/whitelist" },
        "counts": { "$ref": "#/definitions/counts" }
      },
      "required": ["name", "isAuto", "isInternal"]
    },
    "SiteAccessGroupList": {
      "type": "array",
      "items": { "$ref": "#/definitions/SiteAccessGroup" }
    },
    "CrmRoleSchema": {
      "type": "object",
      "description": "CRM user role.",
      "properties": {
        "id": {
          "type": "string",
          "description": "CRM user role id.",
          "example": "1"
        },
        "name": {
          "type": "string",
          "description": "Role name.",
          "example": "Admin Group"
        }
      },
      "required": ["id", "name"]
    },
    "CrmRoleListSchema": {
      "type": "array",
      "items": { "$ref": "#/definitions/CrmRoleSchema" }
    },
    "CrmServicePlanSchema": {
      "type": "object",
      "description": "CRM service plan.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the service plan.",
          "example": "1"
        },
        "name": {
          "type": "string",
          "description": "Name of the service plan.",
          "example": "Default"
        }
      },
      "required": ["id", "name"]
    },
    "CrmServicePlanListSchema": {
      "type": "array",
      "items": { "$ref": "#/definitions/CrmServicePlanSchema" }
    },
    "Model 9": { "type": "array", "items": { "type": "string" } },
    "Model 10": { "type": "array", "items": { "type": "string" } },
    "DeviceModelInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "model": { "type": "string" },
        "name": { "type": "string" },
        "imageUrl": { "type": "string" },
        "iconUrl": { "type": "string" },
        "imagePath": { "type": "string" },
        "iconPath": { "type": "string" },
        "frontImagePath": { "type": "string" },
        "storeUrl": { "type": "string" },
        "category": { "type": "string", "enum": ["device", "accessories"] }
      },
      "required": [
        "id",
        "model",
        "name",
        "imageUrl",
        "iconUrl",
        "imagePath",
        "iconPath",
        "frontImagePath",
        "storeUrl",
        "category"
      ]
    },
    "Model 11": {
      "type": "array",
      "items": { "$ref": "#/definitions/DeviceModelInfo" }
    },
    "DeviceOnu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "port": { "type": "integer", "minimum": 1, "maximum": 65535 },
        "profile": { "type": "string" },
        "profileName": { "type": "string" },
        "pppoeUser": { "type": "string" },
        "wanAddress": { "type": "string" },
        "portForwards": { "type": "string" },
        "rxRate": { "type": "number" },
        "txRate": { "type": "number" },
        "transmitPower": { "type": "number" },
        "receivePower": { "type": "number" }
      }
    },
    "Onu": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" },
        "onu": { "$ref": "#/definitions/DeviceOnu" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "ListOfOnuDevices": {
      "type": "array",
      "items": { "$ref": "#/definitions/Onu" }
    },
    "DeviceSsid": {
      "type": "object",
      "properties": {
        "ssid": { "type": "string", "description": "SSID" },
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "key": { "type": "string", "description": "Pre shared key" },
        "deviceId": {
          "type": "string",
          "description": "Device id",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["ssid", "mac", "key", "deviceId"]
    },
    "DeviceSsidList": {
      "type": "array",
      "items": { "$ref": "#/definitions/DeviceSsid" }
    },
    "UnknownDevice": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address of the unknown device.",
          "example": "192.168.23.12",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "firstSeen": {
          "type": "string",
          "format": "date-time",
          "description": "First time this IP address was seen as a ISO 8601.",
          "example": "2011-10-05T14:48:00.000Z"
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this IP address was seen as a ISO 8601.",
          "example": "2012-10-05T14:48:00.000Z"
        },
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded by this IP address.",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded by this IP address.",
          "example": 986305
        }
      },
      "required": ["address", "firstSeen", "lastSeen", "upload", "download"]
    },
    "UnknownDevicesList": {
      "type": "array",
      "description": "List of unknown devices.",
      "items": { "$ref": "#/definitions/UnknownDevice" }
    },
    "DeviceSchema": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "InstallationDeviceLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["longitude", "latitude"]
    },
    "user 2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the user who registered the device.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["id"]
    },
    "installation": {
      "type": "object",
      "description": "Installation this device is part of. Null if not part of an installation yet.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the installation this device is part of.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["id"]
    },
    "InstallationDevice": {
      "type": "object",
      "description": "Installation device.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Installation device id.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "mac": {
          "type": "string",
          "description": "Device mac address.",
          "example": "44:d9:e7:3d:b1:47",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Device model.",
          "example": "ER-X",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "firmwareVersion": {
          "type": "string",
          "description": "Device firmware version.",
          "example": "8.7.0"
        },
        "location": { "$ref": "#/definitions/InstallationDeviceLocation" },
        "user": { "$ref": "#/definitions/user%202" },
        "installation": { "$ref": "#/definitions/installation" },
        "data": {
          "type": "string",
          "description": "Any device specific data that are required during installation.",
          "example": {}
        },
        "configuration": {
          "type": "string",
          "description": "Any device specific configuration.",
          "example": {}
        },
        "distance": {
          "type": "number",
          "description": "Distance in meters from requested location.",
          "example": 142,
          "minimum": 0
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the installation device was updated.",
          "example": "2020-01-14T15:20:32.004Z"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the installation device was updated.",
          "example": "2020-01-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "mac",
        "location",
        "user",
        "installation",
        "updated",
        "created"
      ]
    },
    "InstallationDeviceList": {
      "type": "array",
      "items": { "$ref": "#/definitions/InstallationDevice" }
    },
    "devices": {
      "type": "array",
      "description": "Installation devices.",
      "items": { "$ref": "#/definitions/InstallationDevice" }
    },
    "Model 12": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["id"]
    },
    "users 1": {
      "type": "array",
      "description": "Users registered for installation.",
      "items": { "$ref": "#/definitions/Model%2012" }
    },
    "user 3": {
      "type": "object",
      "description": "Author of the message.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the author of the message.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["id"]
    },
    "InstallationChatResponse": {
      "type": "object",
      "description": "Installation chat message.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the message.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "message": {
          "type": "string",
          "description": "Chat message text.",
          "example": "Everything is ready."
        },
        "user": { "$ref": "#/definitions/user%203" },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the chat message was created.",
          "example": "2020-01-14T15:20:32.004Z"
        }
      },
      "required": ["id", "message", "user", "created"]
    },
    "chat": {
      "type": "array",
      "description": "Chat messages.",
      "items": { "$ref": "#/definitions/InstallationChatResponse" }
    },
    "InstallationResponse": {
      "type": "object",
      "description": "New installation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the installation.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "devices": { "$ref": "#/definitions/devices" },
        "users": { "$ref": "#/definitions/users%201" },
        "chat": { "$ref": "#/definitions/chat" },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the installation was created.",
          "example": "2020-01-14T15:20:32.004Z"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the installation was updated.",
          "example": "2020-01-14T15:20:32.004Z"
        },
        "finished": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the installation was finished. Null if the installation is not finished yet.",
          "example": "2020-01-14T15:20:32.004Z"
        }
      },
      "required": ["id", "users", "created", "updated", "finished"]
    },
    "unmsVersion": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "UnmsBackup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "state": {
          "type": "string",
          "enum": ["success", "in-progress", "failed"]
        },
        "unmsVersion": { "$ref": "#/definitions/unmsVersion" },
        "compatible": {
          "type": "boolean",
          "description": "Flag if the backup is compatible with current UNMS version."
        },
        "size": {
          "type": "integer",
          "description": "Size in bytes.",
          "x-constraint": { "positive": true }
        },
        "origin": { "type": "string", "enum": ["auto", "manual"] },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": [
        "id",
        "state",
        "unmsVersion",
        "compatible",
        "size",
        "origin",
        "createdAt"
      ]
    },
    "UnmsBackupList": {
      "type": "array",
      "items": { "$ref": "#/definitions/UnmsBackup" }
    },
    "discoveryBlacklist": {
      "type": "array",
      "description": "IP addresses or subnets blacklisted in Discovery.",
      "example": ["10.8.9.0/24"],
      "minItems": 0,
      "x-constraint": { "unique": { "ignoreUndefined": false } },
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "optional" } }
      }
    },
    "deviceTransmissionFrequencies": {
      "type": "object",
      "example": null,
      "properties": {
        "router": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "switch": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "gpon": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "ap": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "station": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "other": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "ups": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        }
      },
      "required": ["router", "switch", "gpon", "ap", "station", "other", "ups"]
    },
    "NmsSettings": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "example": "Europe/Prague",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Khartoum",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Havana",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Damascus",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Pyongyang",
            "Asia/Qatar",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tehran",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "Cuba",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Iran",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Pacific-New",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "homePage": {
          "type": "string",
          "example": "unms",
          "enum": ["unms", "ucrm"]
        },
        "hostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "autoBackups": { "type": "boolean", "example": true },
        "deviceAutoBackups": { "type": "boolean", "example": true },
        "discoveryAutoConfiguration": { "type": "boolean", "example": true },
        "discoveryAllowUnsecuredChannels": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowLocalScan": { "type": "boolean", "example": false },
        "discoveryAllowRemoteScan": { "type": "boolean", "example": false },
        "discoverySnmpCommunity": { "type": "string", "example": "public" },
        "discoveryHideBlackBox": { "type": "boolean", "example": false },
        "discoveryBlacklist": { "$ref": "#/definitions/discoveryBlacklist" },
        "mapsProvider": {
          "type": "string",
          "example": "OpenStreetMap",
          "enum": ["GoogleMaps", "OpenStreetMap"]
        },
        "googleMapsApiKey": { "type": "string", "example": null },
        "devicePingAddressMode": {
          "type": "string",
          "enum": ["auto", "custom"]
        },
        "devicePingAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "optional" } } },
            { "type": "string" }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 30000,
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 5000,
          "minimum": 2000,
          "maximum": 300000
        },
        "useLetsEncrypt": { "type": "boolean", "example": true },
        "allowLoggingToSentry": { "type": "boolean", "example": true },
        "allowLoggingToLogentries": { "type": "boolean", "example": true },
        "deviceTransmissionProfile": {
          "type": "string",
          "example": "auto",
          "enum": ["auto", "custom"]
        },
        "deviceTransmissionFrequencies": {
          "$ref": "#/definitions/deviceTransmissionFrequencies"
        },
        "defaultGracePeriod": {
          "type": "integer",
          "example": 30000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "restartGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "upgradeGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "outageMailablePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 0,
          "maximum": 86400000
        },
        "dateFormat": {
          "type": "string",
          "example": "D MMM YYYY",
          "enum": [
            "D MMM YYYY",
            "Do MMM YYYY",
            "DD MMM YYYY",
            "MMM D, YYYY",
            "MMM Do, YYYY",
            "MMM DD, YYYY",
            "YYYY-MM-DD",
            "DD-MM-YYYY",
            "D.M.YYYY",
            "DD.MM.YYYY",
            "D/M/YYYY",
            "DD/MM/YYYY",
            "M/D/YYYY",
            "MM/DD/YYYY"
          ]
        },
        "timeFormat": {
          "type": "string",
          "example": "h:mm a",
          "enum": ["H:mm", "h:mm a"]
        },
        "allowAutoUpdateUbntFirmwares": { "type": "boolean", "example": true },
        "allowBetaFirmwares": { "type": "boolean", "example": false },
        "ucrmEnabled": { "type": "boolean", "example": false },
        "isIsp": { "type": "boolean", "example": true },
        "country": {
          "type": "string",
          "example": "CZ",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "deviceNumberOfBackups": {
          "type": "integer",
          "example": 30,
          "minimum": 1,
          "maximum": 100
        },
        "trafficShapingAdjustment": {
          "type": "integer",
          "example": 5,
          "minimum": 1,
          "maximum": 100
        },
        "defaultQosPropagation": {
          "type": "string",
          "enum": ["all", "gateway"]
        },
        "migrationModeEnabled": {
          "type": "boolean",
          "description": "When true all new device connections and connected devices will change UNMS Key.",
          "example": false
        },
        "migrationForceModeEnabled": {
          "type": "boolean",
          "description": "When true reachability check will be skipped.",
          "example": false
        },
        "migrationHostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "migrationPort": {
          "type": "integer",
          "description": "UNMS port to migrate to.",
          "minimum": 1,
          "maximum": 65535
        },
        "allowUnmsBetaVersion": {
          "type": "boolean",
          "description": "When true UNMS will look for latest UNMS version among beta releases.",
          "example": false
        },
        "maintenanceWindowFromTime": {
          "type": "integer",
          "description": "Hour when maintenance window start.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowToTime": {
          "type": "integer",
          "description": "Hour when maintenance window end.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowFriday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowMonday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSaturday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSunday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowThursday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowTuesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowWednesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "instanceId": {
          "type": "string",
          "example": "19d4d42a-fac8-4076-b47e-fc0540fdc715",
          "x-format": { "guid": true }
        },
        "letsEncryptError": { "type": "string", "example": null },
        "letsEncryptTimestamp": { "type": "number", "example": 1542206387 }
      },
      "required": [
        "timezone",
        "homePage",
        "hostname",
        "autoBackups",
        "deviceAutoBackups",
        "discoveryAutoConfiguration",
        "discoveryAllowUnsecuredChannels",
        "discoveryAllowLocalScan",
        "discoveryAllowRemoteScan",
        "discoverySnmpCommunity",
        "discoveryHideBlackBox",
        "mapsProvider",
        "googleMapsApiKey",
        "devicePingAddressMode",
        "devicePingAddress",
        "devicePingIntervalNormal",
        "devicePingIntervalOutage",
        "useLetsEncrypt",
        "allowLoggingToSentry",
        "allowLoggingToLogentries",
        "deviceTransmissionProfile",
        "deviceTransmissionFrequencies",
        "defaultGracePeriod",
        "restartGracePeriod",
        "upgradeGracePeriod",
        "outageMailablePeriod",
        "dateFormat",
        "timeFormat",
        "allowAutoUpdateUbntFirmwares",
        "allowBetaFirmwares",
        "ucrmEnabled",
        "isIsp",
        "country",
        "defaultQosPropagation",
        "migrationModeEnabled",
        "migrationForceModeEnabled",
        "migrationHostname",
        "migrationPort",
        "instanceId",
        "letsEncryptError",
        "letsEncryptTimestamp"
      ]
    },
    "DeletedSite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Site ID.",
          "example": "3979715a-2159-4450-887b-d1a9dabb1c39",
          "x-format": { "guid": true }
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was deleted in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": ["id", "ucrmId", "deletedAt"]
    },
    "DeletedSitesList": {
      "type": "array",
      "items": { "$ref": "#/definitions/DeletedSite" }
    },
    "ChangedItems": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Server address, null if hostname cannot be resolved.",
          "example": "192.168.1.100",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "settings": { "$ref": "#/definitions/NmsSettings" },
        "sites": { "$ref": "#/definitions/SitesList" },
        "deletedSites": { "$ref": "#/definitions/DeletedSitesList" },
        "users": { "$ref": "#/definitions/UserList" }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "result": { "type": "boolean" },
        "message": { "type": "string" }
      },
      "required": ["result", "message"]
    },
    "Model 13": {
      "type": "object",
      "properties": {
        "message": { "type": "string" },
        "result": { "type": "boolean" },
        "version": { "type": "string" }
      },
      "required": ["message", "result", "version"]
    },
    "ServerLogVerbosityResponseSchema": {
      "type": "object",
      "properties": {
        "verbosity": {
          "type": "string",
          "enum": ["trace", "debug", "info", "warn", "error", "fatal"]
        },
        "expiresAt": { "type": "string", "format": "date-time" }
      },
      "required": ["verbosity", "expiresAt"]
    },
    "MailServer": {
      "type": "object",
      "properties": {
        "customSmtpAuthEnabled": { "type": "boolean" },
        "customSmtpHostname": { "type": "string" },
        "customSmtpPassword": { "type": "string" },
        "customSmtpPort": { "type": "integer" },
        "customSmtpSecurityMode": { "type": "string" },
        "customSmtpSender": { "type": "string" },
        "customSmtpUsername": { "type": "string" },
        "gmailPassword": { "type": "string" },
        "gmailUsername": { "type": "string" },
        "tlsAllowUnauthorized": { "type": "boolean" },
        "type": {
          "type": "string",
          "enum": ["nosmtp", "cloud", "gmail", "smtp"]
        }
      }
    },
    "NewsSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the news.",
          "example": "1377eac0-2e21-4a56-b1c1-682c16f39cb9"
        },
        "date": {
          "type": "number",
          "description": "Timestamp in milliseconds when the news was published.",
          "example": 1557222409000
        },
        "link": {
          "type": "string",
          "description": "URL with with more details.",
          "example": "https://community.ubnt.com/"
        },
        "text": {
          "type": "string",
          "description": "News description.",
          "example": "Check the community."
        },
        "type": {
          "type": "string",
          "description": "News severity.",
          "example": "info"
        },
        "who": {
          "type": "string",
          "description": "Who issued the news.",
          "example": "UBNT"
        }
      },
      "required": ["id", "date", "link", "text", "type", "who"]
    },
    "NewsSchemaList": {
      "type": "array",
      "items": { "$ref": "#/definitions/NewsSchema" }
    },
    "DeviceStatusOverview 1": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "SearchResultMatch": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Identification of the matched string.",
          "example": "interfaces.addresses.cidr"
        },
        "field": {
          "type": "string",
          "description": "Where in the \"data\" is the matched string.",
          "example": "interfaces.2.addresses.7.cidr"
        },
        "value": {
          "type": "string",
          "description": "String that contains the match.",
          "example": "667 Acboa road, Pimprehills"
        },
        "position": {
          "type": "number",
          "description": "Position in the \"value\" where the match starts.",
          "example": 4
        },
        "length": {
          "type": "number",
          "description": "Length of the matched string.",
          "example": 3
        }
      }
    },
    "SearchResultMatches": {
      "type": "array",
      "items": { "$ref": "#/definitions/SearchResultMatch" }
    },
    "Model 14": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "example": "device", "enum": ["device"] },
        "data": { "$ref": "#/definitions/DeviceStatusOverview%201" },
        "matches": { "$ref": "#/definitions/SearchResultMatches" }
      },
      "required": ["type", "data", "matches"]
    },
    "SearchResultSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model%2014",
        "x-alternatives": [
          { "$ref": "#/x-alt-definitions/Model%203" },
          { "$ref": "#/x-alt-definitions/Model%205" },
          { "$ref": "#/x-alt-definitions/Model%206" }
        ]
      }
    },
    "features": {
      "type": "object",
      "properties": {
        "linkScore": {
          "type": "boolean",
          "description": "Experimental flag for linkScore.",
          "example": false
        },
        "newUserRoles": {
          "type": "boolean",
          "description": "Experimental flag for new user roles.",
          "example": false
        }
      },
      "required": ["linkScore", "newUserRoles"]
    },
    "ServerConfigPermissions": {
      "type": "object",
      "properties": {
        "canConfigureSmtp": {
          "type": "boolean",
          "description": "Whether SMTP can be configured or not.",
          "example": false
        },
        "canConfigureMaps": {
          "type": "boolean",
          "description": "Whether map engine is configurable or not.",
          "example": true
        },
        "canDownloadSupportInfo": {
          "type": "boolean",
          "description": "Whether support info can be downloaded or not.",
          "example": true
        },
        "canConfigureCertificate": {
          "type": "boolean",
          "description": "Whether SSL certificate can be configured or not.",
          "example": true
        },
        "canConfigureNetflow": {
          "type": "boolean",
          "description": "Whether netflow can be configured or not.",
          "example": true
        },
        "canConfigureHostname": {
          "type": "boolean",
          "description": "Whether hostname can be configured or not.",
          "example": true
        },
        "canConfigureUcrm": {
          "type": "boolean",
          "description": "Whether CRM can be configured from UNMS UI or not.",
          "example": true
        },
        "canUpdateUnms": {
          "type": "boolean",
          "description": "Whether UNMS can be updated from UNMS UI or not.",
          "example": true
        },
        "canConfigureDeviceProfiles": {
          "type": "boolean",
          "description": "Whether device profiles can be configured or not.",
          "example": true
        },
        "canSetupWithoutAuthentication": {
          "type": "boolean",
          "description": "Whether UNMS setup wizard can be completed without authentication.",
          "example": true
        },
        "canConfigureFirstDeviceInSetup": {
          "type": "boolean",
          "description": "Whether UNMS setup wizard can show the First device screen.",
          "example": false
        },
        "canSkipPrivacyPolicyAgreement": {
          "type": "boolean",
          "description": "Whether UNMS setup can skip privacy policy agreement screen.",
          "example": false
        },
        "canRunLocalDiscovery": {
          "type": "boolean",
          "description": "Whether UNMS can discover devices in local network.",
          "example": true
        }
      },
      "required": [
        "canConfigureSmtp",
        "canConfigureMaps",
        "canDownloadSupportInfo",
        "canConfigureCertificate",
        "canConfigureNetflow",
        "canConfigureHostname",
        "canConfigureUcrm",
        "canUpdateUnms",
        "canConfigureDeviceProfiles",
        "canSetupWithoutAuthentication",
        "canConfigureFirstDeviceInSetup",
        "canSkipPrivacyPolicyAgreement",
        "canRunLocalDiscovery"
      ]
    },
    "ServerConfig": {
      "type": "object",
      "properties": {
        "features": { "$ref": "#/definitions/features" },
        "permissions": { "$ref": "#/definitions/ServerConfigPermissions" },
        "isCloudSmtpAvailable": {
          "type": "boolean",
          "description": "Whether cloud SMTP is available or not.",
          "example": false
        },
        "latestVersionUrl": {
          "type": "string",
          "description": "URL to check for new version of UNMS.",
          "example": "https://api.github.com/repos/Ubiquiti-App/UNMS/contents/latest-version?ref=master"
        },
        "useCustomSslCert": {
          "type": "boolean",
          "description": "Whether the server is using custom SSL cert or not.",
          "example": false
        },
        "netflowPort": {
          "type": "number",
          "description": "Port where server is listening for netflow packets.",
          "example": 2055
        }
      },
      "required": [
        "permissions",
        "isCloudSmtpAvailable",
        "latestVersionUrl",
        "useCustomSslCert",
        "netflowPort"
      ]
    },
    "NmsSettings 1": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "example": "Europe/Prague",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Khartoum",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Havana",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Damascus",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Pyongyang",
            "Asia/Qatar",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tehran",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "Cuba",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Iran",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Pacific-New",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "homePage": {
          "type": "string",
          "example": "unms",
          "enum": ["unms", "ucrm"]
        },
        "hostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "autoBackups": { "type": "boolean", "example": true },
        "deviceAutoBackups": { "type": "boolean", "example": true },
        "discoveryAutoConfiguration": { "type": "boolean", "example": true },
        "discoveryAllowUnsecuredChannels": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowLocalScan": { "type": "boolean", "example": false },
        "discoveryAllowRemoteScan": { "type": "boolean", "example": false },
        "discoverySnmpCommunity": { "type": "string", "example": "public" },
        "discoveryHideBlackBox": { "type": "boolean", "example": false },
        "discoveryBlacklist": { "$ref": "#/definitions/discoveryBlacklist" },
        "mapsProvider": {
          "type": "string",
          "example": "OpenStreetMap",
          "enum": ["GoogleMaps", "OpenStreetMap"]
        },
        "googleMapsApiKey": { "type": "string", "example": null },
        "devicePingAddressMode": {
          "type": "string",
          "enum": ["auto", "custom"]
        },
        "devicePingAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "optional" } } },
            { "type": "string" }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 30000,
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 5000,
          "minimum": 2000,
          "maximum": 300000
        },
        "useLetsEncrypt": { "type": "boolean", "example": true },
        "allowLoggingToSentry": { "type": "boolean", "example": true },
        "allowLoggingToLogentries": { "type": "boolean", "example": true },
        "deviceTransmissionProfile": {
          "type": "string",
          "example": "auto",
          "enum": ["auto", "custom"]
        },
        "deviceTransmissionFrequencies": {
          "$ref": "#/definitions/deviceTransmissionFrequencies"
        },
        "defaultGracePeriod": {
          "type": "integer",
          "example": 30000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "restartGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "upgradeGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "outageMailablePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 0,
          "maximum": 86400000
        },
        "dateFormat": {
          "type": "string",
          "example": "D MMM YYYY",
          "enum": [
            "D MMM YYYY",
            "Do MMM YYYY",
            "DD MMM YYYY",
            "MMM D, YYYY",
            "MMM Do, YYYY",
            "MMM DD, YYYY",
            "YYYY-MM-DD",
            "DD-MM-YYYY",
            "D.M.YYYY",
            "DD.MM.YYYY",
            "D/M/YYYY",
            "DD/MM/YYYY",
            "M/D/YYYY",
            "MM/DD/YYYY"
          ]
        },
        "timeFormat": {
          "type": "string",
          "example": "h:mm a",
          "enum": ["H:mm", "h:mm a"]
        },
        "allowAutoUpdateUbntFirmwares": { "type": "boolean", "example": true },
        "allowBetaFirmwares": { "type": "boolean", "example": false },
        "ucrmEnabled": { "type": "boolean", "example": false },
        "isIsp": { "type": "boolean", "example": true },
        "country": {
          "type": "string",
          "example": "CZ",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "deviceNumberOfBackups": {
          "type": "integer",
          "example": 30,
          "minimum": 1,
          "maximum": 100
        },
        "trafficShapingAdjustment": {
          "type": "integer",
          "example": 5,
          "minimum": 1,
          "maximum": 100
        },
        "defaultQosPropagation": {
          "type": "string",
          "enum": ["all", "gateway"]
        },
        "migrationModeEnabled": {
          "type": "boolean",
          "description": "When true all new device connections and connected devices will change UNMS Key.",
          "example": false
        },
        "migrationForceModeEnabled": {
          "type": "boolean",
          "description": "When true reachability check will be skipped.",
          "example": false
        },
        "migrationHostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "migrationPort": {
          "type": "integer",
          "description": "UNMS port to migrate to.",
          "minimum": 1,
          "maximum": 65535
        },
        "allowUnmsBetaVersion": {
          "type": "boolean",
          "description": "When true UNMS will look for latest UNMS version among beta releases.",
          "example": false
        },
        "maintenanceWindowFromTime": {
          "type": "integer",
          "description": "Hour when maintenance window start.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowToTime": {
          "type": "integer",
          "description": "Hour when maintenance window end.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowFriday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowMonday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSaturday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSunday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowThursday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowTuesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowWednesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "instanceId": {
          "type": "string",
          "example": "19d4d42a-fac8-4076-b47e-fc0540fdc715",
          "x-format": { "guid": true }
        },
        "letsEncryptError": { "type": "string", "example": null },
        "letsEncryptTimestamp": { "type": "number", "example": 1542206387 }
      },
      "required": [
        "timezone",
        "homePage",
        "hostname",
        "autoBackups",
        "deviceAutoBackups",
        "discoveryAutoConfiguration",
        "discoveryAllowUnsecuredChannels",
        "discoveryAllowLocalScan",
        "discoveryAllowRemoteScan",
        "discoverySnmpCommunity",
        "discoveryHideBlackBox",
        "mapsProvider",
        "googleMapsApiKey",
        "devicePingAddressMode",
        "devicePingAddress",
        "devicePingIntervalNormal",
        "devicePingIntervalOutage",
        "useLetsEncrypt",
        "allowLoggingToSentry",
        "allowLoggingToLogentries",
        "deviceTransmissionProfile",
        "defaultGracePeriod",
        "restartGracePeriod",
        "upgradeGracePeriod",
        "outageMailablePeriod",
        "dateFormat",
        "timeFormat",
        "allowAutoUpdateUbntFirmwares",
        "allowBetaFirmwares",
        "ucrmEnabled",
        "isIsp",
        "country",
        "defaultQosPropagation",
        "migrationModeEnabled",
        "migrationForceModeEnabled",
        "migrationHostname",
        "migrationPort",
        "instanceId",
        "letsEncryptError",
        "letsEncryptTimestamp"
      ]
    },
    "ServerStatusUnmsSetup": {
      "type": "object",
      "properties": {
        "isConfigured": { "type": "boolean" },
        "isFirstDeviceConfigured": { "type": "boolean" },
        "isSubnetConfigured": { "type": "boolean" }
      }
    },
    "Coordinates": {
      "type": "object",
      "properties": { "x": { "type": "number" }, "y": { "type": "number" } }
    },
    "allClients": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "allSites": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "NetworkStatisticInterval": {
      "type": "object",
      "properties": {
        "start": { "type": "string" },
        "end": { "type": "string" }
      }
    },
    "liveClients": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "liveSites": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "alerts": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "HighOutage",
          "MediumOutage",
          "OutdatedFirmwareNetwork",
          "OutdatedFirmwareDevice",
          "HighUtilization",
          "CriticalUtilization",
          "SignalLow",
          "SignalMedium"
        ]
      }
    },
    "Model 15": {
      "type": "object",
      "properties": {
        "x": { "type": "number" },
        "y": { "type": "number" },
        "alerts": { "$ref": "#/definitions/alerts" }
      }
    },
    "networkDesignScore": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2015" }
    },
    "dataLinksUtilizationScore": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "firmwareUpToDateness": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "networkHealth": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "signalScore": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "linkScore 1": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "outages": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "uplinkUtilizationMean": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "downlinkUtilizationMean": {
      "type": "array",
      "items": { "$ref": "#/definitions/Coordinates" }
    },
    "NetworkStatistics": {
      "type": "object",
      "properties": {
        "allClients": { "$ref": "#/definitions/allClients" },
        "allSites": { "$ref": "#/definitions/allSites" },
        "interval": { "$ref": "#/definitions/NetworkStatisticInterval" },
        "liveClients": { "$ref": "#/definitions/liveClients" },
        "liveSites": { "$ref": "#/definitions/liveSites" },
        "networkDesignScore": { "$ref": "#/definitions/networkDesignScore" },
        "dataLinksUtilizationScore": {
          "$ref": "#/definitions/dataLinksUtilizationScore"
        },
        "firmwareUpToDateness": {
          "$ref": "#/definitions/firmwareUpToDateness"
        },
        "networkHealth": { "$ref": "#/definitions/networkHealth" },
        "signalScore": { "$ref": "#/definitions/signalScore" },
        "linkScore": { "$ref": "#/definitions/linkScore%201" },
        "outages": { "$ref": "#/definitions/outages" },
        "uplinkUtilizationMean": {
          "$ref": "#/definitions/uplinkUtilizationMean"
        },
        "downlinkUtilizationMean": {
          "$ref": "#/definitions/downlinkUtilizationMean"
        },
        "period": { "type": "integer" }
      }
    },
    "ServerSummary": {
      "type": "object",
      "properties": {
        "activeClientsCount": { "type": "integer" },
        "activeSitesCount": { "type": "integer" },
        "allClientsCount": { "type": "integer" },
        "allSitesCount": { "type": "integer" },
        "devicesDiscoveredCount": { "type": "integer" },
        "devicesUnauthorizedCount": { "type": "integer" },
        "firmwaresUnreadCount": { "type": "integer" },
        "logsUnreadCount": { "type": "integer" },
        "outagesActiveCount": { "type": "integer" },
        "outagesUnreadCount": { "type": "integer" },
        "superadminCount": { "type": "integer" },
        "ucrmClientsCount": { "type": "integer" },
        "unreadBlogPostsCount": { "type": "integer" },
        "devicesLimit": { "type": "integer" },
        "blackBoxesLimit": { "type": "integer" },
        "authorizedUbntDevices": { "type": "integer" },
        "minimumRequiredDevices": { "type": "integer" },
        "recentlyActiveDevices": { "type": "integer" },
        "networkDesignScore": { "type": "number" }
      }
    },
    "sources": {
      "type": "array",
      "description": "List of IP addresses that are sending netflow data",
      "items": {
        "type": "string",
        "example": "192.168.14.1",
        "x-format": { "ip": { "cidr": "forbidden" } }
      }
    },
    "TrafficStatus": {
      "type": "object",
      "properties": {
        "isActive": { "type": "boolean", "example": true },
        "sources": { "$ref": "#/definitions/sources" }
      },
      "required": ["isActive", "sources"]
    },
    "NmsUpdateError": {
      "type": "object",
      "description": "Error that caused the update to fail. Null if update succeeded or is still running.",
      "properties": {
        "error": {
          "type": "string",
          "description": "Type of update error.",
          "example": "DiskSpace",
          "enum": [
            "DiskSpace",
            "InstallationPackage",
            "DockerStop",
            "OldDocker",
            "OldDockerCompose",
            "Timeout",
            "PullImages",
            "Unknown"
          ]
        },
        "message": {
          "type": "string",
          "description": "Brief description of the update error.",
          "example": "Not enough disk space."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the error occured.",
          "example": "2019-02-07T10:18:01.000Z"
        }
      },
      "required": ["error", "message", "time"]
    },
    "NmsUpdateStatus": {
      "type": "object",
      "properties": {
        "canNmsUpdate": { "type": "boolean", "example": true },
        "nmsUpdateStatus": {
          "type": "string",
          "enum": ["ready", "requested", "updating"]
        },
        "nmsUpdateError": { "$ref": "#/definitions/NmsUpdateError" }
      },
      "required": ["canNmsUpdate", "nmsUpdateStatus", "nmsUpdateError"]
    },
    "Version": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of UNMS.",
          "example": "1.2.7"
        },
        "deployment": {
          "type": "string",
          "description": "How was the UNMS deployed. Content of UNMS_DEPLOYMENT env variable.",
          "example": "jenkins-unms-test-deploy-1234"
        },
        "build": {
          "type": "string",
          "description": "Build identification.",
          "example": "release.860d2c9.20181218093614"
        },
        "time": {
          "type": "string",
          "description": "Time of the build.",
          "example": "2018-11-20T11:01:32+01:00"
        }
      },
      "required": ["version", "deployment", "build", "time"]
    },
    "Traffic": {
      "type": "object",
      "properties": {
        "time": {
          "type": "number",
          "description": "Start of the aggregated time interval as a timestamp in milliseconds.",
          "example": 1524751200000
        },
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded during interval.",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded during interval.",
          "example": 986305
        },
        "siteId": {
          "type": "string",
          "description": "ID of the site that generated this traffic.",
          "example": "3979715a-2159-4450-887b-d1a9dabb1c39",
          "x-format": { "guid": true }
        }
      },
      "required": ["time", "upload", "download", "siteId"]
    },
    "SiteTrafficList": {
      "type": "array",
      "items": { "$ref": "#/definitions/Traffic" }
    },
    "InProgress": {
      "type": "object",
      "properties": { "count": { "type": "integer", "minimum": 0 } }
    },
    "TwoFactorSecret": {
      "type": "object",
      "properties": {
        "base32": { "type": "string" },
        "otpauth_url": { "type": "string" }
      }
    },
    "Vault": {
      "type": "object",
      "properties": {
        "isVaultEnabled": { "type": "boolean" },
        "isPassphraseMissing": { "type": "boolean" }
      }
    },
    "location": {
      "type": "object",
      "properties": {
        "lat": { "type": "number", "example": 49.73455844211215 },
        "lng": { "type": "number", "example": 13.363579999999956 }
      },
      "required": ["lat", "lng"]
    },
    "ElevationPoint": {
      "type": "object",
      "properties": {
        "location": { "$ref": "#/definitions/location" },
        "elevation": { "type": "number", "example": 351.217861996892 }
      },
      "required": ["elevation"]
    },
    "startOuterElevations": {
      "type": "array",
      "items": { "$ref": "#/definitions/ElevationPoint" }
    },
    "elevations": {
      "type": "array",
      "items": { "$ref": "#/definitions/ElevationPoint" }
    },
    "endOuterElevations": {
      "type": "array",
      "items": { "$ref": "#/definitions/ElevationPoint" }
    },
    "elevations 1": {
      "type": "object",
      "properties": {
        "startOuterElevations": {
          "$ref": "#/definitions/startOuterElevations"
        },
        "elevations": { "$ref": "#/definitions/elevations" },
        "endOuterElevations": { "$ref": "#/definitions/endOuterElevations" }
      },
      "required": ["startOuterElevations", "elevations", "endOuterElevations"]
    },
    "AirLinkBeSchema": {
      "type": "object",
      "properties": {
        "elevations": { "$ref": "#/definitions/elevations%201" },
        "distance": { "type": "number" }
      },
      "required": ["elevations", "distance"]
    },
    "apDevice 1": {
      "type": "object",
      "properties": {
        "series": { "type": "string" },
        "id": { "type": "string" },
        "type": { "type": "string" },
        "model": { "type": "string" },
        "name": { "type": "string" }
      }
    },
    "Wifi": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "available": { "type": "boolean" },
        "channel": { "type": "number" },
        "channelWidth": { "type": "integer", "minimum": 0 },
        "country": {
          "type": "string",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "enabled": { "type": "boolean" },
        "encryption": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "frequency": { "type": "number", "example": 5400, "minimum": 0 },
        "isChannelAuto": { "type": "boolean" },
        "key": { "type": "string" },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "mode": { "type": "string", "enum": ["ap", "mesh"] },
        "ssid": { "type": "string", "description": "SSID" },
        "stationsCount": { "type": "number" },
        "txPower": { "type": "number" }
      }
    },
    "DeviceAirCube": {
      "type": "object",
      "properties": {
        "wifiMode": { "type": "string", "enum": ["ap", "mesh"] },
        "apDevice": { "$ref": "#/definitions/apDevice%201" },
        "mgmtIp": {
          "type": "string",
          "description": "Management IP address.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "wanIp": {
          "type": "string",
          "description": "Wan IP address.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "lanIp": {
          "type": "string",
          "description": "Lan IP address.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "poe": { "type": "boolean" },
        "wifi2Ghz": { "$ref": "#/definitions/Wifi" },
        "wifi5Ghz": { "$ref": "#/definitions/Wifi" }
      }
    },
    "AirCube": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" },
        "aircube": { "$ref": "#/definitions/DeviceAirCube" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "Model 16": { "type": "array", "items": { "type": "number" } },
    "frequencyBands": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": { "$ref": "#/definitions/Model%2016" }
    },
    "apDevice 2": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "series": { "type": "string", "enum": ["LTU", "classic", "G60"] },
        "type": { "type": "string" },
        "model": { "type": "string" },
        "name": { "type": "string" }
      },
      "required": ["series"]
    },
    "signalChain": { "type": "array", "items": { "type": "number" } },
    "signalRemoteChain": { "type": "array", "items": { "type": "number" } },
    "[DEPRECATED]DeviceAirFiber - partially moved properties to interface or station.": {
      "type": "object",
      "properties": {
        "series": { "type": "string", "enum": ["LTU", "classic", "G60"] },
        "ssid": { "type": "string", "description": "SSID" },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "bridgeMode": { "type": "string", "enum": ["hw", "sw"] },
        "frequency": { "type": "number", "example": 5400, "minimum": 0 },
        "antenna": { "type": "string" },
        "frequencyBands": { "$ref": "#/definitions/frequencyBands" },
        "frequencyCenter": { "type": "string" },
        "noiseFloor": { "type": "string" },
        "channelWidth": { "type": "integer", "minimum": 0 },
        "countryCode": { "type": "integer", "minimum": 0 },
        "security": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "remoteSignal": { "type": "string" },
        "transmitPower": {
          "type": "number",
          "x-alternatives": [
            { "type": "number" },
            { "type": "string", "enum": ["-"] }
          ]
        },
        "transmitEirp": { "type": "number" },
        "transmitChains": { "type": "number" },
        "receiveChains": { "type": "number" },
        "transmitDutyCycle": { "type": "number" },
        "apMac": { "type": "string" },
        "apDevice": { "$ref": "#/definitions/apDevice%202" },
        "stationName": { "type": "string" },
        "signalChain": { "$ref": "#/definitions/signalChain" },
        "signalRemoteChain": { "$ref": "#/definitions/signalRemoteChain" },
        "stationsCount": { "type": "number" },
        "frameLength": { "type": "number" }
      },
      "required": ["ssid"]
    },
    "AirFiber": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        }
      },
      "required": ["enabled", "ipAddress"]
    },
    "apDevice 3": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "series": { "type": "string", "enum": ["AC", "M", "G60"] },
        "type": { "type": "string" },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "name": { "type": "string" }
      },
      "required": ["series"]
    },
    "Model 17": { "type": "array", "items": { "type": "number" } },
    "frequencyBands 1": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": { "$ref": "#/definitions/Model%2017" }
    },
    "polling": {
      "type": "object",
      "properties": { "enabled": { "type": "boolean" } }
    },
    "wlanMac": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
      }
    },
    "availableTxPowerRange": {
      "type": "object",
      "properties": {
        "min": { "type": "integer", "example": 0 },
        "max": { "type": "integer", "example": 19 }
      }
    },
    "location 1": {
      "type": "object",
      "description": "DeviceLocation",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        }
      }
    },
    "[DEPRECATED]DeviceAirmax - partially moved properties to interface or station.": {
      "type": "object",
      "properties": {
        "antenna": { "type": "string" },
        "apDevice": { "$ref": "#/definitions/apDevice%203" },
        "apMac": { "type": "string" },
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "ccq": { "type": "number" },
        "channelWidth": { "type": "integer", "minimum": 0 },
        "countryCode": { "type": "integer", "minimum": 0 },
        "frequency": { "type": "number", "example": 5400, "minimum": 0 },
        "frequencyBands": { "$ref": "#/definitions/frequencyBands%201" },
        "frequencyCenter": { "type": "string" },
        "noiseFloor": { "type": "string" },
        "polling": { "$ref": "#/definitions/polling" },
        "receiveChains": { "type": "number" },
        "remoteSignal": { "type": "number" },
        "remoteSignal60g": { "type": "number" },
        "security": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "series": { "type": "string", "enum": ["AC", "M", "G60"] },
        "signalChain": { "$ref": "#/definitions/signalChain" },
        "signalRemoteChain": { "$ref": "#/definitions/signalRemoteChain" },
        "ssid": { "type": "string", "description": "SSID" },
        "stationName": { "type": "string" },
        "stationsCount": { "type": "number" },
        "transmitChains": { "type": "number" },
        "transmitPower": { "type": "number" },
        "wds": { "type": "boolean" },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "wlanMac": { "$ref": "#/definitions/wlanMac" },
        "tddFraming": { "type": "string" },
        "wlanRxBytes": { "type": "number" },
        "wlanTxBytes": { "type": "number" },
        "gpsSignal": { "type": "number", "minimum": 0, "maximum": 1 },
        "availableTxPowerRange": {
          "$ref": "#/definitions/availableTxPowerRange"
        },
        "location": { "$ref": "#/definitions/location%201" },
        "cableLength": {
          "type": "number",
          "description": "Cable Length from eth0 interface in meters. When below values is null cable is long less then 20m."
        },
        "cableSnr": {
          "type": "number",
          "description": "Average signal-to-noise ratio on eth0 interface in dB"
        },
        "rxCinr": {
          "type": "number",
          "description": "Carrier to Interference-plus-Noise Ratio in dB on wireless"
        }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "security",
        "series"
      ]
    },
    "DeviceAirmaxSchema": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        }
      },
      "required": ["enabled", "ipAddress"]
    },
    "DeviceSite": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "status": {
          "type": "string",
          "enum": ["active", "disconnected", "inactive"]
        },
        "name": { "type": "string" },
        "type": { "type": "string", "enum": ["site", "endpoint", "client"] },
        "parent": { "type": "string" }
      },
      "required": ["id", "status", "name", "type"]
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "Technical ID only for UNMS" },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UFiber OLT."
        },
        "name": { "type": "string" },
        "displayName": {
          "type": "string",
          "description": "UNMS device alias or real name."
        },
        "mac": {
          "type": "string",
          "description": "Available only for clients (ONU)"
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "category": {
          "type": "string",
          "enum": ["optical", "wired", "wireless", "accessories"]
        },
        "site": { "$ref": "#/definitions/DeviceSite" },
        "siteId": { "type": "string" },
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS"
        },
        "serialNumber": { "type": "string" },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UFiber NanoG",
            "UFiber Loco",
            "UFiber Wifi",
            "UFiber Instant",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "lturocket",
            "GP",
            "ltu60",
            "SunMax",
            "UNKNOWN"
          ]
        },
        "updated": { "type": "string", "format": "date-time" },
        "ipAddress": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": [
        "id",
        "firmwareVersion",
        "name",
        "mac",
        "type",
        "category",
        "authorized",
        "serialNumber",
        "platformId",
        "updated",
        "ipAddress"
      ]
    },
    "airfiber": {
      "type": "object",
      "properties": {
        "frameLength": { "type": "number", "minimum": 0 },
        "mode": { "type": "string" }
      },
      "required": ["frameLength", "mode"]
    },
    "airmax": {
      "type": "object",
      "properties": {
        "wds": { "type": "boolean" },
        "mode": { "type": "string" }
      },
      "required": ["wds", "mode"]
    },
    "location 2": {
      "type": "object",
      "properties": {
        "latitude": { "type": "number", "minimum": -90, "maximum": 90 },
        "longitude": { "type": "number", "minimum": -180, "maximum": 180 }
      },
      "required": ["latitude", "longitude"]
    },
    "backupRadio": {
      "type": "object",
      "description": "Backup radio basic info",
      "properties": {
        "frequency": { "type": "number", "example": 5400, "minimum": 0 }
      },
      "required": ["frequency"]
    },
    "DevicesAPSProfile": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "channelWidth": { "type": "integer", "minimum": 0 },
        "countryCode": { "type": "integer", "minimum": 0 },
        "device": { "$ref": "#/definitions/Device" },
        "airfiber": {
          "$ref": "#/definitions/airfiber",
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/airfiber" }]
        },
        "airmax": {
          "$ref": "#/definitions/airmax",
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/airmax" }]
        },
        "frequency": { "type": "number", "example": 5400, "minimum": 0 },
        "key": { "type": "string", "description": "Pre shared key" },
        "location": { "$ref": "#/definitions/location%202" },
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "security": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "ssid": { "type": "string", "description": "SSID" },
        "frameLength": { "type": "number", "minimum": 0 },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "backupRadio": { "$ref": "#/definitions/backupRadio" }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "frequency",
        "key",
        "mac",
        "security",
        "ssid"
      ]
    },
    "DeviceApsProfileListSchema": {
      "type": "array",
      "items": { "$ref": "#/definitions/DevicesAPSProfile" }
    },
    "Model 18": { "type": "array", "items": { "type": "number" } },
    "frequencyBands 2": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": { "$ref": "#/definitions/Model%2018" }
    },
    "[DEPRECATED]DeviceAirFiber - partially moved properties to interface or station. 1": {
      "type": "object",
      "properties": {
        "series": { "type": "string", "enum": ["LTU", "classic", "G60"] },
        "ssid": { "type": "string", "description": "SSID" },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "bridgeMode": { "type": "string", "enum": ["hw", "sw"] },
        "frequency": { "type": "number", "example": 5400, "minimum": 0 },
        "antenna": { "type": "string" },
        "frequencyBands": { "$ref": "#/definitions/frequencyBands%202" },
        "frequencyCenter": { "type": "string" },
        "noiseFloor": { "type": "string" },
        "channelWidth": { "type": "integer", "minimum": 0 },
        "countryCode": { "type": "integer", "minimum": 0 },
        "security": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "remoteSignal": { "type": "string" },
        "transmitPower": {
          "type": "number",
          "x-alternatives": [
            { "type": "number" },
            { "type": "string", "enum": ["-"] }
          ]
        },
        "transmitEirp": { "type": "number" },
        "transmitChains": { "type": "number" },
        "receiveChains": { "type": "number" },
        "transmitDutyCycle": { "type": "number" },
        "apMac": { "type": "string" },
        "apDevice": { "$ref": "#/definitions/apDevice%202" },
        "stationName": { "type": "string" },
        "signalChain": { "$ref": "#/definitions/signalChain" },
        "signalRemoteChain": { "$ref": "#/definitions/signalRemoteChain" },
        "stationsCount": { "type": "number" },
        "frameLength": { "type": "number" }
      },
      "required": ["ssid"]
    },
    "DeviceOnu 1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "port": { "type": "integer", "minimum": 1, "maximum": 65535 },
        "profile": { "type": "string" },
        "profileName": { "type": "string" },
        "pppoeUser": { "type": "string" },
        "wanAddress": { "type": "string" },
        "portForwards": { "type": "string" },
        "rxRate": { "type": "number" },
        "txRate": { "type": "number" },
        "transmitPower": { "type": "number" },
        "receivePower": { "type": "number" }
      }
    },
    "Model 19": { "type": "array", "items": { "type": "number" } },
    "frequencyBands 3": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": { "$ref": "#/definitions/Model%2019" }
    },
    "[DEPRECATED]DeviceAirmax - partially moved properties to interface or station. 1": {
      "type": "object",
      "properties": {
        "antenna": { "type": "string" },
        "apDevice": { "$ref": "#/definitions/apDevice%203" },
        "apMac": { "type": "string" },
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "ccq": { "type": "number" },
        "channelWidth": { "type": "integer", "minimum": 0 },
        "countryCode": { "type": "integer", "minimum": 0 },
        "frequency": { "type": "number", "example": 5400, "minimum": 0 },
        "frequencyBands": { "$ref": "#/definitions/frequencyBands%203" },
        "frequencyCenter": { "type": "string" },
        "noiseFloor": { "type": "string" },
        "polling": { "$ref": "#/definitions/polling" },
        "receiveChains": { "type": "number" },
        "remoteSignal": { "type": "number" },
        "remoteSignal60g": { "type": "number" },
        "security": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "series": { "type": "string", "enum": ["AC", "M", "G60"] },
        "signalChain": { "$ref": "#/definitions/signalChain" },
        "signalRemoteChain": { "$ref": "#/definitions/signalRemoteChain" },
        "ssid": { "type": "string", "description": "SSID" },
        "stationName": { "type": "string" },
        "stationsCount": { "type": "number" },
        "transmitChains": { "type": "number" },
        "transmitPower": { "type": "number" },
        "wds": { "type": "boolean" },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "wlanMac": { "$ref": "#/definitions/wlanMac" },
        "tddFraming": { "type": "string" },
        "wlanRxBytes": { "type": "number" },
        "wlanTxBytes": { "type": "number" },
        "gpsSignal": { "type": "number", "minimum": 0, "maximum": 1 },
        "availableTxPowerRange": {
          "$ref": "#/definitions/availableTxPowerRange"
        },
        "location": { "$ref": "#/definitions/location%201" },
        "cableLength": {
          "type": "number",
          "description": "Cable Length from eth0 interface in meters. When below values is null cable is long less then 20m."
        },
        "cableSnr": {
          "type": "number",
          "description": "Average signal-to-noise ratio on eth0 interface in dB"
        },
        "rxCinr": {
          "type": "number",
          "description": "Carrier to Interference-plus-Noise Ratio in dB on wireless"
        }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "security",
        "series"
      ]
    },
    "lag 1": {
      "type": "object",
      "properties": {
        "mode": { "type": "string" },
        "enabled": { "type": "boolean" }
      }
    },
    "vlanId": { "type": "object" },
    "sfp+1": {
      "type": "object",
      "properties": { "vlanNative": { "type": "number" } }
    },
    "sfp+2": {
      "type": "object",
      "properties": { "vlanNative": { "type": "number" } }
    },
    "sfp1": {
      "type": "object",
      "properties": { "vlanNative": { "type": "number" } }
    },
    "sfp2": {
      "type": "object",
      "properties": { "vlanNative": { "type": "number" } }
    },
    "interface 1": {
      "type": "object",
      "properties": {
        "sfp+1": { "$ref": "#/definitions/sfp%2B1" },
        "sfp+2": { "$ref": "#/definitions/sfp%2B2" },
        "sfp1": { "$ref": "#/definitions/sfp1" },
        "sfp2": { "$ref": "#/definitions/sfp2" }
      }
    },
    "vlans 1": {
      "type": "object",
      "properties": {
        "vlanId": { "$ref": "#/definitions/vlanId" },
        "interface": { "$ref": "#/definitions/interface%201" }
      }
    },
    "layer2": {
      "type": "object",
      "properties": {
        "lag": { "$ref": "#/definitions/lag%201" },
        "vlans": { "$ref": "#/definitions/vlans%201" }
      }
    },
    "onuWifiCountries": { "type": "object" },
    "olt": {
      "type": "object",
      "properties": {
        "hasUnsupportedOnu": { "type": "boolean" },
        "layer2": { "$ref": "#/definitions/layer2" },
        "onuWifiCountries": { "$ref": "#/definitions/onuWifiCountries" }
      }
    },
    "Olt": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" },
        "olt": { "$ref": "#/definitions/olt" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "BlackBox": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station.%201"
        },
        "aircube": { "$ref": "#/definitions/DeviceAirCube" },
        "onu": { "$ref": "#/definitions/DeviceOnu%201" },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station.%201"
        },
        "olt": { "$ref": "#/definitions/Olt" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "Model 20": {
      "type": "object",
      "properties": {
        "error": { "type": "string" },
        "status": {
          "type": "string",
          "enum": ["running", "complete", "error", "none"]
        }
      },
      "required": ["error"]
    },
    "Model 21": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "series": { "type": "string" }
      },
      "required": ["id", "type", "series"]
    },
    "Wave": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/definitions/eswitch" },
        "unmss": { "$ref": "#/definitions/unmss" },
        "firmware": { "$ref": "#/definitions/DeviceFirmware" },
        "identification": { "$ref": "#/definitions/DeviceIdentification" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/definitions/latestBackup" },
        "meta": { "$ref": "#/definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/definitions/DeviceUpgrade" },
        "interfaces": { "$ref": "#/definitions/DeviceInterfaceListSchema" }
      },
      "required": ["enabled", "ipAddress"]
    },
    "ntpClient": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true to enable NTP client",
          "example": true
        },
        "ntpServer1": {
          "type": "string",
          "x-format": { "hostname": true },
          "x-alternatives": [
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "ntpServer2": {
          "type": "string",
          "description": "Secondary NTP server.",
          "example": "2.2.2.2",
          "x-format": { "hostname": true }
        }
      }
    },
    "sshServer": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean", "example": true },
        "sshPort": {
          "type": "integer",
          "example": 22,
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "systemLog": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true to enable sending syslog to remote logging server.",
          "example": false
        },
        "level": {
          "type": "string",
          "description": "Level of logs to include.",
          "enum": [
            "emerg",
            "alert",
            "crit",
            "err",
            "warning",
            "notice",
            "info",
            "debug"
          ]
        },
        "port": {
          "type": "integer",
          "description": "Remote server port.",
          "example": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "server": {
          "type": "string",
          "description": "Remote server hostname.",
          "example": "3.3.3.3",
          "x-format": { "hostname": true }
        }
      }
    },
    "telnetServer": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean", "example": false },
        "port": {
          "type": "integer",
          "example": 23,
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "snmpAgent": {
      "type": "object",
      "properties": {
        "community": {
          "type": "string",
          "description": "User ID or password that allows access to device's statistics."
        },
        "contact": {
          "type": "string",
          "description": "SNMP server's contact person."
        },
        "enabled": { "type": "boolean", "example": false },
        "location": {
          "type": "string",
          "description": "SNMP server's location."
        }
      }
    },
    "webServer": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean", "example": true },
        "httpPort": {
          "type": "integer",
          "description": "Web UI HTTP port",
          "example": 80,
          "minimum": 0,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "description": "Web UI HTTPS port",
          "example": 443,
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "responder": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Respond to UBNT Device Discovery protocol requests. Device must have DISCOVERY_RESPONDER service capability (aka discovery server).",
          "example": true
        }
      }
    },
    "scanner": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable discovery scanner tool. Device must have DISCOVERY_SCANNER tool capability (aka discovery client).",
          "example": true
        },
        "passiveOnly": {
          "type": "boolean",
          "description": "Use only passive discovery protocols (MNDP, CDP and LLDP) and not active protocols (UBNT discovery).",
          "example": true
        }
      }
    },
    "discovery 1": {
      "type": "object",
      "properties": {
        "responder": { "$ref": "#/definitions/responder" },
        "scanner": { "$ref": "#/definitions/scanner" }
      },
      "required": ["responder", "scanner"]
    },
    "DeviceService": {
      "type": "object",
      "properties": {
        "ntpClient": { "$ref": "#/definitions/ntpClient" },
        "sshServer": { "$ref": "#/definitions/sshServer" },
        "systemLog": { "$ref": "#/definitions/systemLog" },
        "telnetServer": { "$ref": "#/definitions/telnetServer" },
        "snmpAgent": { "$ref": "#/definitions/snmpAgent" },
        "webServer": { "$ref": "#/definitions/webServer" },
        "discovery": { "$ref": "#/definitions/discovery%201" }
      },
      "required": [
        "ntpClient",
        "sshServer",
        "systemLog",
        "snmpAgent",
        "webServer",
        "discovery"
      ]
    },
    "CoordinatesXY.": {
      "type": "object",
      "properties": { "x": { "type": "number" }, "y": { "type": "number" } }
    },
    "ListOfCoordinates": {
      "type": "array",
      "items": { "$ref": "#/definitions/CoordinatesXY." }
    },
    "localChain0": { "type": "array", "items": { "type": "string" } },
    "localChain1": { "type": "array", "items": { "type": "string" } },
    "remoteChain0": { "type": "array", "items": { "type": "string" } },
    "remoteChain1": { "type": "array", "items": { "type": "string" } },
    "Model 22": {
      "type": "object",
      "properties": {
        "receive": { "$ref": "#/definitions/ListOfCoordinates" },
        "transmit": { "$ref": "#/definitions/ListOfCoordinates" },
        "id": { "type": "string", "example": "eth0" },
        "priority": { "type": "number" },
        "name": { "type": "string" }
      }
    },
    "interfaces": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2022" }
    },
    "interval": {
      "type": "object",
      "properties": {
        "start": { "type": "number" },
        "end": { "type": "number" }
      }
    },
    "temperature": { "type": "array", "items": { "type": "string" } },
    "airTime": { "type": "array", "items": { "type": "string" } },
    "stations 1": { "type": "object" },
    "DeviceStatistics": {
      "type": "object",
      "properties": {
        "cpu": { "$ref": "#/definitions/ListOfCoordinates" },
        "ccq": { "$ref": "#/definitions/ListOfCoordinates" },
        "localChain0": { "$ref": "#/definitions/localChain0" },
        "localChain1": { "$ref": "#/definitions/localChain1" },
        "remoteChain0": { "$ref": "#/definitions/remoteChain0" },
        "remoteChain1": { "$ref": "#/definitions/remoteChain1" },
        "ram": { "$ref": "#/definitions/ListOfCoordinates" },
        "ping": { "$ref": "#/definitions/ListOfCoordinates" },
        "errors": { "$ref": "#/definitions/ListOfCoordinates" },
        "interfaces": { "$ref": "#/definitions/interfaces" },
        "psu": { "type": "string" },
        "signal": { "$ref": "#/definitions/ListOfCoordinates" },
        "remoteSignal": { "$ref": "#/definitions/ListOfCoordinates" },
        "signal60g": { "$ref": "#/definitions/ListOfCoordinates" },
        "remoteSignal60g": { "$ref": "#/definitions/ListOfCoordinates" },
        "downlinkCapacity": { "type": "string" },
        "output": { "type": "string" },
        "pv": { "type": "string" },
        "uplinkCapacity": { "type": "string" },
        "clients": { "type": "string" },
        "period": { "type": "number" },
        "interval": { "$ref": "#/definitions/interval" },
        "temperature": { "$ref": "#/definitions/temperature" },
        "airTime": { "$ref": "#/definitions/airTime" },
        "stations": { "$ref": "#/definitions/stations%201" }
      }
    },
    "addresses 1": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Custom IP address in IPv4 or IPv6 format.",
        "example": "192.168.1.22",
        "x-format": { "ip": { "cidr": "optional" } }
      }
    },
    "identification 3": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        }
      },
      "required": ["id"]
    },
    "overview 1": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Read-only value generated by UNMS."
        }
      }
    },
    "device 1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "enabled": { "type": "boolean" },
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS."
        },
        "connected": { "type": "boolean" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "identification": { "$ref": "#/definitions/identification%203" },
        "overview": { "$ref": "#/definitions/overview%201" }
      },
      "required": ["id"]
    },
    "parent 5": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": { "type": "string" },
        "status": { "type": "string" },
        "type": { "type": "string" }
      }
    },
    "site 4": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": { "type": "string" },
        "status": { "type": "string" },
        "type": { "type": "string" },
        "parent": { "$ref": "#/definitions/parent%205" }
      }
    },
    "Model 23": {
      "type": "object",
      "properties": {
        "interfaceId": { "type": "string" },
        "addresses": { "$ref": "#/definitions/addresses%201" },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "vlan": { "type": "number" },
        "hostname": { "type": "string" },
        "vendor": { "type": "string", "example": "Ubiquiti Networks" },
        "device": { "$ref": "#/definitions/device%201" },
        "site": { "$ref": "#/definitions/site%204" }
      }
    },
    "macTable": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2023" }
    },
    "Pagination 1": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "selected items",
          "minimum": 0
        },
        "page": {
          "type": "integer",
          "description": "actual page",
          "minimum": 1
        },
        "pages": {
          "type": "integer",
          "description": "pages count",
          "minimum": 1
        },
        "total": {
          "type": "integer",
          "description": "count of found items",
          "minimum": 0
        }
      }
    },
    "MacTableSchema": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "macTable": { "$ref": "#/definitions/macTable" },
        "pagination": { "$ref": "#/definitions/Pagination%201" }
      },
      "required": ["deviceId"]
    },
    "timezoneList": { "type": "array", "items": { "type": "string" } },
    "login": {
      "type": "object",
      "properties": { "username": { "type": "string", "minLength": 1 } },
      "required": ["username"]
    },
    "admin": {
      "type": "object",
      "properties": { "login": { "$ref": "#/definitions/login" } }
    },
    "readOnlyAccount": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "login": { "$ref": "#/definitions/login" }
      }
    },
    "dnsServers": {
      "type": "array",
      "minItems": 0,
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "forbidden" } }
      }
    },
    "jumboMtu": {
      "type": "object",
      "properties": {
        "maxMtu": {
          "type": "integer",
          "description": "Maximum configurable MTU value in bytes.",
          "example": 10000,
          "minimum": 0
        },
        "isCurrentMtuSynced": {
          "type": "boolean",
          "description": "Set to true if all interfaces have the same mtu.",
          "example": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to true if jumbo frames are enabled.",
          "example": true
        }
      }
    },
    "SpanningTreeProtocolSchema": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if STP is enabled.",
          "example": true
        },
        "maxAge": {
          "type": "integer",
          "description": "Length of time (in seconds) since last BPDU received on this port before aging out the BPDU and\n      initiating topology reconvergence.",
          "example": 30,
          "minimum": 0,
          "maximum": 2147483647
        },
        "helloTime": {
          "type": "integer",
          "description": "Time between each bridge protocol data unit (BPDU) that is sent on a port (in seconds).",
          "example": 30,
          "minimum": 0,
          "maximum": 2147483647
        },
        "version": {
          "type": "string",
          "description": "Version of STP: RSTP (802.1w), MSTP (802.1s) or STP (802.1d).",
          "example": "RSTP",
          "enum": ["RSTP", "MSTP", "STP"]
        },
        "forwardDelay": {
          "type": "integer",
          "description": "Time spent in listening and learning state (in seconds) prior to entering forwarding state.",
          "example": 30,
          "minimum": 0,
          "maximum": 2147483647
        },
        "priority": {
          "type": "integer",
          "description": "STP root bridge priority.",
          "example": 32000,
          "minimum": 0,
          "maximum": 2147483647
        }
      },
      "required": [
        "enabled",
        "maxAge",
        "helloTime",
        "version",
        "forwardDelay",
        "priority"
      ]
    },
    "DeviceSystemConfiguration": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "timezone": { "type": "string" },
        "timezoneList": { "$ref": "#/definitions/timezoneList" },
        "gateway": { "type": "string" },
        "domainName": { "type": "string" },
        "admin": { "$ref": "#/definitions/admin" },
        "clientIsolation": { "type": "boolean" },
        "igmpSnooping": { "type": "boolean" },
        "dhcpOption82": {
          "type": "boolean",
          "description": "Set to true to allow DHCP option 82",
          "example": true
        },
        "mtu": { "type": "number" },
        "accessFromSfp": { "type": "boolean" },
        "inbandManagementVlan": { "type": "string" },
        "readOnlyAccount": { "$ref": "#/definitions/readOnlyAccount" },
        "ipV4Address": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "ipV4Gateway": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "ipV4AddressType": {
          "type": "string",
          "enum": ["dhcp", "slaac", "linkLocal", "static"]
        },
        "dns1": { "type": "string" },
        "dns2": { "type": "string" },
        "dnsServers": { "$ref": "#/definitions/dnsServers" },
        "ipV6Address": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "ipV6AddressType": {
          "type": "string",
          "enum": ["dhcp", "slaac", "linkLocal", "static"]
        },
        "ipV6Gateway": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "ipV6SlaacEnabled": {
          "type": "boolean",
          "description": "Set to true if Edge Switch has a SLAAC IPv6 address.",
          "example": true
        },
        "jumboMtu": { "$ref": "#/definitions/jumboMtu" },
        "stp": { "$ref": "#/definitions/SpanningTreeProtocolSchema" }
      }
    },
    "DeviceLocationLoc": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        }
      }
    },
    "DeviceLocation": {
      "type": "object",
      "properties": {
        "location": { "$ref": "#/definitions/DeviceLocationLoc" }
      }
    },
    "DeviceBackup": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "type": { "type": "string", "enum": ["cfg", "tar"] },
        "extension": { "type": "string" },
        "timestamp": { "type": "string", "format": "date-time" },
        "firmwareVersion": {
          "$ref": "#/definitions/interface",
          "x-alternatives": [
            { "$ref": "#/x-alt-definitions/interface" },
            { "$ref": "#/x-alt-definitions/addressComponents" }
          ]
        },
        "filename": { "type": "string" },
        "note": { "type": "string" },
        "pinned": { "type": "boolean" }
      },
      "required": ["id", "type", "extension", "timestamp"]
    },
    "DeviceBackupList": {
      "type": "array",
      "items": { "$ref": "#/definitions/DeviceBackup" }
    },
    "Model 24": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "connected": { "type": "boolean" },
        "name": { "type": "string" },
        "status": { "type": "string" },
        "error": { "type": "string" },
        "protocol": { "type": "string" },
        "snmpCommunity": { "type": "string" },
        "duplicateOf": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": [
        "deviceId",
        "connected",
        "name",
        "status",
        "error",
        "protocol",
        "snmpCommunity",
        "duplicateOf"
      ]
    },
    "categories": { "type": "array", "items": { "type": "string" } },
    "BlogPost": {
      "type": "object",
      "properties": {
        "categories": { "$ref": "#/definitions/categories" },
        "description": {
          "type": "string",
          "description": "perex of blog post"
        },
        "id": {
          "type": "string",
          "description": "blog post id in NMS",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "imagePath": { "type": "string", "description": "image path" },
        "link": { "type": "string", "description": "post link" },
        "permanentLink": { "type": "string" },
        "postId": {
          "type": "number",
          "description": "blog post id in Ubiquiti blog"
        },
        "publicationDate": {
          "type": "string",
          "format": "date-time",
          "description": "publication date on Ubiquiti blog"
        },
        "read": { "type": "boolean", "description": "user read blog post" },
        "title": { "type": "string", "description": "post title" }
      }
    },
    "ListOfBlogPosts": {
      "type": "array",
      "items": { "$ref": "#/definitions/BlogPost" }
    },
    "BlogPosts": {
      "type": "object",
      "properties": {
        "items": { "$ref": "#/definitions/ListOfBlogPosts" },
        "pagination": { "$ref": "#/definitions/Pagination%201" }
      }
    },
    "ActiveQuestionnaire": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the currently active questionnaire. Null if no questionnaire is active.",
          "example": "Q1"
        }
      },
      "required": ["id"]
    },
    "BlacklistSchema": {
      "type": "array",
      "x-constraint": { "unique": { "ignoreUndefined": false } },
      "items": {
        "type": "string",
        "description": "Blacklisted address or subnet in cidr format.",
        "x-format": { "ip": { "cidr": "optional" } }
      }
    },
    "Model 25": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "deviceId": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "deviceName": { "type": "string" },
        "deviceType": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "interfaceId": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        }
      },
      "required": ["deviceId"]
    },
    "ips": {
      "type": "array",
      "description": "List of IPs objects in UNMS within the subnet with deviceId and interfaceId.",
      "items": { "$ref": "#/definitions/Model%2025" }
    },
    "SubnetWithIpSchema": {
      "type": "object",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "IP subnet in cidr notation",
          "example": "192.168.1.0/24"
        },
        "ips": { "$ref": "#/definitions/ips" }
      },
      "required": ["ips"]
    },
    "validSubnets": {
      "type": "array",
      "items": { "$ref": "#/definitions/SubnetWithIpSchema" }
    },
    "invalidSubnets": {
      "type": "array",
      "items": { "$ref": "#/definitions/SubnetWithIpSchema" }
    },
    "SubnetList": {
      "type": "object",
      "properties": {
        "validSubnets": { "$ref": "#/definitions/validSubnets" },
        "invalidSubnets": { "$ref": "#/definitions/invalidSubnets" }
      }
    },
    "interval 1": {
      "type": "object",
      "properties": {
        "start": { "type": "number", "example": 1534426227215 },
        "end": { "type": "number", "example": 1534422627215 }
      },
      "required": ["start", "end"]
    },
    "GraphDataPoint": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Milliseconds elapsed between 1 January 1970 00:00:00 UTC and the given date",
          "example": 1534426215000
        },
        "y": {
          "type": "number",
          "description": "Data point value. null if we do not have any value for given timestamp.",
          "example": 10193
        }
      },
      "required": ["x", "y"]
    },
    "GraphDataSet": {
      "type": "array",
      "description": "Generic graph data set",
      "items": { "$ref": "#/definitions/GraphDataPoint" }
    },
    "SitesStatistics": {
      "type": "object",
      "properties": {
        "period": {
          "type": "number",
          "description": "Number of milliseconds between data points",
          "example": 15000
        },
        "interval": { "$ref": "#/definitions/interval%201" },
        "download": { "$ref": "#/definitions/GraphDataSet" },
        "upload": { "$ref": "#/definitions/GraphDataSet" }
      }
    },
    "SiteTrafficShaping 1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE if optional Traffic Shaping queue are activated.",
          "example": true
        },
        "propagation": {
          "type": "string",
          "description": "\n      Whether or not set Traffic Shaping on Client devices like, CPEs and ONUs.\n      Enabling this will lower your traffic in local network.\n    ",
          "enum": ["all", "gateway"]
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Download speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": { "positive": true }
        },
        "downloadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at downloadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": { "positive": true }
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Upload speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": { "positive": true }
        },
        "uploadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at uploadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": { "positive": true }
        },
        "aggregation": {
          "type": "integer",
          "description": "\n      Number indicating how many times the guaranteed rate is less than the maximum allowed bandwidth.\n      Null for auto calculation by UNMS.\n    ",
          "example": 2,
          "minimum": 1,
          "maximum": 10000
        }
      },
      "required": [
        "enabled",
        "downloadSpeed",
        "downloadBurstSize",
        "uploadSpeed",
        "uploadBurstSize",
        "aggregation"
      ]
    },
    "Traffic 1": {
      "type": "object",
      "properties": {
        "time": {
          "type": "number",
          "description": "Start of the aggregated time interval as a timestamp in milliseconds",
          "example": 1524751200000
        },
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded during interval",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded during interval",
          "example": 986305
        }
      },
      "required": ["time", "upload", "download"]
    },
    "TrafficList": {
      "type": "array",
      "items": { "$ref": "#/definitions/Traffic%201" }
    },
    "ImageIdentification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["id"]
    },
    "date": { "type": "object" },
    "Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "identification": { "$ref": "#/definitions/ImageIdentification" },
        "name": { "type": "string" },
        "height": { "type": "number" },
        "width": { "type": "number" },
        "size": { "type": "number" },
        "order": { "type": "number" },
        "date": { "$ref": "#/definitions/date" },
        "description": { "type": "string" },
        "fileName": { "type": "string" },
        "fileType": { "type": "string" },
        "fullUrl": { "type": "string" },
        "fullUrlRelative": { "type": "string" },
        "thumbUrl": { "type": "string" },
        "thumbUrlRelative": { "type": "string" }
      },
      "required": [
        "id",
        "identification",
        "height",
        "width",
        "size",
        "order",
        "date",
        "description",
        "fileName",
        "fileType",
        "fullUrl",
        "thumbUrl"
      ]
    },
    "ListOfImages": {
      "type": "array",
      "items": { "$ref": "#/definitions/Image" }
    },
    "Model 26": {
      "type": "object",
      "properties": {
        "username": { "type": "string" },
        "password": { "type": "string" },
        "readOnly": { "type": "boolean" },
        "createdAt": { "type": "string", "format": "date-time" },
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "sshPort": { "type": "integer", "minimum": 0, "maximum": 65535 },
        "httpsPort": { "type": "integer", "minimum": 0, "maximum": 65535 }
      },
      "required": ["deviceId"]
    },
    "credentials": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2026" }
    },
    "Device list credentials": {
      "type": "object",
      "properties": {
        "credentials": { "$ref": "#/definitions/credentials" },
        "isPassphraseMissing": { "type": "boolean" }
      },
      "required": ["credentials"]
    },
    "credentials 1": {
      "type": "object",
      "properties": {
        "username": { "type": "string" },
        "password": { "type": "string" },
        "readOnly": { "type": "boolean" },
        "createdAt": { "type": "string", "format": "date-time" }
      }
    },
    "Device's credentials": {
      "type": "object",
      "properties": {
        "credentials": { "$ref": "#/definitions/credentials%201" },
        "isPassphraseMissing": { "type": "boolean" }
      },
      "required": ["credentials"]
    },
    "radio2GhzFrequencyList": {
      "type": "array",
      "items": { "type": "string" }
    },
    "radio5GhzFrequencyList": {
      "type": "array",
      "items": { "type": "string" }
    },
    "FrequencyList": {
      "type": "object",
      "properties": {
        "radio2GhzFrequencyList": {
          "$ref": "#/definitions/radio2GhzFrequencyList"
        },
        "radio5GhzFrequencyList": {
          "$ref": "#/definitions/radio5GhzFrequencyList"
        }
      },
      "required": ["radio2GhzFrequencyList", "radio5GhzFrequencyList"]
    },
    "dataVlan": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "id": { "type": "integer", "minimum": 1, "maximum": 4096 }
      },
      "required": ["enabled", "id"]
    },
    "interfaceNames": { "type": "array", "items": { "type": "string" } },
    "dns": {
      "type": "array",
      "items": {
        "type": "string",
        "x-format": { "ip": { "version": ["ipv4"], "cidr": "forbidden" } }
      }
    },
    "dhcp": {
      "type": "object",
      "properties": {
        "ignore": { "type": "boolean" },
        "interface": { "type": "string" },
        "rangeStart": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "forbidden" } }
        },
        "rangeEnd": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "forbidden" } }
        },
        "leaseTime": { "type": "string" }
      },
      "required": ["ignore", "rangeStart", "rangeEnd"]
    },
    "lan": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "enum": ["bridge", "router"] },
        "interfaceNames": { "$ref": "#/definitions/interfaceNames" },
        "gateway": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "forbidden" } }
        },
        "cidr": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "required" } }
        },
        "proto": { "type": "string", "enum": ["static", "dhcp", "pppoe"] },
        "dns": { "$ref": "#/definitions/dns" },
        "dhcp": { "$ref": "#/definitions/dhcp" }
      },
      "required": ["type", "interfaceNames", "gateway", "cidr", "proto"]
    },
    "wan": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "interfaceNames": { "$ref": "#/definitions/interfaceNames" },
        "cidr": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "required" } }
        },
        "gateway": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "forbidden" } }
        },
        "proto": { "type": "string", "enum": ["static", "dhcp", "pppoe"] },
        "dns": { "$ref": "#/definitions/dns" },
        "service": { "type": "string" },
        "username": { "type": "string" },
        "password": { "type": "string" }
      },
      "required": [
        "enabled",
        "interfaceNames",
        "cidr",
        "gateway",
        "proto",
        "service",
        "username",
        "password"
      ]
    },
    "mgt": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "vlanId": { "type": "integer", "minimum": 1, "maximum": 4096 },
        "proto": { "type": "string", "enum": ["static", "dhcp", "pppoe"] },
        "cidr": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "required" } }
        },
        "service": { "type": "string" },
        "username": { "type": "string" },
        "password": { "type": "string" }
      },
      "required": [
        "enabled",
        "vlanId",
        "proto",
        "cidr",
        "service",
        "username",
        "password"
      ]
    },
    "ports 2": {
      "type": "array",
      "items": { "type": "integer", "minimum": 1, "maximum": 3 }
    },
    "vlp1": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "vlanId": { "type": "integer", "minimum": 1, "maximum": 4096 },
        "ports": { "$ref": "#/definitions/ports%202" },
        "tagged": { "type": "boolean" }
      },
      "required": ["enabled", "vlanId", "tagged"]
    },
    "ports 3": {
      "type": "array",
      "items": { "type": "integer", "minimum": 1, "maximum": 3 }
    },
    "vlp2": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "vlanId": { "type": "integer", "minimum": 1, "maximum": 4096 },
        "ports": { "$ref": "#/definitions/ports%203" },
        "tagged": { "type": "boolean" }
      },
      "required": ["enabled", "vlanId", "tagged"]
    },
    "ports 4": {
      "type": "array",
      "items": { "type": "integer", "minimum": 1, "maximum": 3 }
    },
    "vlp3": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "vlanId": { "type": "integer", "minimum": 1, "maximum": 4096 },
        "ports": { "$ref": "#/definitions/ports%204" },
        "tagged": { "type": "boolean" }
      },
      "required": ["enabled", "vlanId", "tagged"]
    },
    "upnpd": {
      "type": "object",
      "properties": { "enabled": { "type": "boolean" } },
      "required": ["enabled"]
    },
    "Model 27": { "type": "object" },
    "portForwardRules": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2027" }
    },
    "Model 28": { "type": "object" },
    "staticRoutes": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2028" }
    },
    "Model 29": { "type": "object" },
    "staticDhcpLeases": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2029" }
    },
    "AirCubeNetworkConfig": {
      "type": "object",
      "properties": {
        "mode": { "type": "string", "enum": ["bridge", "router"] },
        "blockManagementAccess": { "type": "boolean" },
        "dataVlan": { "$ref": "#/definitions/dataVlan" },
        "lan": { "$ref": "#/definitions/lan" },
        "wan": { "$ref": "#/definitions/wan" },
        "mgt": { "$ref": "#/definitions/mgt" },
        "vlp1": { "$ref": "#/definitions/vlp1" },
        "vlp2": { "$ref": "#/definitions/vlp2" },
        "vlp3": { "$ref": "#/definitions/vlp3" },
        "upnpd": { "$ref": "#/definitions/upnpd" },
        "natEnabled": { "type": "boolean" },
        "portForwardRules": { "$ref": "#/definitions/portForwardRules" },
        "staticRoutes": { "$ref": "#/definitions/staticRoutes" },
        "staticDhcpLeases": { "$ref": "#/definitions/staticDhcpLeases" }
      },
      "required": [
        "mode",
        "blockManagementAccess",
        "portForwardRules",
        "staticRoutes",
        "staticDhcpLeases"
      ]
    },
    "wifi2Ghz": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "available": { "type": "boolean" },
        "channel": {
          "type": "number",
          "x-alternatives": [
            { "type": "number" },
            { "type": "string", "enum": ["auto"] }
          ]
        },
        "country": { "type": "string" },
        "encryption": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "channelWidth": { "type": "number" },
        "isWPA2PSKEnabled": { "type": "boolean" },
        "key": { "type": "string" },
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "ssid": { "type": "string" },
        "txPower": { "type": "number" },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "isChannelAuto": { "type": "boolean" },
        "frequency": { "type": "number" }
      },
      "required": [
        "enabled",
        "authentication",
        "available",
        "channel",
        "encryption",
        "channelWidth",
        "key",
        "mode",
        "ssid",
        "txPower"
      ]
    },
    "wifi5Ghz": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "authentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "available": { "type": "boolean" },
        "channel": {
          "type": "number",
          "x-alternatives": [
            { "type": "number" },
            { "type": "string", "enum": ["auto"] }
          ]
        },
        "country": { "type": "string" },
        "encryption": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "channelWidth": { "type": "number" },
        "isWPA2PSKEnabled": { "type": "boolean" },
        "key": { "type": "string" },
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "ssid": { "type": "string" },
        "txPower": { "type": "number" },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "isChannelAuto": { "type": "boolean" },
        "frequency": { "type": "number" }
      },
      "required": [
        "enabled",
        "authentication",
        "available",
        "channel",
        "encryption",
        "channelWidth",
        "key",
        "mode",
        "ssid",
        "txPower"
      ]
    },
    "AirCubeWifiConfig": {
      "type": "object",
      "properties": {
        "wifi2Ghz": { "$ref": "#/definitions/wifi2Ghz" },
        "wifi5Ghz": { "$ref": "#/definitions/wifi5Ghz" },
        "wifiMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        }
      }
    },
    "Model 30": {
      "type": "array",
      "items": { "$ref": "#/definitions/Station" }
    },
    "radio2GhzTxPowerList": { "type": "array", "items": { "type": "string" } },
    "radio5GhzTxPowerList": { "type": "array", "items": { "type": "string" } },
    "TxPowerList": {
      "type": "object",
      "properties": {
        "radio2GhzTxPowerList": {
          "$ref": "#/definitions/radio2GhzTxPowerList"
        },
        "radio5GhzTxPowerList": { "$ref": "#/definitions/radio5GhzTxPowerList" }
      },
      "required": ["radio2GhzTxPowerList", "radio5GhzTxPowerList"]
    },
    "ledNightMode": {
      "type": "object",
      "properties": {
        "enable": { "type": "boolean" },
        "start": { "type": "number" },
        "end": { "type": "number" }
      },
      "required": ["enable", "start", "end"]
    },
    "AirCubeSystemConfig": {
      "type": "object",
      "properties": {
        "deviceName": { "type": "string" },
        "timezone": { "type": "string" },
        "zonename": { "type": "string" },
        "username": { "type": "string" },
        "newPassword": { "type": "string" },
        "ledNightMode": { "$ref": "#/definitions/ledNightMode" },
        "poePassthrough": { "type": "boolean" },
        "resetButtonEnabled": { "type": "boolean" }
      },
      "required": [
        "deviceName",
        "timezone",
        "zonename",
        "username",
        "poePassthrough",
        "resetButtonEnabled"
      ]
    },
    "Model 31": {
      "type": "array",
      "items": { "$ref": "#/definitions/Station" }
    },
    "SiteAround": {
      "type": "object",
      "properties": {
        "airmaxMode": { "type": "string" },
        "bandString": { "type": "string" },
        "encryption": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "frequency": { "type": "number" },
        "hostname": { "type": "string" },
        "id": {
          "type": "string",
          "example": "F2:9F:C2:6E:AB:AEguest-wifiwpa2"
        },
        "isAirmaxEnabled": { "type": "boolean" },
        "isWirelessModeValid": { "type": "boolean" },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "mode": { "type": "string" },
        "name": { "type": "string" },
        "noiseLevel": { "type": "number" },
        "signalLevel": { "type": "number" },
        "ssid": { "type": "string", "description": "SSID" },
        "validEncryption": { "type": "boolean" }
      }
    },
    "ListOfSitesAround": {
      "type": "array",
      "items": { "$ref": "#/definitions/SiteAround" }
    },
    "DeviceIdFrequencyBandsSchema": { "type": "object" },
    "Model 32": {
      "type": "object",
      "properties": { "admin": { "$ref": "#/definitions/admin" } }
    },
    "ListOfAirmaxStations": {
      "type": "array",
      "items": { "$ref": "#/definitions/Station" }
    },
    "ubntData": {
      "type": "object",
      "properties": {
        "firmwareVersion": { "type": "string" },
        "model": { "type": "string" }
      },
      "required": ["model"]
    },
    "addresses 2": {
      "type": "array",
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "required" } }
      }
    },
    "Model 33": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "position": { "type": "integer" },
        "name": { "type": "string", "minLength": 1, "maxLength": 256 },
        "mac": { "type": "string" },
        "type": { "type": "string", "enum": ["eth", "sfp+", "wlan"] },
        "addresses": { "$ref": "#/definitions/addresses%202" }
      },
      "required": ["id", "position", "name"]
    },
    "ListOfInterfaces": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/Model%2033" }
    },
    "DeviceBlackBoxConfig": {
      "type": "object",
      "properties": {
        "deviceId": { "type": "string", "x-format": { "guid": true } },
        "hostname": { "type": "string", "minLength": 1 },
        "modelName": { "type": "string", "maxLength": 50 },
        "macAddress": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "deviceRole": {
          "type": "string",
          "default": "router",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "siteId": { "type": "string", "x-format": { "guid": true } },
        "pingEnabled": { "type": "boolean", "default": false },
        "ipAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } },
          "required": ["ipAddress"],
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "optional" } } }
          ]
        },
        "ubntDevice": { "type": "boolean", "default": false },
        "ubntData": { "$ref": "#/definitions/ubntData" },
        "snmpCommunity": { "type": "string" },
        "note": { "type": "string" },
        "interfaces": { "$ref": "#/definitions/ListOfInterfaces" }
      },
      "required": [
        "deviceId",
        "hostname",
        "siteId",
        "pingEnabled",
        "interfaces"
      ]
    },
    "Model 34": {
      "type": "object",
      "properties": {
        "netflowStatus": {
          "type": "string",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        }
      }
    },
    "Model 35": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identification of port",
          "example": "1"
        },
        "speed": {
          "type": "string",
          "description": "Interface link speed ",
          "example": "auto",
          "enum": [
            "auto-auto",
            "auto",
            "autodetect",
            "10000-full",
            "1000-full",
            "2500-full",
            "1000-half",
            "100-full",
            "100-half",
            "10-full",
            "10-half"
          ]
        }
      },
      "required": ["id", "speed"]
    },
    "ports 5": {
      "type": "array",
      "description": "Configuration or status of ONU's ethernet ports",
      "example": [{ "id": "1", "speed": "auto" }],
      "items": { "$ref": "#/definitions/Model%2035" }
    },
    "includeVlans": {
      "type": "array",
      "description": "List of include VLANs.",
      "example": [222, 223],
      "minItems": 0,
      "items": {
        "type": "integer",
        "description": "Include VLAN",
        "example": 223,
        "minimum": 1,
        "maximum": 4063
      }
    },
    "Model 36": {
      "type": "object",
      "properties": {
        "port": {
          "type": "string",
          "description": "Identification of port",
          "example": "1"
        },
        "nativeVlan": {
          "type": "integer",
          "description": "Native VLAN identification",
          "example": 4063,
          "minimum": 1,
          "maximum": 4063
        },
        "includeVlans": { "$ref": "#/definitions/includeVlans" }
      },
      "required": ["port", "nativeVlan"]
    },
    "vlans 2": {
      "type": "array",
      "description": "VLAN configuration on ethernet ports.",
      "example": [{ "port": "1", "nativeVlan": 1, "includeVlans": [222, 223] }],
      "items": { "$ref": "#/definitions/Model%2036" }
    },
    "lanPort": {
      "type": "array",
      "description": "Port (or port range) forwarded on target device",
      "example": [65535],
      "minItems": 1,
      "maxItems": 2,
      "items": { "type": "integer", "minimum": 0, "maximum": 65535 }
    },
    "wanPort": {
      "type": "array",
      "description": "Port (or port range) forwarded on WAN",
      "example": [65535],
      "minItems": 1,
      "maxItems": 2,
      "items": { "type": "integer", "minimum": 0, "maximum": 65535 }
    },
    "Model 37": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if rule is enabled",
          "example": true
        },
        "comment": {
          "type": "string",
          "description": "Custom description text",
          "example": "Some comment",
          "maxLength": 25
        },
        "protocol": {
          "type": "string",
          "description": "Forwarded protocols",
          "example": "tcpudp",
          "enum": ["tcpudp", "tcp", "udp"]
        },
        "lanAddress": {
          "type": "string",
          "description": "IPv4 address of the target LAN device",
          "example": "192.168.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "lanPort": { "$ref": "#/definitions/lanPort" },
        "wanPort": { "$ref": "#/definitions/wanPort" }
      },
      "required": [
        "enabled",
        "comment",
        "protocol",
        "lanAddress",
        "lanPort",
        "wanPort"
      ]
    },
    "portForwards": {
      "type": "array",
      "description": "Port forwarding rules",
      "example": [
        {
          "enabled": true,
          "comment": "some comment",
          "protocol": "tcpudp",
          "lanAddress": "192.168.3.3",
          "lanPort": [333],
          "wanPort": [334]
        }
      ],
      "minItems": 0,
      "items": { "$ref": "#/definitions/Model%2037" }
    },
    "dnsResolvers": {
      "type": "array",
      "description": "Array of IPv4 addresses of DNS resolvers",
      "example": ["8.8.8.8"],
      "minItems": 0,
      "items": {
        "type": "string",
        "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
      }
    },
    "lan 1": {
      "type": "object",
      "properties": {
        "dhcpServerMode": {
          "type": "string",
          "description": "DHCP server mode",
          "example": "enabled",
          "enum": ["enabled", "disabled", "relay"]
        },
        "dhcpPoolStart": {
          "type": "string",
          "description": "IPv4 DHCP range start",
          "example": "192.168.1.10",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dhcpPoolEnd": {
          "type": "string",
          "description": "IPv4 DHCP range start",
          "example": "192.168.1.250",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dhcpLeaseTime": {
          "type": "integer",
          "description": "DHCP lease time in seconds",
          "example": 600,
          "minimum": 1
        },
        "dnsProxyEnabled": {
          "type": "boolean",
          "description": "Set to true to enable DNS proxying",
          "example": true
        },
        "dhcpRelay": {
          "type": "string",
          "description": "IPv4 address of DHCP relay",
          "example": "192.168.10.250",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dnsResolvers": { "$ref": "#/definitions/dnsResolvers" }
      },
      "required": [
        "dhcpServerMode",
        "dhcpPoolStart",
        "dhcpPoolEnd",
        "dhcpLeaseTime",
        "dnsProxyEnabled",
        "dhcpRelay"
      ]
    },
    "wan 1": {
      "type": "object",
      "properties": {
        "wanMode": {
          "type": "string",
          "description": "WAN mode",
          "example": "dhcp",
          "enum": ["static", "dhcp", "pppoe"]
        },
        "wanAddress": {
          "type": "string",
          "description": "WAN address of ONU in CIDR format - required if wanMode is set to \"static\"",
          "example": "192.168.1.250/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "gateway": {
          "type": "string",
          "description": "IPv4 address of gateway",
          "example": "192.168.1.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dnsResolvers": { "$ref": "#/definitions/dnsResolvers" },
        "pppoeMode": {
          "type": "string",
          "description": "PPPoE mode, required if WAN mode set to PPPoE",
          "example": "auto",
          "enum": ["auto", "pap", "chap"]
        },
        "pppoeUser": {
          "type": "string",
          "description": "PPPoE username",
          "example": "ubnt"
        },
        "pppoePassword": {
          "type": "string",
          "description": "PPPoE password",
          "example": "pa$$word"
        }
      },
      "required": [
        "wanMode",
        "wanAddress",
        "gateway",
        "pppoeMode",
        "pppoeUser",
        "pppoePassword"
      ]
    },
    "ipv4": {
      "type": "object",
      "description": "LAN and WAN IPv4 settings",
      "example": {
        "lan": {
          "dhcpServerMode": "enabled",
          "dhcpPoolStart": "192.168.1.10",
          "dhcpPoolEnd": "192.168.1.250",
          "dhcpLeaseTime": 600,
          "dnsProxyEnabled": true,
          "dhcpRelay": "192.168.10.250",
          "dnsResolvers": ["8.8.8.8"]
        },
        "wan": {
          "wanMode": "dhcp",
          "wanAddress": "192.168.20.250/24",
          "gateway": "192.168.1.1",
          "dnsResolvers": ["8.8.8.8"],
          "pppoeMode": "auto",
          "pppoeUser": "ubnt",
          "pppoePassword": "pa$$word"
        }
      },
      "properties": {
        "lan": { "$ref": "#/definitions/lan%201" },
        "wan": { "$ref": "#/definitions/wan%201" }
      }
    },
    "lan 2": {
      "type": "object",
      "properties": {
        "lanMode6": {
          "type": "string",
          "description": "IPv6 LAN mode",
          "example": "auto",
          "enum": ["auto", "static"]
        },
        "lanAddress6": {
          "type": "string",
          "description": "IPv6 static LAN address",
          "example": "0:0:0:0:0:ffff:5ca8:d101",
          "x-format": { "ip": { "version": ["ipv6"], "cidr": "optional" } }
        },
        "routerAdvertisementMode": {
          "type": "string",
          "description": "Router advertisement mode",
          "example": "auto",
          "enum": ["auto", "static"]
        },
        "routerAdvertisementPrefix": {
          "type": "string",
          "description": "Static prefix configuration in IPv6 CIDR",
          "example": "0:0:0:0:0:ffff:5ca8:d101/24",
          "x-format": { "ip": { "cidr": "required" } }
        }
      },
      "required": [
        "lanMode6",
        "lanAddress6",
        "routerAdvertisementMode",
        "routerAdvertisementPrefix"
      ]
    },
    "wan 2": {
      "type": "object",
      "properties": {
        "wanMode6": {
          "type": "string",
          "description": "IPv6 WAN mode",
          "example": "slaac",
          "enum": ["dhcp", "slaac", "link-local", "static"]
        },
        "wanAddress6": {
          "type": "string",
          "description": "WAN address of ONU in CIDR format - required if wanMode6 is set to \"static\"",
          "example": "0:0:0:0:0:ffff:5ca8:d101/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "gateway6": {
          "type": "string",
          "description": "IPv6 address of gateway",
          "example": "0:0:0:0:0:ffff:5ca8:d101/24",
          "x-format": { "ip": { "version": ["ipv6"], "cidr": "optional" } }
        }
      },
      "required": ["wanMode6", "wanAddress6", "gateway6"]
    },
    "ipv6": {
      "type": "object",
      "description": "LAN and WAN IPv6 settings",
      "example": {
        "lan": {
          "lanMode6": "auto",
          "lanAddress6": "0:0:0:0:0:ffff:5ca8:d101",
          "routerAdvertisementMode": "auto",
          "routerAdvertisementPrefix": "0:0:0:0:0:ffff:5ca8:d101/24"
        },
        "wan": {
          "wanMode6": "slaac",
          "wanAddress6": "0:0:0:0:0:ffff:5ca8:d101/24",
          "gateway6": "0:0:0:0:0:ffff:5ca8:d101"
        }
      },
      "properties": {
        "lan": { "$ref": "#/definitions/lan%202" },
        "wan": { "$ref": "#/definitions/wan%202" }
      }
    },
    "OnuNetwork": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Onu network mode",
          "example": "bridge",
          "enum": ["bridge", "router"]
        },
        "downloadLimitEnabled": {
          "type": "boolean",
          "description": "Set to true to enable download bandwidth limit",
          "example": true
        },
        "uploadLimitEnabled": {
          "type": "boolean",
          "description": "Set to true to enable upload bandwidth limit",
          "example": true
        },
        "downloadLimit": {
          "type": "integer",
          "description": "Download bandwidth limit in Mbps",
          "example": 10,
          "minimum": 0
        },
        "uploadLimit": {
          "type": "integer",
          "description": "Upload bandwidth limit in Mbps",
          "example": 10,
          "minimum": 0
        },
        "lanAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "lanProvisioned": {
          "type": "boolean",
          "description": "Set to true to enable setting LAN from OLT",
          "example": true
        },
        "wanVlan": {
          "type": "integer",
          "description": "WAN VLAN identification",
          "example": 4063,
          "minimum": 1,
          "maximum": 4063
        },
        "natFtp": {
          "type": "boolean",
          "description": "Set to true to enable NAT for FTP protocol",
          "example": true
        },
        "natPptp": {
          "type": "boolean",
          "description": "Set to true to enable NAT for PPTP protocol",
          "example": true
        },
        "natRtsp": {
          "type": "boolean",
          "description": "Set to true to enable NAT for RTSP protocol",
          "example": true
        },
        "natSip": {
          "type": "boolean",
          "description": "Set to true to enable NAT for SIP protocol",
          "example": true
        },
        "upnpEnabled": {
          "type": "boolean",
          "description": "Set to true to enable UPnP",
          "example": true
        },
        "firewallEnabled6": {
          "type": "boolean",
          "description": "Set to true to enable IPv6 statefull firewall",
          "example": true
        },
        "ports": { "$ref": "#/definitions/ports%205" },
        "vlans": { "$ref": "#/definitions/vlans%202" },
        "portForwards": { "$ref": "#/definitions/portForwards" },
        "ipv4": { "$ref": "#/definitions/ipv4" },
        "isIpv6Enabled": {
          "type": "boolean",
          "description": "Set to true to enable IPv6",
          "example": true
        },
        "ipv6": { "$ref": "#/definitions/ipv6" }
      },
      "required": [
        "mode",
        "downloadLimitEnabled",
        "uploadLimitEnabled",
        "downloadLimit",
        "uploadLimit",
        "lanAddress",
        "lanProvisioned",
        "wanVlan",
        "natFtp",
        "natPptp",
        "natRtsp",
        "natSip",
        "upnpEnabled",
        "firewallEnabled6",
        "ports",
        "vlans",
        "portForwards",
        "ipv4",
        "isIpv6Enabled",
        "ipv6"
      ]
    },
    "OnuSystem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Device name",
          "example": "UBNTe7961646",
          "minLength": 1
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to true if device is enabled",
          "example": true
        },
        "adminPassword": {
          "type": "string",
          "description": "Admin password",
          "example": "secredPass_123",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": ["name", "enabled"]
    },
    "Model 38": {
      "type": "object",
      "properties": {
        "httpPort": {
          "type": "integer",
          "description": "HTTP port number",
          "example": 80,
          "minimum": 0,
          "maximum": 65535
        },
        "sshEnabled": {
          "type": "boolean",
          "description": "Set to true if SSH is enabled",
          "example": true
        },
        "sshPort": {
          "type": "integer",
          "description": "SSH port number",
          "example": 22,
          "minimum": 0,
          "maximum": 65535
        },
        "telnetEnabled": {
          "type": "boolean",
          "description": "Set to true if Telnet is enabled",
          "example": true
        },
        "telnetPort": {
          "type": "integer",
          "description": "Telnet port number",
          "example": 23,
          "minimum": 0,
          "maximum": 65535
        },
        "ubntDiscoveryEnabled": {
          "type": "boolean",
          "description": "Set to true if UNMS discovery is enabled",
          "example": true
        }
      },
      "required": [
        "httpPort",
        "sshEnabled",
        "sshPort",
        "telnetEnabled",
        "telnetPort",
        "ubntDiscoveryEnabled"
      ]
    },
    "interface 2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Interface name (non-changeable)",
          "example": "sfp1"
        },
        "name": {
          "type": "string",
          "description": "Interface custom description",
          "example": "customDescription"
        },
        "mac": {
          "type": "string",
          "description": "MAC address of the interface",
          "example": "04:18:D6:A0:64:DC",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "type": {
          "type": "string",
          "description": "Interface type",
          "example": "ethernet",
          "enum": [
            "ethernet",
            "switch",
            "port",
            "pon",
            "bridge",
            "pppoe",
            "vlan",
            "wireless",
            "lag"
          ]
        }
      },
      "required": ["id"]
    },
    "Model 39": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "VLAN mode",
          "example": "tagged",
          "enum": ["tagged", "untagged", "quiq"]
        },
        "interface": { "$ref": "#/definitions/interface%202" }
      },
      "required": ["mode"]
    },
    "participation": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2039" }
    },
    "Model 40": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "VLAN Id", "example": "222" },
        "type": {
          "type": "string",
          "description": "Type of record",
          "example": "single",
          "enum": ["single", "range"]
        },
        "name": {
          "type": "string",
          "description": "VLAN name",
          "example": "customName"
        },
        "participation": { "$ref": "#/definitions/participation" }
      },
      "required": ["id", "type"]
    },
    "vlans 3": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/Model%2040" }
    },
    "vlanListSchema": {
      "type": "object",
      "properties": { "vlans": { "$ref": "#/definitions/vlans%203" } }
    },
    "OnuWireless": {
      "type": "object",
      "properties": {
        "provisioned": {
          "type": "boolean",
          "description": "When false, configuration of wireless part can be done directly from ONU only.",
          "example": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to true if wireless is enabled",
          "example": true
        },
        "channel": {
          "type": "string",
          "description": "Wireless channel, set to 'auto' or number 1-13",
          "example": "10",
          "enum": [
            "auto",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13"
          ]
        },
        "channelWidth": {
          "type": "string",
          "description": "Wireless channel width in MHz",
          "example": "20",
          "enum": ["20", "40"]
        },
        "txPower": {
          "type": "number",
          "description": "TX power in %",
          "example": 100,
          "minimum": 0,
          "maximum": 100
        },
        "country": {
          "type": "string",
          "description": "Country for regulatory domain - ISO 3166-2 alpha code or WO for 'World wide'",
          "example": "US"
        },
        "countryListId": {
          "type": "string",
          "description": "Country list id",
          "example": "1"
        },
        "ssid": {
          "type": "string",
          "description": "Wireless network SSID",
          "minLength": 1,
          "maxLength": 32
        },
        "key": {
          "type": "string",
          "description": "WPA pre-shared key",
          "example": "5a467424bc93bbae75142a7",
          "minLength": 8,
          "maxLength": 63
        }
      },
      "required": [
        "provisioned",
        "enabled",
        "channel",
        "channelWidth",
        "txPower",
        "country",
        "countryListId",
        "ssid",
        "key"
      ]
    },
    "Model 41": {
      "type": "object",
      "properties": {
        "vendor": { "type": "string" },
        "origin": { "type": "string" },
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        }
      },
      "required": ["origin", "mac"]
    },
    "OnuClientList": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2041" }
    },
    "Model 42": {
      "type": "array",
      "items": { "$ref": "#/definitions/Station" }
    },
    "UnmsSettingMeta": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Display name used in UNMS for the device.",
          "example": "Main gateway.",
          "maxLength": 30
        },
        "note": {
          "type": "string",
          "description": "Custom device description.",
          "example": "Main gateway for whole network",
          "maxLength": 300
        },
        "maintenance": {
          "type": "boolean",
          "description": "If set to true outages are not reported for the device."
        },
        "customIpAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        }
      }
    },
    "UnmsSetting": {
      "type": "object",
      "properties": {
        "overrideGlobal": {
          "type": "boolean",
          "description": "\n    If TRUE during update of unms global settings this device settings will not update if FALSE then yes.\n    "
        },
        "deviceTransmissionFrequency": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "devicePingAddress": {
          "type": "string",
          "description": "Address for device to ping."
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds."
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds."
        },
        "deviceGracePeriodOutage": {
          "type": "number",
          "description": "In milliseconds."
        },
        "deviceTransmissionProfile": {
          "type": "string",
          "description": "Transmission frequency with device.",
          "example": "auto",
          "enum": ["auto", "custom"]
        },
        "meta": { "$ref": "#/definitions/UnmsSettingMeta" }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Connection password",
          "example": "pa$$word"
        },
        "ssid": {
          "type": "string",
          "description": "Connection SSID",
          "example": "someSSID"
        }
      }
    },
    "InstallationConfigurationSchema": {
      "type": "object",
      "description": "Installation device configuration",
      "properties": {
        "configuration": { "$ref": "#/definitions/configuration" },
        "ap": {
          "type": "boolean",
          "description": "It is set to true when the device is set to be installed as a AP",
          "example": true
        }
      }
    },
    "TrafficSummary": {
      "type": "object",
      "properties": {
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded during interval",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded during interval",
          "example": 986305
        }
      },
      "required": ["upload", "download"]
    },
    "autoChannelWidthList": { "type": "array", "items": { "type": "integer" } },
    "Model 43": {
      "type": "object",
      "properties": {
        "id": { "type": "number" },
        "name": { "type": "string" },
        "gain": { "type": "number" },
        "isBuiltIn": { "type": "boolean" }
      },
      "required": ["id", "name", "gain", "isBuiltIn"]
    },
    "antennaList": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2043" }
    },
    "channelWidthList": { "type": "array", "items": { "type": "number" } },
    "supportedIeeeStandards": {
      "type": "array",
      "items": { "type": "number" }
    },
    "supportedBands": { "type": "array", "items": { "type": "string" } },
    "txPowerRange": {
      "type": "object",
      "properties": {
        "min": { "type": "number" },
        "max": { "type": "number" }
      },
      "required": ["min", "max"]
    },
    "radio1": {
      "type": "object",
      "properties": {
        "antennaList": { "$ref": "#/definitions/antennaList" },
        "ccodeList": { "type": "number" },
        "ccodeLocked": { "type": "number" },
        "defaultAntennaId": { "type": "number" },
        "channelWidthList": { "$ref": "#/definitions/channelWidthList" },
        "ieeeBitmask": { "type": "number" },
        "supportedIeeeStandards": {
          "$ref": "#/definitions/supportedIeeeStandards"
        },
        "supportedBands": { "$ref": "#/definitions/supportedBands" },
        "txPowerRange": { "$ref": "#/definitions/txPowerRange" },
        "supportsApPtp": { "type": "boolean" },
        "supportsStaPtp": { "type": "boolean" },
        "supportsApPtmp": { "type": "boolean" },
        "supportsStaPtmp": { "type": "boolean" },
        "distanceLimit": { "type": "number" }
      },
      "required": [
        "ccodeList",
        "ccodeLocked",
        "defaultAntennaId",
        "ieeeBitmask",
        "supportsApPtp",
        "supportsStaPtp",
        "supportsApPtmp",
        "supportsStaPtmp",
        "distanceLimit"
      ]
    },
    "physicalInterfaceMACAddresses": {
      "type": "array",
      "items": { "type": "string" }
    },
    "boardInfo": {
      "type": "object",
      "properties": {
        "product": { "type": "string" },
        "model": { "type": "string" },
        "autoChannelWidthList": {
          "$ref": "#/definitions/autoChannelWidthList"
        },
        "radio1": { "$ref": "#/definitions/radio1" },
        "ledCount": { "type": "number" },
        "isExternalResetSupported": { "type": "boolean" },
        "rebootTimeout": { "type": "number" },
        "upgradeTimeout": { "type": "number" },
        "physicalInterfaceCount": { "type": "number" },
        "physicalInterfaceMACAddresses": {
          "$ref": "#/definitions/physicalInterfaceMACAddresses"
        }
      },
      "required": [
        "product",
        "model",
        "ledCount",
        "isExternalResetSupported",
        "rebootTimeout",
        "upgradeTimeout",
        "physicalInterfaceCount"
      ]
    },
    "extensionChannels": {
      "type": "array",
      "items": { "type": "string", "enum": ["plus", "minus"] }
    },
    "Model 44": {
      "type": "object",
      "properties": {
        "controlFrequency": { "type": "number" },
        "centerFrequency": { "type": "number" },
        "channel": { "type": "number" },
        "band": { "type": "string", "enum": ["A", "G"] },
        "channelWidth": { "type": "number" },
        "maxTXPower": { "type": "number" },
        "isDFS": { "type": "boolean" },
        "isIndoor": { "type": "boolean" },
        "isAirMax": { "type": "boolean" },
        "isEIRPLimited": { "type": "boolean" },
        "obeyRegulations": { "type": "boolean" },
        "channelStartFreq": { "type": "number" },
        "channelEndFreq": { "type": "number" },
        "extensionChannels": { "$ref": "#/definitions/extensionChannels" },
        "maxAntennaGain": { "type": "number" }
      },
      "required": [
        "controlFrequency",
        "centerFrequency",
        "channel",
        "band",
        "channelWidth",
        "maxTXPower",
        "isDFS",
        "isIndoor",
        "isAirMax",
        "isEIRPLimited",
        "obeyRegulations",
        "channelStartFreq",
        "channelEndFreq",
        "extensionChannels",
        "maxAntennaGain"
      ]
    },
    "regulatoryDomainChannels": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2044" }
    },
    "regulatoryDomainBands": { "type": "array", "items": { "type": "string" } },
    "backupWPA": {
      "type": "object",
      "properties": {
        "ssid": { "type": "string" },
        "apMac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "enabled": { "type": "boolean" },
        "presharedKey": { "type": "string" },
        "eapAnonymousIdentity": { "type": "string" },
        "eapUsername": { "type": "string" },
        "eapType": { "type": "string", "enum": ["PEAP", "TTLS"] },
        "eapTypeExt": { "type": "string", "enum": ["auth=MSCHAPV2"] },
        "eapPassword": { "type": "string" },
        "wpaAuthentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa2",
            "wpaTKIP",
            "wpa2TKIP",
            "wpaAES",
            "wpa2AES",
            "aes256",
            "none"
          ]
        }
      },
      "required": [
        "ssid",
        "apMac",
        "enabled",
        "presharedKey",
        "eapAnonymousIdentity",
        "eapUsername",
        "eapType",
        "eapTypeExt",
        "eapPassword",
        "wpaAuthentication",
        "security"
      ]
    },
    "securityConfig": {
      "type": "object",
      "properties": {
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa2",
            "wpaTKIP",
            "wpa2TKIP",
            "wpaAES",
            "wpa2AES",
            "aes256",
            "none"
          ]
        },
        "wpaAuthentication": {
          "type": "string",
          "enum": ["psk", "psk2", "ent", "none"]
        },
        "eapType": { "type": "string", "enum": ["PEAP", "TTLS"] },
        "eapTypeExt": { "type": "string", "enum": ["auth=MSCHAPV2"] },
        "presharedKey": { "type": "string" },
        "isWPASupplicantEnabled": { "type": "boolean" },
        "isAAAEnabled": { "type": "boolean" },
        "authServerIP": { "type": "string" },
        "authServerPort": { "type": "number" },
        "authServerSecret": { "type": "string" },
        "isAccountingServerEnabled": { "type": "boolean" },
        "accountingServerIP": { "type": "string" },
        "accountingServerPort": { "type": "number" },
        "accountingServerSecret": { "type": "string" },
        "eapAnonymousIdentity": { "type": "string" },
        "eapUsername": { "type": "string" },
        "eapPassword": { "type": "string" },
        "backupWPA": { "$ref": "#/definitions/backupWPA" }
      },
      "required": [
        "security",
        "wpaAuthentication",
        "eapType",
        "eapTypeExt",
        "presharedKey",
        "isWPASupplicantEnabled",
        "isAAAEnabled",
        "authServerIP",
        "authServerPort",
        "authServerSecret",
        "isAccountingServerEnabled",
        "accountingServerIP",
        "accountingServerPort",
        "accountingServerSecret",
        "eapAnonymousIdentity",
        "eapUsername",
        "eapPassword",
        "backupWPA"
      ]
    },
    "ledThresholdsConfig": { "type": "object" },
    "Model 45": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "isEnabled": { "type": "boolean" },
        "comment": { "type": "string" }
      },
      "required": ["mac", "isEnabled", "comment"]
    },
    "clients": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2045" }
    },
    "macACLConfig": {
      "type": "object",
      "properties": {
        "isEnabled": { "type": "boolean" },
        "policy": { "type": "string", "enum": ["allow", "deny"] },
        "clients": { "$ref": "#/definitions/clients" }
      },
      "required": ["isEnabled", "policy"]
    },
    "allowedFrequencies": { "type": "array", "items": { "type": "number" } },
    "tddFraming": {
      "type": "object",
      "properties": {
        "flexBetaEnabled": { "type": "boolean" },
        "duration": { "type": "number" },
        "dlRatio": { "type": "number" },
        "reseEnabled": { "type": "boolean" }
      },
      "required": ["flexBetaEnabled", "duration", "dlRatio", "reseEnabled"]
    },
    "AirMaxWifiConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "boardInfo": { "$ref": "#/definitions/boardInfo" },
        "regulatoryDomainChannels": {
          "$ref": "#/definitions/regulatoryDomainChannels"
        },
        "regulatoryDomainBands": {
          "$ref": "#/definitions/regulatoryDomainBands"
        },
        "securityConfig": { "$ref": "#/definitions/securityConfig" },
        "ledThresholdsConfig": { "$ref": "#/definitions/ledThresholdsConfig" },
        "macACLConfig": { "$ref": "#/definitions/macACLConfig" },
        "devName": { "type": "string" },
        "ssid": { "type": "string" },
        "apMac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "countryCode": { "type": "number" },
        "allowedFrequencies": { "$ref": "#/definitions/allowedFrequencies" },
        "band": { "type": "string", "enum": ["A", "G"] },
        "channelWidth": { "type": "number" },
        "antennaId": { "type": "number" },
        "txPower": { "type": "number" },
        "isIsolationEnabled": { "type": "boolean" },
        "centerFrequency": { "type": "number" },
        "controlFrequency": { "type": "number" },
        "isAutoTXRateEnabled": { "type": "boolean" },
        "txRate": { "type": "number" },
        "isAutoChannelWidthEnabled": { "type": "boolean" },
        "isWDSEnabled": { "type": "boolean" },
        "dutyCycle": { "type": "number" },
        "framePeriod": { "type": "number" },
        "txRateMode": { "type": "number" },
        "extensionChannel": { "type": "string", "enum": ["plus", "minus"] },
        "antennaGain": { "type": "number" },
        "cableLoss": { "type": "number" },
        "isAutoEIRPLimitEnabled": { "type": "boolean" },
        "isACKAutoDistanceEnabled": { "type": "boolean" },
        "ackDistance": { "type": "number" },
        "ackTimeout": { "type": "number" },
        "aggregationFrames": { "type": "number" },
        "isMulticastEnhanceEnabled": { "type": "boolean" },
        "isAddMtikEnabled": { "type": "boolean" },
        "pollingPriority": { "type": "number" },
        "distanceScale": { "type": "number" },
        "rxGain": { "type": "number" },
        "isRxGainAutoEnabled": { "type": "boolean" },
        "rxTargetPower": { "type": "number" },
        "txPowerMax": { "type": "number" },
        "sensitivityThresholdEnabled": { "type": "boolean" },
        "sensitivityThreshold": { "type": "number" },
        "amsduEnabled": { "type": "boolean" },
        "atpcEnabled": { "type": "boolean" },
        "atpcThreshold": { "type": "number" },
        "tdmaFilter": { "type": "number" },
        "deAuthProtectionStatusEnabled": { "type": "boolean" },
        "tddFraming": { "$ref": "#/definitions/tddFraming" },
        "hideSsid": { "type": "boolean" },
        "syncMode": { "type": "number", "enum": [1, 2] },
        "ieeeModeString": { "type": "string" }
      },
      "required": [
        "mode",
        "devName",
        "ssid",
        "apMac",
        "countryCode",
        "allowedFrequencies",
        "band",
        "channelWidth",
        "antennaId",
        "txPower",
        "isIsolationEnabled",
        "centerFrequency",
        "controlFrequency",
        "isAutoTXRateEnabled",
        "txRate",
        "isAutoChannelWidthEnabled",
        "isWDSEnabled",
        "dutyCycle",
        "framePeriod",
        "txRateMode",
        "extensionChannel",
        "antennaGain",
        "cableLoss",
        "isAutoEIRPLimitEnabled",
        "isACKAutoDistanceEnabled",
        "ackDistance",
        "ackTimeout",
        "aggregationFrames",
        "isMulticastEnhanceEnabled",
        "isAddMtikEnabled",
        "pollingPriority",
        "distanceScale",
        "rxGain",
        "isRxGainAutoEnabled",
        "rxTargetPower",
        "txPowerMax",
        "sensitivityThresholdEnabled",
        "sensitivityThreshold",
        "amsduEnabled",
        "atpcEnabled",
        "atpcThreshold",
        "tdmaFilter",
        "deAuthProtectionStatusEnabled",
        "tddFraming",
        "hideSsid",
        "syncMode",
        "ieeeModeString"
      ]
    },
    "DHCPServer": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "description": "Primary DNS server address.",
          "example": "8.8.8.8",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dns2": {
          "type": "string",
          "description": "Secondary DNS server address.",
          "example": "8.8.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "unms.com",
          "minLength": 1
        },
        "dynamicLeases": {
          "type": "number",
          "description": "Total amount of dynamic leases used.",
          "example": 5,
          "minimum": 0
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "staticLeases": {
          "type": "number",
          "description": "Total amount of static leases used.",
          "example": 5,
          "minimum": 0
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": [
        "enabled",
        "interface",
        "leaseTime",
        "name",
        "poolSize",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList": {
      "type": "array",
      "items": { "$ref": "#/definitions/DHCPServer" }
    },
    "redistributeDefaultRoute": {
      "type": "object",
      "properties": { "enabled": { "type": "boolean" } }
    },
    "RedistributeConnected": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "metric": { "type": "string" }
      }
    },
    "RedistributeStatic": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "metric": { "type": "string" }
      }
    },
    "EdgeRouterOspf": {
      "type": "object",
      "properties": {
        "router": { "type": "string" },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/RedistributeConnected"
        },
        "redistributeStatic": { "$ref": "#/definitions/RedistributeStatic" }
      }
    },
    "DHCPLease": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "expiration": {
          "type": "string",
          "description": "expiration date in ISO format (UNMS-420); Nullable string."
        },
        "hostname": { "type": "string" },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server.",
          "minLength": 1
        },
        "mac": { "type": "string" },
        "serverName": { "type": "string", "minLength": 1 },
        "type": { "type": "string" }
      }
    },
    "DHCPLeaseList": {
      "type": "array",
      "items": { "$ref": "#/definitions/DHCPLease" }
    },
    "EdgeRouterRoute": {
      "type": "object",
      "properties": {
        "description": { "type": "string", "maxLength": 200 },
        "destination": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "required" } }
        },
        "distance": { "type": "number", "minimum": 0, "maximum": 255 },
        "enabled": { "type": "boolean" },
        "fib": { "type": "boolean" },
        "gateway": { "type": "string" },
        "gatewayStatus": { "type": "string" },
        "interface": { "type": "string" },
        "nextHop": { "type": "string" },
        "selected": { "type": "boolean" },
        "staticType": { "type": "string" },
        "type": { "type": "string" }
      }
    },
    "ListOfEdgeRouterRoutes": {
      "type": "array",
      "items": { "$ref": "#/definitions/EdgeRouterRoute" }
    },
    "includeVlans 1": { "type": "object" },
    "nativeVlan": { "type": "object" },
    "bridge": {
      "type": "object",
      "properties": {
        "includeVlans": { "$ref": "#/definitions/includeVlans%201" },
        "nativeVlan": { "$ref": "#/definitions/nativeVlan" }
      }
    },
    "linkSpeed": { "type": "object" },
    "router": {
      "type": "object",
      "properties": {
        "dhcpLeaseTime": { "type": "number" },
        "dhcpPoolEnd": { "type": "string" },
        "dhcpPoolStart": { "type": "string" },
        "dhcpRelay": { "type": "string" },
        "dhcpServer": { "type": "string" },
        "dnsProxyEnable": { "type": "boolean" },
        "gateway": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "natProtocolFtp": { "type": "boolean" },
        "natProtocolPptp": { "type": "boolean" },
        "natProtocolRtsp": { "type": "boolean" },
        "natProtocolSip": { "type": "boolean" },
        "primaryDns": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "secondaryDns": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "upnpEnabled": { "type": "boolean" },
        "wanAccessBlocked": { "type": "boolean" },
        "wanMode": { "type": "string" },
        "wanVlan": { "type": "number", "minimum": 2, "maximum": 4063 }
      }
    },
    "OnuProfile": {
      "type": "object",
      "properties": {
        "adminPassword": { "type": "string", "minLength": 1, "maxLength": 12 },
        "bandwidthLimitEnabled": { "type": "boolean" },
        "bandwidthLimitDown": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 1000 }
          ]
        },
        "bandwidthLimitUp": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 1000 }
          ]
        },
        "bridge": { "$ref": "#/definitions/bridge" },
        "httpPort": { "type": "integer", "minimum": 1, "maximum": 65535 },
        "lanAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "lanProvisioned": { "type": "boolean" },
        "id": { "type": "string" },
        "onuCount": { "type": "number" },
        "linkSpeed": { "$ref": "#/definitions/linkSpeed" },
        "mode": { "type": "string", "enum": ["bridge", "router"] },
        "name": { "type": "string", "minLength": 1, "maxLength": 80 },
        "router": { "$ref": "#/definitions/router" },
        "sshEnabled": { "type": "boolean" },
        "telnetEnabled": { "type": "boolean" },
        "sshPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 65535 }
          ]
        },
        "telnetPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 65535 }
          ]
        },
        "ubntDiscoveryEnabled": { "type": "boolean" }
      }
    },
    "Model 46": {
      "type": "array",
      "items": { "$ref": "#/definitions/OnuProfile" }
    },
    "OnuPolicies": {
      "type": "object",
      "properties": {
        "defaultState": { "type": "string" },
        "dhcpOption82": { "type": "boolean" }
      }
    },
    "Model 47": {
      "type": "object",
      "properties": {
        "deviceName": { "type": "string" },
        "timezone": { "type": "string" },
        "zonename": { "type": "string" },
        "username": { "type": "string" },
        "newPassword": { "type": "string" }
      },
      "required": ["deviceName", "timezone", "zonename", "username"]
    },
    "DHCPServer 1": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "description": "Primary DNS server address.",
          "example": "8.8.8.8",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dns2": {
          "type": "string",
          "description": "Secondary DNS server address.",
          "example": "8.8.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "unms.com",
          "minLength": 1
        },
        "dynamicLeases": {
          "type": "number",
          "description": "Total amount of dynamic leases used.",
          "example": 5,
          "minimum": 0
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "staticLeases": {
          "type": "number",
          "description": "Total amount of static leases used.",
          "example": 5,
          "minimum": 0
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": [
        "enabled",
        "interface",
        "leaseTime",
        "name",
        "poolSize",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList 1": {
      "type": "array",
      "items": { "$ref": "#/definitions/DHCPServer%201" }
    },
    "UnmsROspf": {
      "type": "object",
      "properties": {
        "router": { "type": "string" },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/RedistributeConnected"
        },
        "redistributeStatic": { "$ref": "#/definitions/RedistributeStatic" }
      }
    },
    "UnmsRRoute": {
      "type": "object",
      "properties": {
        "description": { "type": "string", "maxLength": 200 },
        "destination": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "required" } }
        },
        "distance": { "type": "number", "minimum": 1, "maximum": 255 },
        "enabled": { "type": "boolean" },
        "fib": { "type": "boolean" },
        "gateway": { "type": "string" },
        "gatewayStatus": { "type": "string" },
        "interface": { "type": "string" },
        "nextHop": { "type": "string" },
        "selected": { "type": "boolean" },
        "staticType": { "type": "string" },
        "type": { "type": "string" }
      }
    },
    "ListOfUnmsRRoutes": {
      "type": "array",
      "items": { "$ref": "#/definitions/UnmsRRoute" }
    },
    "DHCPLease 1": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "expiration": {
          "type": "string",
          "description": "expiration date in ISO format (UNMS-420); Nullable string."
        },
        "hostname": { "type": "string" },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server.",
          "minLength": 1
        },
        "mac": { "type": "string" },
        "serverName": { "type": "string", "minLength": 1 },
        "type": { "type": "string" }
      }
    },
    "DHCPLeaseList 1": {
      "type": "array",
      "items": { "$ref": "#/definitions/DHCPLease%201" }
    },
    "Model 48": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        },
        "displayName": { "type": "string", "example": "eth0" },
        "usedAuto": { "type": "boolean", "example": true },
        "usableForGateway": { "type": "boolean", "example": true }
      }
    },
    "InterfaceList": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2048" }
    },
    "ListOfAvailableInterfaces": {
      "type": "object",
      "properties": {
        "dataLinkId": { "type": "string" },
        "deviceId": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "interfaces": { "$ref": "#/definitions/InterfaceList" }
      },
      "required": ["deviceId"]
    },
    "DHCPServerList 2": {
      "type": "array",
      "items": { "$ref": "#/definitions/DHCPServer%201" }
    },
    "DataLinkPayload": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "x-format": { "guid": true } },
        "deviceIdFrom": { "type": "string", "x-format": { "guid": true } },
        "interfaceIdFrom": { "type": "string" },
        "deviceIdTo": { "type": "string", "x-format": { "guid": true } },
        "interfaceIdTo": { "type": "string" }
      },
      "required": [
        "deviceIdFrom",
        "interfaceIdFrom",
        "deviceIdTo",
        "interfaceIdTo"
      ]
    },
    "NewGatewayDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of gateway device",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["id"]
    },
    "NewGateway": {
      "type": "object",
      "properties": {
        "netflowEnabled": {
          "type": "boolean",
          "description": "Set to true to enable NetFlow.",
          "example": true
        },
        "netflowAlerts": {
          "type": "boolean",
          "description": "Set to true to enable alerts.",
          "example": true
        },
        "qosEnabled": {
          "type": "boolean",
          "description": "Set to true to enable traffic shaping.",
          "example": true
        },
        "suspend": {
          "type": "boolean",
          "description": "Set to true to enable suspend.",
          "example": true
        },
        "suspendAllowedIps": { "$ref": "#/definitions/suspendAllowedIps" },
        "connectivityIpQueue": { "$ref": "#/definitions/connectivityIpQueue" },
        "defaultIpQueue": { "$ref": "#/definitions/defaultIpQueue" },
        "forceOverwrite": {
          "type": "boolean",
          "description": "Set to true to force write new NetFlow settings to device over current device's settings.",
          "example": false
        },
        "device": { "$ref": "#/definitions/NewGatewayDevice" }
      },
      "required": [
        "netflowEnabled",
        "netflowAlerts",
        "qosEnabled",
        "suspend",
        "device"
      ]
    },
    "Model 49": {
      "type": "object",
      "description": "status of updated gateway with data",
      "properties": {
        "result": {
          "type": "boolean",
          "description": "config successfully written to device or not",
          "example": true
        },
        "message": {
          "type": "string",
          "description": "description of what happened",
          "example": "gateway updated successfully"
        },
        "data": { "$ref": "#/definitions/Model%204" }
      },
      "required": ["result", "message"]
    },
    "InstallationPayload": {
      "type": "object",
      "description": "New installation.",
      "properties": {
        "mac1": {
          "type": "string",
          "description": "MAC address of the first installation device.",
          "example": "44:d9:e7:3d:b1:47",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "mac2": {
          "type": "string",
          "description": "MAC address of the second installation device.",
          "example": "44:d9:e7:3d:b1:48",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        }
      },
      "required": ["mac1", "mac2"]
    },
    "CreateSiteLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 86.922623,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": 27.986065,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["longitude", "latitude"]
    },
    "CreateSite": {
      "type": "object",
      "properties": {
        "parentSiteId": {
          "type": "string",
          "description": "ID of the parent site (deprecated).",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "location": { "$ref": "#/definitions/CreateSiteLocation" },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "contactName": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the contact person."
        },
        "contactEmail": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "default": "site",
          "enum": ["site", "endpoint", "client"]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        }
      },
      "required": ["name"]
    },
    "Model 50": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "firmwareVersion": { "type": "string" },
        "firmwareForMStationsVersion": {
          "type": "string",
          "description": "For accessPoint (AC series) with M stations."
        }
      },
      "required": ["deviceId", "firmwareVersion"]
    },
    "upgrades": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/Model%2050",
        "x-alternatives": [
          { "$ref": "#/x-alt-definitions/Model%207" },
          { "$ref": "#/x-alt-definitions/Model%208" }
        ]
      }
    },
    "Model 51": {
      "type": "object",
      "properties": {
        "upgradeInMaintenanceWindow": {
          "type": "boolean",
          "description": "Schedule upgrade over maintenance window."
        },
        "upgrades": { "$ref": "#/definitions/upgrades" }
      },
      "required": ["upgrades"]
    },
    "CreateToken": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Human readable name of the token.",
          "example": "Mobile App",
          "maxLength": 20
        },
        "meta": {
          "type": "string",
          "description": "Any token metadata.",
          "example": null,
          "maxLength": 256
        }
      }
    },
    "NewTokenSchema": {
      "type": "object",
      "description": "Information about new token.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Token ID, not the token itself.",
          "example": "d37ecad9-2643-4555-981a-23ee30086807",
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Human readable token name.",
          "example": "Mobile App"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was created.",
          "example": "2011-10-03T14:48:00.000Z"
        },
        "lastUsed": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was last used. If null then it has not been used yet.",
          "example": "2011-10-04T14:48:00.000Z"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token will expire unless it is renewed. If null than it will never expire.",
          "example": "2011-10-05T14:48:00.000Z"
        },
        "maxExpiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Latest time when the token will expire. If null then it will never expire.",
          "example": "2011-11-05T14:48:00.000Z"
        },
        "scope": { "$ref": "#/definitions/scope" },
        "userId": {
          "type": "string",
          "description": "Id of the user this token represents. Null if the token is not bound to any user.",
          "example": "261aa95a-0270-4416-894a-616a0cecedbb"
        },
        "user": { "$ref": "#/definitions/user" },
        "transient": {
          "type": "boolean",
          "description": "If true then the token will be deleted when server restarts.",
          "example": false
        },
        "currentSession": {
          "type": "boolean",
          "description": "If true than this token was used in this request.",
          "example": false
        },
        "meta": {
          "type": "string",
          "description": "Token metadata.",
          "example": ""
        },
        "token": {
          "type": "string",
          "description": "The newly created token that can be used in x-auth-token header.",
          "example": "d5b6d28a-9477-423b-9ed9-0c96b717e52f"
        }
      },
      "required": [
        "id",
        "name",
        "createdAt",
        "lastUsed",
        "expiresAt",
        "maxExpiresAt",
        "scope",
        "transient",
        "currentSession",
        "token"
      ]
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username used for login.",
          "example": "admin",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_]*$"
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "example": "admin@example.com",
          "x-format": { "email": true }
        },
        "password": {
          "type": "string",
          "description": "User's password.",
          "example": "d4ab472281aeb116",
          "minLength": 4,
          "maxLength": 64
        },
        "firstName": {
          "type": "string",
          "description": "User's first name.",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name.",
          "example": "Doe"
        },
        "role": {
          "type": "string",
          "description": "Users's role in Network.",
          "example": "admin",
          "enum": ["superadmin", "admin", "guest", "anonymous", "installer"]
        },
        "ucrmRole": {
          "type": "string",
          "description": "Users's role ID in CRM.",
          "example": null
        },
        "homeScreen": {
          "type": "string",
          "example": "/nms",
          "enum": ["/nms", "/crm"]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether user is allowed to login or not.",
          "example": true
        }
      },
      "required": ["username", "email", "password", "role"]
    },
    "RequestSiteAccessGroupSingleSite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "isReadOnly": {
          "type": "boolean",
          "description": "If true, access to site is read-only. If false, access to site is read-write.",
          "example": true
        }
      },
      "required": ["id", "isReadOnly"]
    },
    "whitelist 1": {
      "type": "array",
      "description": "List of accessible sites.",
      "items": { "$ref": "#/definitions/RequestSiteAccessGroupSingleSite" }
    },
    "RequestSiteAccessGroup": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Section 1", "maxLength": 100 },
        "whitelist": { "$ref": "#/definitions/whitelist%201" }
      },
      "required": ["name", "whitelist"]
    },
    "NewClientLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Client site latitude.",
          "example": -0.1583459,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Client site longitude.",
          "example": 51.5238074,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["longitude", "latitude"]
    },
    "addressData": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Map provider.",
          "example": "GoogleMaps",
          "enum": ["GoogleMaps", "OpenStreetMap"]
        },
        "addressComponents": {
          "$ref": "#/definitions/interface",
          "x-alternatives": [
            { "$ref": "#/x-alt-definitions/interface" },
            { "$ref": "#/x-alt-definitions/addressComponents" }
          ]
        }
      },
      "required": ["type"]
    },
    "NewClientSchema": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name of the Client.",
          "example": "Dr"
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the Client.",
          "example": "Watson"
        },
        "servicePlanId": {
          "type": "string",
          "description": "ID of the CRM Service plan that should be assigned to the new Client",
          "example": "1"
        },
        "address": {
          "type": "string",
          "description": "Address of the Client site.",
          "example": "221b Baker street, London"
        },
        "phone": {
          "type": "string",
          "description": "Client's phone number.",
          "example": "+44123456789"
        },
        "email": {
          "type": "string",
          "description": "Client's e-mail.",
          "example": "drwatson@example.com",
          "x-format": { "email": true }
        },
        "note": {
          "type": "string",
          "description": "Custom note.",
          "example": "Someone else acutally lives here"
        },
        "location": { "$ref": "#/definitions/NewClientLocation" },
        "addressData": { "$ref": "#/definitions/addressData" }
      },
      "required": ["firstName", "lastName", "servicePlanId"]
    },
    "deviceIds": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "Model 52": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "deviceIds": { "$ref": "#/definitions/deviceIds" }
      },
      "required": ["siteId"]
    },
    "Model 53": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["siteId", "deviceId"]
    },
    "AuthorizeFirstDeviceSchema": {
      "type": "array",
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "required" } }
      }
    },
    "deviceIds 1": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "DevicesBackup": {
      "type": "object",
      "properties": { "deviceIds": { "$ref": "#/definitions/deviceIds%201" } }
    },
    "ids": {
      "type": "array",
      "minItems": 1,
      "maxItems": 1000,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "Model 54": {
      "type": "object",
      "properties": { "ids": { "$ref": "#/definitions/ids" } },
      "required": ["ids"]
    },
    "deletedIds": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "undeletedIds": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "BulkDeleteDevices": {
      "type": "object",
      "properties": {
        "deletedIds": { "$ref": "#/definitions/deletedIds" },
        "undeletedIds": { "$ref": "#/definitions/undeletedIds" },
        "message": { "type": "string" },
        "discovered": { "type": "boolean" }
      },
      "required": ["deletedIds", "undeletedIds", "message"]
    },
    "addresses 3": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "required", "version": ["ipv4"] } }
      }
    },
    "Model 55": {
      "type": "object",
      "properties": {
        "index": { "type": "integer", "minimum": 0 },
        "name": { "type": "string" },
        "mac": {
          "type": "string",
          "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
        },
        "type": {
          "type": "string",
          "default": "eth",
          "enum": ["eth", "sfp+", "wlan"]
        },
        "addresses": { "$ref": "#/definitions/addresses%203" }
      },
      "required": ["index", "name"]
    },
    "DeviceImportInterfaces": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/Model%2055" }
    },
    "DeviceImport": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "ubntDevice": { "type": "boolean" },
        "deviceRole": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "username": { "type": "string" },
        "password": { "type": "string" },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 1,
          "maximum": 65535
        },
        "sshPort": {
          "type": "integer",
          "default": 22,
          "minimum": 1,
          "maximum": 65535
        },
        "hostname": { "type": "string" },
        "model": { "type": "string" },
        "snmpCommunity": { "type": "string", "default": "public" },
        "interfaces": {
          "$ref": "#/definitions/DeviceImportInterfaces",
          "x-alternatives": [
            {
              "$ref": "#/definitions/DeviceImportInterfaces",
              "x-alternatives": [
                { "$ref": "#/x-alt-definitions/DeviceImportInterfaces" },
                { "$ref": "#/x-alt-definitions/DeviceImportInterfaces%202" }
              ]
            },
            { "$ref": "#/x-alt-definitions/DeviceImportInterfaces%203" }
          ]
        },
        "note": { "type": "string" }
      },
      "required": ["ubntDevice", "deviceRole", "hostname", "interfaces"]
    },
    "DevicesImport": {
      "type": "array",
      "items": { "$ref": "#/definitions/DeviceImport" }
    },
    "DiscoveryImportItem": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "username": { "type": "string" },
        "password": { "type": "string" },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 0,
          "maximum": 65535
        }
      },
      "required": ["ip", "username", "password"]
    },
    "DiscoveryImportList": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/DiscoveryImportItem" }
    },
    "ListOfFirmwareIds": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "Model 56": {
      "type": "object",
      "properties": {
        "model": { "type": "string", "example": "WaveAP", "enum": ["WaveAP"] },
        "latitude": {
          "type": "number",
          "example": 49.680859,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.465609,
          "minimum": -180,
          "maximum": 180
        },
        "elevation": {
          "type": "integer",
          "description": "Antenna's elevation in meters, defaults to 10m",
          "example": 570,
          "minimum": -1000
        },
        "heading": {
          "type": "number",
          "description": "Antenna's azimuth rotation in rad, max 6.28318. North: 0, East: PI/2, South: PI, West: 3*PI/2.",
          "example": 1.2566370614359172,
          "minimum": 0,
          "maximum": 6.28319
        },
        "tilt": {
          "type": "number",
          "description": "Antenna's vertical rotation in rad. Straight: 0, Down: -PI/2, Up: PI/2.",
          "example": -0.05235987755982988,
          "minimum": -1.5708,
          "maximum": 1.5708
        },
        "roll": {
          "type": "number",
          "description": "Antenna's axial rotation in rad. Horizontal: 0, increased by right (clockwise) rotation.",
          "example": 6.265732014659643,
          "minimum": 0,
          "maximum": 6.28319
        },
        "channel": {
          "type": "integer",
          "description": "Channel frequency in MHz",
          "example": 66400,
          "minimum": 0
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width in MHz",
          "example": 100,
          "minimum": 0
        },
        "resolution": {
          "type": "string",
          "description": "Resolution of calculated coverage data",
          "example": "maxSize257",
          "enum": [
            "maxSize81",
            "maxSize257",
            "maxSize385",
            "maxSize513",
            "maxSize769",
            "maxSize1025"
          ]
        }
      },
      "required": ["model", "latitude", "longitude"]
    },
    "Model 57": {
      "type": "array",
      "minItems": 0,
      "items": { "type": "number", "minimum": 0 }
    },
    "coverage": {
      "type": "array",
      "description": "List of modulation values in Mbps.",
      "example": [
        [100, 110, 111],
        [100, 111, 112],
        [110, 120, 122]
      ],
      "minItems": 0,
      "items": { "$ref": "#/definitions/Model%2057" }
    },
    "northWestCorner": {
      "type": "object",
      "description": "GPS coordinates North-West corner of the coverage.",
      "example": { "latitude": 40.712, "longitude": -74.227 },
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        }
      },
      "required": ["latitude", "longitude"]
    },
    "southEastCorner": {
      "type": "object",
      "description": "GPS coordinates South-East corner of the coverage.",
      "example": { "latitude": 40.612, "longitude": -74.125 },
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        }
      },
      "required": ["latitude", "longitude"]
    },
    "Model 58": {
      "type": "object",
      "properties": {
        "coverage": { "$ref": "#/definitions/coverage" },
        "maxCapacity": {
          "type": "number",
          "description": "Max capacity of requested configuration in Mbps",
          "example": 447,
          "minimum": 0
        },
        "northWestCorner": { "$ref": "#/definitions/northWestCorner" },
        "southEastCorner": { "$ref": "#/definitions/southEastCorner" }
      },
      "required": ["maxCapacity", "northWestCorner", "southEastCorner"]
    },
    "NewInstallationDeviceLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["longitude", "latitude"]
    },
    "NewInstallationDevice": {
      "type": "object",
      "description": "New installation device.",
      "properties": {
        "mac": {
          "type": "string",
          "description": "Device mac address.",
          "example": "44:d9:e7:3d:b1:47",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Device model.",
          "example": "AF60",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "firmwareVersion": {
          "type": "string",
          "description": "Device firmware version.",
          "example": "8.7.0"
        },
        "location": { "$ref": "#/definitions/NewInstallationDeviceLocation" }
      },
      "required": ["mac"]
    },
    "ServerLogVerbosityPayloadSchema": {
      "type": "object",
      "properties": {
        "verbosity": {
          "type": "string",
          "enum": ["trace", "debug", "info", "warn", "error", "fatal"]
        },
        "duration": {
          "type": "integer",
          "description": "Duration in milliseconds.",
          "enum": [-1],
          "maximum": 2592000000,
          "x-constraint": { "positive": true }
        }
      },
      "required": ["verbosity", "duration"]
    },
    "user 4": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_]*$"
        },
        "email": { "type": "string", "x-format": { "email": true } },
        "timezone": {
          "type": "string",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Khartoum",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Havana",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Damascus",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Pyongyang",
            "Asia/Qatar",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tehran",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "Cuba",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Iran",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Pacific-New",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "password": { "type": "string", "minLength": 4, "maxLength": 64 },
        "alerts": { "type": "boolean" },
        "country": {
          "type": "string",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        }
      },
      "required": ["username", "email", "timezone", "password", "country"]
    },
    "smtp": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["smtp", "gmail", "nosmtp", "cloud"]
        },
        "gmailUsername": {
          "type": "string",
          "x-format": { "email": true },
          "required": ["gmailUsername"],
          "x-alternatives": [
            { "type": "string", "x-format": { "email": true } },
            { "type": "string", "x-format": { "email": true } }
          ]
        },
        "gmailPassword": {
          "type": "string",
          "required": ["gmailPassword"],
          "x-alternatives": [{ "type": "string" }, { "type": "string" }]
        },
        "customSmtpHostname": {
          "type": "string",
          "x-format": { "hostname": true },
          "required": ["customSmtpHostname"],
          "x-alternatives": [
            { "type": "string", "x-format": { "hostname": true } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "customSmtpPort": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535,
          "required": ["customSmtpPort"],
          "x-alternatives": [
            { "type": "integer", "minimum": 0, "maximum": 65535 },
            { "type": "integer", "minimum": 0, "maximum": 65535 }
          ]
        },
        "customSmtpSecurityMode": {
          "type": "string",
          "enum": ["Plain text", "SSL", "TLS"]
        },
        "tlsAllowUnauthorized": {
          "type": "boolean",
          "required": ["tlsAllowUnauthorized"],
          "x-alternatives": [{ "type": "boolean" }]
        },
        "customSmtpAuthEnabled": {
          "type": "boolean",
          "required": ["customSmtpAuthEnabled"],
          "x-alternatives": [{ "type": "boolean" }]
        },
        "customSmtpUsername": {
          "type": "string",
          "required": ["customSmtpUsername"],
          "x-alternatives": [{ "type": "string" }, { "type": "string" }]
        },
        "customSmtpPassword": {
          "type": "string",
          "required": ["customSmtpPassword"],
          "x-alternatives": [{ "type": "string" }, { "type": "string" }]
        },
        "customSmtpSender": { "type": "string", "x-format": { "email": true } }
      }
    },
    "Model 59": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "useLetsEncrypt": { "type": "boolean" },
        "eulaConfirmed": { "type": "boolean" },
        "user": { "$ref": "#/definitions/user%204" },
        "smtp": { "$ref": "#/definitions/smtp" },
        "isIsp": { "type": "boolean" },
        "allowLoggingToSentry": { "type": "boolean", "default": true },
        "allowLoggingToLogentries": { "type": "boolean", "default": true }
      },
      "required": ["hostname", "useLetsEncrypt", "eulaConfirmed", "user"]
    },
    "SetupUnmsFinish": {
      "type": "object",
      "properties": {
        "passphrase": { "type": "string" },
        "connectionString": { "type": "string" },
        "isLetsEncryptError": { "type": "boolean" }
      }
    },
    "link": {
      "type": "object",
      "properties": {
        "apDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "quality": { "type": "string", "maxLength": 200 },
        "terrain": { "$ref": "#/definitions/terrain" }
      },
      "required": ["apDeviceId", "quality"]
    },
    "SimulationDevicePayload": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "role": { "type": "string", "enum": ["ap", "cpe"] },
        "apType": { "type": "string", "enum": ["ptp", "ptmp"] },
        "name": { "type": "string", "maxLength": 200 },
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "height": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "altitude": { "type": "number", "minimum": -10000, "maximum": 10000 },
        "radius": { "type": "number", "enum": [0] },
        "coverageCpeHeight": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "deviceName": {
          "type": "string",
          "example": "NanoStation 5AC Loco",
          "maxLength": 200
        },
        "eirp": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "frequency": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "antenna": { "$ref": "#/definitions/antenna%202" },
        "channelWidth": {
          "type": "number",
          "example": 40,
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "color": { "type": "string", "example": "#ff00ff", "maxLength": 20 },
        "heading": { "type": "number" },
        "link": {
          "$ref": "#/definitions/link",
          "required": ["link"],
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/link" }]
        }
      },
      "required": [
        "deviceId",
        "role",
        "apType",
        "name",
        "latitude",
        "longitude",
        "height",
        "altitude",
        "radius",
        "coverageCpeHeight",
        "deviceName",
        "eirp",
        "frequency",
        "channelWidth",
        "color",
        "heading"
      ]
    },
    "SimulationLink 1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "apDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "cpeDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "quality": { "type": "string", "maxLength": 200 },
        "terrain": { "$ref": "#/definitions/terrain" },
        "updatedAt": { "type": "string", "format": "date-time" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": [
        "id",
        "apDeviceId",
        "cpeDeviceId",
        "quality",
        "updatedAt",
        "createdAt"
      ]
    },
    "SimulationDeviceWithLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "role": { "type": "string", "enum": ["ap", "cpe"] },
        "apType": { "type": "string", "enum": ["ptp", "ptmp"] },
        "name": { "type": "string", "maxLength": 200 },
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "height": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "altitude": { "type": "number", "minimum": -10000, "maximum": 10000 },
        "radius": { "type": "number", "enum": [0] },
        "coverageCpeHeight": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "deviceName": {
          "type": "string",
          "example": "NanoStation 5AC Loco",
          "maxLength": 200
        },
        "eirp": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "frequency": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "antenna": { "$ref": "#/definitions/antenna%202" },
        "channelWidth": {
          "type": "number",
          "example": 40,
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "color": { "type": "string", "example": "#ff00ff", "maxLength": 20 },
        "heading": { "type": "number" },
        "link": {
          "$ref": "#/definitions/SimulationLink%201",
          "required": ["SimulationLink"],
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/SimulationLink" }]
        },
        "updatedAt": { "type": "string", "format": "date-time" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": [
        "id",
        "deviceId",
        "role",
        "apType",
        "name",
        "latitude",
        "longitude",
        "height",
        "altitude",
        "radius",
        "coverageCpeHeight",
        "deviceName",
        "eirp",
        "frequency",
        "channelWidth",
        "color",
        "heading",
        "updatedAt",
        "createdAt"
      ]
    },
    "ListOfSiteIds": {
      "type": "object",
      "properties": { "ids": { "$ref": "#/definitions/ids" } },
      "required": ["ids"]
    },
    "BulkDeleteSites": {
      "type": "object",
      "properties": {
        "deletedIds": { "$ref": "#/definitions/deletedIds" },
        "undeletedIds": { "$ref": "#/definitions/undeletedIds" },
        "message": { "type": "string" }
      },
      "required": ["deletedIds", "undeletedIds", "message"]
    },
    "macAddresses": {
      "type": "array",
      "description": "Device with one of these MAC addresses will be automatically authorised and assigned to defined site/client.",
      "items": { "type": "string" }
    },
    "ipAddresses 1": {
      "type": "array",
      "description": "Device with one of these IP addresses will be automatically authorised and assigned to defined site/client.",
      "items": {
        "type": "string",
        "example": "192.168.10.12",
        "x-format": { "ip": { "cidr": "optional" } }
      }
    },
    "SiteImport": {
      "type": "object",
      "properties": {
        "parentSiteName": {
          "type": "string",
          "description": "Name of the parent site.",
          "example": null
        },
        "parentSiteId": {
          "type": "string",
          "description": "ID of the parent site.",
          "example": null,
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Building B"
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "client",
          "enum": ["site", "client"]
        },
        "ucrmId": {
          "type": "string",
          "description": "In case of client type, ID of UCRM service. In case of site type, ID of UCRM site.",
          "example": "135"
        },
        "parentSiteUcrmId": {
          "type": "string",
          "description": "ID of UCRM parent site of a client. Null if UCRM client has no parent site.",
          "example": "134"
        },
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 10.3025,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": -8.12,
          "minimum": -90,
          "maximum": 90
        },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 88
        },
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Bougoula, Kankan, Guinea"
        },
        "contactName": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the contact person.",
          "example": "+224 64461626"
        },
        "contactEmail": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "macAddresses": { "$ref": "#/definitions/macAddresses" },
        "ipAddresses": { "$ref": "#/definitions/ipAddresses%201" },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "suspended": {
          "type": "boolean",
          "description": "If site is suspended.",
          "default": false
        },
        "qos": { "$ref": "#/definitions/SiteTrafficShaping%201" }
      },
      "required": ["name", "type"]
    },
    "SiteImportList": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/SiteImport" }
    },
    "PayloadSpeedTest": {
      "type": "object",
      "properties": {
        "source": { "type": "string", "x-format": { "guid": true } },
        "target": { "type": "string", "x-format": { "guid": true } },
        "duration": { "type": "number", "description": "milliseconds" },
        "direction": {
          "type": "string",
          "enum": ["uplink", "downlink", "bidirectional"]
        }
      },
      "required": ["source", "target", "duration", "direction"]
    },
    "SpeedTestStart": {
      "type": "object",
      "properties": {
        "result": { "type": "boolean" },
        "message": { "type": "string" },
        "id": { "type": "string", "x-format": { "guid": true } }
      },
      "required": ["result", "message", "id"]
    },
    "UserCredentials": {
      "type": "object",
      "properties": {
        "username": { "type": "string", "example": "admin", "minLength": 1 },
        "password": {
          "type": "string",
          "example": "xm6jRA2VgrRwMK2s",
          "minLength": 1
        }
      },
      "required": ["username", "password"]
    },
    "UserLastReleaseNotesSeen": {
      "type": "object",
      "properties": {
        "lastReleaseNotesSeen": { "type": "string", "description": "1.0.0" }
      },
      "required": ["lastReleaseNotesSeen"]
    },
    "UserLocationUpdate": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        }
      },
      "required": ["latitude", "longitude"]
    },
    "Login": {
      "type": "object",
      "properties": {
        "username": { "type": "string", "minLength": 1 },
        "password": { "type": "string", "minLength": 1 },
        "mobilePlatform": { "type": "string", "enum": ["ios", "android"] },
        "sessionTimeout": {
          "type": "number",
          "description": "Ignored, kept for backward compatibility."
        }
      },
      "required": ["username", "password"]
    },
    "UserLogin": {
      "type": "object",
      "x-meta": {
        "headers": {
          "x-auth-token": {
            "type": "string",
            "description": "User authorization token"
          }
        }
      },
      "properties": {
        "id": { "type": "string" },
        "username": { "type": "string", "example": "admin" },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": { "email": true }
        },
        "firstName": { "type": "string", "example": "John" },
        "lastName": { "type": "string", "example": "Doe" },
        "alerts": { "type": "boolean" },
        "totpAuthEnabled": { "type": "boolean" },
        "role": {
          "type": "string",
          "description": "Role of this user in UNMS. 'anonymous' if user is only allowed to access CRM.",
          "example": "admin",
          "enum": ["superadmin", "admin", "guest", "anonymous", "installer"]
        },
        "presentationMode": {
          "type": "boolean",
          "description": "Obsolete.",
          "example": false
        },
        "forceChangePassword": { "type": "boolean" },
        "tableConfig": { "$ref": "#/definitions/tableConfig" },
        "mapConfig": { "$ref": "#/definitions/mapConfig" },
        "preferences": { "$ref": "#/definitions/preferences" },
        "lastLogItemId": { "type": "string" },
        "location": { "$ref": "#/definitions/UserLocation" },
        "sessionTimeout": {
          "type": "integer",
          "description": "Session expiration in milliseconds, max 30 days.",
          "example": 3600000,
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "lastNewsSeenDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last news check time in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "Last seen version of release notes.",
          "example": "1.0.0-alpha"
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM user that is bound with this user.",
          "example": "123"
        },
        "ucrmRole": {
          "type": "string",
          "description": "Role of this user in UCRM. 'null' if user is not allowed to access UCRM.",
          "example": "1"
        },
        "homeScreen": {
          "type": "string",
          "description": "Where should the user be redirected after login.",
          "example": "/nms",
          "enum": ["/nms", "/crm"]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the user can log in or not.",
          "example": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the user was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "alerts",
        "forceChangePassword",
        "keepMeSignedIn",
        "lastNewsSeenDate",
        "lastReleaseNotesSeen",
        "ucrmId",
        "ucrmRole",
        "homeScreen",
        "enabled",
        "updated"
      ]
    },
    "TwoFactorToken": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "userId": { "type": "string" },
        "exp": { "type": "number" }
      },
      "required": ["id", "userId", "exp"]
    },
    "ImportUserSchema": {
      "type": "object",
      "properties": {
        "unmsId": {
          "type": "string",
          "description": "Optional user's ID in UNMS.",
          "example": "31df9c66-0d8c-4e52-ab10-b6e2b913a9bf",
          "x-format": { "guid": true }
        },
        "ucrmId": {
          "type": "string",
          "description": "User's ID in CRM.",
          "example": "1"
        },
        "username": {
          "type": "string",
          "description": "Username used for login.",
          "example": "admin"
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "example": "admin@example.com",
          "x-format": { "email": true }
        },
        "passwordHash": {
          "type": "string",
          "description": "Bcrypt hashed password.",
          "example": "$2y$12$aZNQg8Iyd7S5riYardQQ9OtAivk0jYN0/cZfyDcTEnHBpjd.y3uHW"
        },
        "totpAuthSecret": {
          "type": "string",
          "description": "User's 2FA token if 2FA is enabled.",
          "example": null
        },
        "ucrmRole": {
          "type": "string",
          "description": "Users's role ID in CRM.",
          "example": "da2e1a14-7c84-11e9-8a6d-acbc32bdc357"
        },
        "isSuperAdmin": {
          "type": "boolean",
          "description": "Whether user is UCRM super admin or not.",
          "example": true,
          "default": false
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether user is active or not. Inactive users cannot log in.",
          "example": true,
          "default": true
        },
        "firstName": {
          "type": "string",
          "description": "User's first name.",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name.",
          "example": "Doe"
        }
      },
      "required": ["ucrmId", "username", "email", "passwordHash", "ucrmRole"]
    },
    "ImportUsersListSchema": {
      "type": "array",
      "items": { "$ref": "#/definitions/ImportUserSchema" }
    },
    "ImportUsersResultSchema": {
      "type": "object",
      "properties": {
        "ucrmId": {
          "type": "string",
          "description": "User's id in CRM.",
          "example": "1"
        },
        "unmsId": {
          "type": "string",
          "description": "User's id in UNMS.",
          "example": "e868e1fb-2b65-4a86-91df-4e929a6efc26"
        },
        "newUsername": {
          "type": "string",
          "description": "New username in case that the original CRM username is already taken in UNMS.",
          "example": "admin_crm_1"
        }
      },
      "required": ["ucrmId", "unmsId"]
    },
    "ImportUsersResultListSchema": {
      "type": "array",
      "items": { "$ref": "#/definitions/ImportUsersResultSchema" }
    },
    "VaultCredentials": {
      "type": "object",
      "properties": {
        "passphrase": { "type": "string", "x-constraint": { "length": 20 } },
        "isVaultEnabled": { "type": "boolean" },
        "regeneratePgpKeys": { "type": "boolean" }
      },
      "required": ["isVaultEnabled"]
    },
    "Model 60": {
      "type": "object",
      "properties": {
        "result": { "type": "boolean" },
        "message": { "type": "string" },
        "connectionId": { "type": "string", "x-format": { "guid": true } }
      },
      "required": ["result", "message", "connectionId"]
    },
    "Model 61": {
      "type": "object",
      "properties": {
        "connectionId": { "type": "string", "x-format": { "guid": true } },
        "action": { "type": "string" },
        "type": { "type": "string" },
        "entity": { "type": "string" },
        "payload": { "type": "string" }
      },
      "required": ["connectionId", "action", "type", "entity"]
    },
    "deviceIds 2": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "PayloadStationsCount": {
      "type": "object",
      "properties": { "deviceIds": { "$ref": "#/definitions/deviceIds%202" } },
      "required": ["deviceIds"]
    },
    "ResponseStationsCount": { "type": "object" },
    "data 1": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      }
    },
    "Model 62": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/data%201" },
        "result": { "type": "boolean" },
        "message": { "type": "string" }
      }
    },
    "ConnectOtherDevice": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "ip": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } }
          ]
        },
        "hostname": {
          "type": "string",
          "x-alternatives": [{ "type": "string" }]
        },
        "snmpCommunity": { "type": "string" },
        "enablePing": { "type": "boolean", "default": false }
      },
      "required": ["role", "ip", "hostname", "snmpCommunity", "enablePing"]
    },
    "ConnectUbntDevice": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "username": { "type": "string" },
        "password": { "type": "string" },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "useUnstableFirmware": { "type": "boolean", "default": false },
        "replaceExistingBlackBox": { "type": "boolean", "default": false }
      },
      "required": ["ip", "username", "password"]
    },
    "deviceIds 3": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "MaintenanceModeSchema": {
      "type": "object",
      "properties": { "deviceIds": { "$ref": "#/definitions/deviceIds%203" } }
    },
    "Model 63": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["siteId"]
    },
    "deviceIds 4": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "Model 64": {
      "type": "object",
      "properties": { "deviceIds": { "$ref": "#/definitions/deviceIds%204" } },
      "required": ["deviceIds"]
    },
    "deviceIds 5": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": { "guid": true }
      }
    },
    "Model 65": {
      "type": "object",
      "properties": {
        "deviceIds": { "$ref": "#/definitions/deviceIds%205" },
        "username": { "type": "string" },
        "password": { "type": "string" },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "useUnstableFirmware": { "type": "boolean", "default": false },
        "replaceExistingBlackBox": { "type": "boolean", "default": false }
      },
      "required": ["deviceIds", "username", "password"]
    },
    "InstallationChatPayload": {
      "type": "object",
      "description": "New installation chat message.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Chat message text.",
          "example": "Everything is ready."
        }
      },
      "required": ["message"]
    },
    "Model 66": {
      "type": "object",
      "properties": {
        "to": { "type": "string", "x-format": { "email": true } },
        "smtp": { "$ref": "#/definitions/smtp" }
      },
      "required": ["to"]
    },
    "Model 67": {
      "type": "array",
      "minItems": 1,
      "x-constraint": { "unique": { "ignoreUndefined": false } },
      "items": {
        "type": "string",
        "description": "IP subnet in cidr notation",
        "example": "192.168.1.0/24"
      }
    },
    "SiteBindings": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "ucrmId": { "type": "string", "example": "123" }
      },
      "required": ["siteId", "ucrmId"]
    },
    "ListOfSiteBindings": {
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/definitions/SiteBindings" }
    },
    "Site 1": {
      "type": "object",
      "description": "Result of suspend, updated site",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "identification": { "$ref": "#/definitions/SiteIdentificationDetail" },
        "description": { "$ref": "#/definitions/SiteDescription" },
        "notifications": { "$ref": "#/definitions/SiteNotifications" },
        "qos": { "$ref": "#/definitions/SiteTrafficShaping" },
        "ucrm": { "$ref": "#/definitions/SiteUcrmDescription" }
      }
    },
    "Site 2": {
      "type": "object",
      "description": "Result of unsuspend, updated site",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "identification": { "$ref": "#/definitions/SiteIdentificationDetail" },
        "description": { "$ref": "#/definitions/SiteDescription" },
        "notifications": { "$ref": "#/definitions/SiteNotifications" },
        "qos": { "$ref": "#/definitions/SiteTrafficShaping" },
        "ucrm": { "$ref": "#/definitions/SiteUcrmDescription" }
      }
    },
    "Two Factor Login": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token from successful login."
        },
        "verificationCode": {
          "type": "string",
          "description": "6 digit code from Authenticator.",
          "x-constraint": { "length": 6 }
        },
        "password": {
          "type": "string",
          "description": "Ignored, kept for backward compatibility."
        },
        "sessionTimeout": {
          "type": "number",
          "description": "Ignored, kept for backward compatibility."
        }
      },
      "required": ["token", "verificationCode"]
    },
    "SsoLogin": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code from successful SSO authentication."
        },
        "state": {
          "type": "string",
          "description": "State previously sent to SSO.\n              Same value must be in nms-sso-login cookie."
        }
      },
      "required": ["code", "state"]
    },
    "SsoUserLogin": {
      "type": "object",
      "x-meta": {
        "headers": {
          "x-auth-token": {
            "type": "string",
            "description": "User authorization token"
          }
        }
      },
      "properties": {
        "username": { "type": "string", "example": "admin" },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": { "email": true }
        },
        "firstName": { "type": "string", "example": "John" },
        "lastName": { "type": "string", "example": "Doe" }
      },
      "required": ["username", "email"]
    },
    "PasswordResetRequest": {
      "type": "object",
      "properties": {
        "email": { "type": "string", "x-format": { "email": true } }
      },
      "required": ["email"]
    },
    "PasswordResetAction": {
      "type": "object",
      "properties": {
        "token": { "type": "string", "description": "Password reset token." },
        "password": {
          "type": "string",
          "description": "New password.",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": ["token", "password"]
    },
    "PasswordStrength": {
      "type": "object",
      "properties": {
        "password": { "type": "string", "minLength": 4, "maxLength": 64 }
      },
      "required": ["password"]
    },
    "Model 68": {
      "type": "object",
      "properties": {
        "pattern": { "type": "string" },
        "token": { "type": "string" },
        "i": { "type": "number" },
        "j": { "type": "number" },
        "guesses": { "type": "number" },
        "guesses_log10": { "type": "number" }
      },
      "required": ["pattern", "token", "i", "j", "guesses", "guesses_log10"]
    },
    "base_matches": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2068" }
    },
    "Model 69": {
      "type": "object",
      "properties": {
        "pattern": { "type": "string" },
        "token": { "type": "string" },
        "i": { "type": "number" },
        "j": { "type": "number" },
        "guesses": { "type": "number" },
        "guesses_log10": { "type": "number" },
        "repeat": { "type": "number" },
        "base_guesses": { "type": "number" },
        "base_matches": { "$ref": "#/definitions/base_matches" }
      },
      "required": ["pattern", "token", "i", "j", "guesses", "guesses_log10"]
    },
    "sequence": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2069" }
    },
    "crack_times_seconds": {
      "type": "object",
      "properties": {
        "online_throttling_100_per_hour": { "type": "number" },
        "online_no_throttling_10_per_second": { "type": "number" },
        "offline_slow_hashing_1e4_per_second": { "type": "number" },
        "offline_fast_hashing_1e10_per_second": { "type": "number" }
      },
      "required": [
        "online_throttling_100_per_hour",
        "online_no_throttling_10_per_second",
        "offline_slow_hashing_1e4_per_second",
        "offline_fast_hashing_1e10_per_second"
      ]
    },
    "crack_times_display": {
      "type": "object",
      "properties": {
        "online_throttling_100_per_hour": { "type": "string" },
        "online_no_throttling_10_per_second": { "type": "string" },
        "offline_slow_hashing_1e4_per_second": { "type": "string" },
        "offline_fast_hashing_1e10_per_second": { "type": "string" }
      },
      "required": [
        "online_throttling_100_per_hour",
        "online_no_throttling_10_per_second",
        "offline_slow_hashing_1e4_per_second",
        "offline_fast_hashing_1e10_per_second"
      ]
    },
    "suggestions": { "type": "array", "items": { "type": "string" } },
    "feedback": {
      "type": "object",
      "properties": {
        "warning": { "type": "string" },
        "suggestions": { "$ref": "#/definitions/suggestions" }
      }
    },
    "PasswordStrengthMetadata": {
      "type": "object",
      "properties": {
        "password": { "type": "string" },
        "guesses": { "type": "number" },
        "guesses_log10": { "type": "number" },
        "sequence": { "$ref": "#/definitions/sequence" },
        "calc_time": { "type": "number" },
        "crack_times_seconds": { "$ref": "#/definitions/crack_times_seconds" },
        "crack_times_display": { "$ref": "#/definitions/crack_times_display" },
        "score": { "type": "number" },
        "feedback": { "$ref": "#/definitions/feedback" }
      },
      "required": ["password", "guesses", "guesses_log10", "calc_time", "score"]
    },
    "VaultCredentialsUnlock": {
      "type": "object",
      "properties": { "passphrase": { "type": "string" } },
      "required": ["passphrase"]
    },
    "Model 70": {
      "type": "object",
      "properties": {
        "parentId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        }
      },
      "required": ["parentId"]
    },
    "macs": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
      }
    },
    "PayloadSystemUnmsKeyHostnamePort": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "port": {
          "type": "integer",
          "description": "UNMS port to migrate to.",
          "example": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "macs": { "$ref": "#/definitions/macs" }
      },
      "required": ["hostname", "port", "macs"]
    },
    "PayloadSystemUnmsKey": {
      "type": "object",
      "properties": {
        "unmsKey": { "type": "string" },
        "deviceIds": { "$ref": "#/definitions/deviceIds" }
      },
      "required": ["unmsKey"]
    },
    "Model 71": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "enum": ["static", "dhcp", "dhcpv6"] },
        "cidr": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        }
      },
      "required": ["type", "cidr"]
    },
    "addresses 4": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2071" }
    },
    "Model 72": {
      "type": "object",
      "properties": {
        "description": { "type": "string" },
        "interface": { "type": "string" },
        "mtu": { "type": "number", "minimum": 1 },
        "vlanId": { "type": "integer" },
        "addresses": { "$ref": "#/definitions/addresses%204" },
        "proxyARP": { "type": "boolean" },
        "name": { "type": "string" }
      },
      "required": ["interface", "mtu", "vlanId", "addresses"]
    },
    "Model 73": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "static": { "type": "boolean" },
        "linkTrap": { "type": "boolean" },
        "stp": { "type": "boolean" },
        "dhcpSnooping": { "type": "boolean" },
        "loadBalance": {
          "type": "string",
          "enum": [
            "src_dst_mac",
            "src_mac_l2",
            "dst_mac_l2",
            "src_dst_mac_l2",
            "src_dst_mac_ip",
            "src_ip_port",
            "dst_ip_port",
            "src_dst_ip_port"
          ]
        },
        "ports": { "$ref": "#/definitions/ports" }
      },
      "required": ["id", "loadBalance", "ports"]
    },
    "Model 74": {
      "type": "object",
      "properties": {
        "account": { "type": "string" },
        "interface": { "type": "string" },
        "mtu": { "type": "number", "minimum": 1 },
        "pppoeId": { "type": "integer" },
        "password": { "type": "string", "minLength": 4, "maxLength": 20 },
        "name": { "type": "string" }
      },
      "required": ["interface", "mtu", "pppoeId", "password"]
    },
    "IpLinkRedirect": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "pattern": "^[a-f0-9]+$",
          "x-constraint": { "length": 32 },
          "x-format": { "hex": true }
        },
        "httpsPort": { "type": "string", "minLength": 1 }
      }
    },
    "Model 75": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "enum": ["static", "dhcp", "dhcpv6"] },
        "cidr": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        }
      },
      "required": ["type", "cidr"]
    },
    "addresses 5": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2075" }
    },
    "Model 76": {
      "type": "object",
      "properties": { "id": { "type": "string" } }
    },
    "interfaces 1": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2076" }
    },
    "bridge 1": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "interfaces": { "$ref": "#/definitions/interfaces%201" }
      },
      "required": ["id"]
    },
    "Model 77": {
      "type": "object",
      "properties": {
        "description": { "type": "string" },
        "bridgeId": { "type": "integer" },
        "addresses": { "$ref": "#/definitions/addresses%205" },
        "proxyARP": { "type": "boolean" },
        "name": { "type": "string" },
        "bridge": { "$ref": "#/definitions/bridge%201" }
      },
      "required": ["bridgeId", "addresses"]
    },
    "QuestionnaireAnswers": { "type": "object" },
    "SiteBinding": {
      "type": "object",
      "properties": { "ucrmId": { "type": "string", "example": "123" } },
      "required": ["ucrmId"]
    },
    "RouterRouteUpsert": {
      "type": "object",
      "properties": {
        "description": { "type": "string", "maxLength": 200 },
        "destination": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "staticType": {
          "type": "string",
          "enum": ["interface", "blackhole", "gateway"]
        },
        "distance": { "type": "number", "minimum": 1, "maximum": 255 }
      },
      "required": ["destination", "staticType", "distance"]
    },
    "DHCPLease 2": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "expiration": {
          "type": "string",
          "description": "expiration date in ISO format (UNMS-420); Nullable string."
        },
        "hostname": { "type": "string" },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server.",
          "minLength": 1
        },
        "mac": { "type": "string" },
        "serverName": { "type": "string", "minLength": 1 },
        "type": { "type": "string" }
      },
      "required": ["address", "leaseId", "mac", "serverName"]
    },
    "CreateDHCPServer": {
      "type": "object",
      "properties": {
        "dns1": {
          "type": "string",
          "description": "Primary DNS server address.",
          "example": "8.8.8.8",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dns2": {
          "type": "string",
          "description": "Secondary DNS server address.",
          "example": "8.8.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "unms.com",
          "minLength": 1
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": ["interface", "leaseTime", "name", "rangeEnd", "rangeStart"]
    },
    "includeVlans 2": { "type": "object" },
    "bridge 2": {
      "type": "object",
      "properties": {
        "includeVlans": { "$ref": "#/definitions/includeVlans%202" },
        "nativeVlan": { "$ref": "#/definitions/nativeVlan" }
      },
      "required": ["includeVlans", "nativeVlan"]
    },
    "router 1": {
      "type": "object",
      "properties": {
        "dhcpLeaseTime": { "type": "number" },
        "dhcpPoolEnd": { "type": "string" },
        "dhcpPoolStart": { "type": "string" },
        "dhcpRelay": { "type": "string" },
        "dhcpServer": { "type": "string" },
        "dnsProxyEnable": { "type": "boolean" },
        "gateway": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "natProtocolFtp": { "type": "boolean" },
        "natProtocolPptp": { "type": "boolean" },
        "natProtocolRtsp": { "type": "boolean" },
        "natProtocolSip": { "type": "boolean" },
        "primaryDns": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "secondaryDns": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } }
        },
        "upnpEnabled": { "type": "boolean" },
        "wanAccessBlocked": { "type": "boolean" },
        "wanMode": { "type": "string" },
        "wanVlan": { "type": "number", "minimum": 2, "maximum": 4063 }
      },
      "required": [
        "dhcpPoolEnd",
        "dhcpPoolStart",
        "dhcpRelay",
        "dhcpServer",
        "gateway",
        "primaryDns",
        "secondaryDns",
        "upnpEnabled",
        "wanMode",
        "wanVlan"
      ]
    },
    "OnuProfile 1": {
      "type": "object",
      "properties": {
        "adminPassword": { "type": "string", "minLength": 1, "maxLength": 12 },
        "bandwidthLimitEnabled": { "type": "boolean" },
        "bandwidthLimitDown": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "required": ["bandwidthLimitDown"],
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 1000 }
          ]
        },
        "bandwidthLimitUp": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "required": ["bandwidthLimitUp"],
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 1000 }
          ]
        },
        "bridge": { "$ref": "#/definitions/bridge%202" },
        "httpPort": { "type": "integer", "minimum": 1, "maximum": 65535 },
        "lanAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "lanProvisioned": { "type": "boolean" },
        "linkSpeed": { "$ref": "#/definitions/linkSpeed" },
        "mode": { "type": "string", "enum": ["bridge", "router"] },
        "name": { "type": "string", "minLength": 1, "maxLength": 80 },
        "router": { "$ref": "#/definitions/router%201" },
        "sshEnabled": { "type": "boolean" },
        "telnetEnabled": { "type": "boolean" },
        "sshPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "required": ["sshPort"],
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 65535 }
          ]
        },
        "telnetPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "required": ["telnetPort"],
          "x-alternatives": [
            { "type": "integer", "minimum": 1, "maximum": 65535 }
          ]
        },
        "ubntDiscoveryEnabled": { "type": "boolean" }
      },
      "required": [
        "adminPassword",
        "httpPort",
        "lanAddress",
        "lanProvisioned",
        "mode",
        "name"
      ]
    },
    "CreateDHCPServer 1": {
      "type": "object",
      "properties": {
        "dns1": {
          "type": "string",
          "description": "Primary DNS server address.",
          "example": "8.8.8.8",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dns2": {
          "type": "string",
          "description": "Secondary DNS server address.",
          "example": "8.8.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "unms.com",
          "minLength": 1
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": ["interface", "leaseTime", "name", "rangeEnd", "rangeStart"]
    },
    "DHCPServerList 3": {
      "type": "array",
      "items": { "$ref": "#/definitions/DHCPServer%201" }
    },
    "DHCPLease 3": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "expiration": {
          "type": "string",
          "description": "expiration date in ISO format (UNMS-420); Nullable string."
        },
        "hostname": { "type": "string" },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server.",
          "minLength": 1
        },
        "mac": { "type": "string" },
        "serverName": { "type": "string", "minLength": 1 },
        "type": { "type": "string" }
      },
      "required": ["address", "leaseId", "mac", "serverName"]
    },
    "pairA": {
      "type": "object",
      "properties": {
        "state": { "type": "string" },
        "lengthFrom": { "type": "number" },
        "lengthTo": { "type": "number" }
      },
      "required": ["state", "lengthFrom", "lengthTo"]
    },
    "pairB": {
      "type": "object",
      "properties": {
        "state": { "type": "string" },
        "lengthFrom": { "type": "number" },
        "lengthTo": { "type": "number" }
      },
      "required": ["state", "lengthFrom", "lengthTo"]
    },
    "pairC": {
      "type": "object",
      "properties": {
        "state": { "type": "string" },
        "lengthFrom": { "type": "number" },
        "lengthTo": { "type": "number" }
      },
      "required": ["state", "lengthFrom", "lengthTo"]
    },
    "pairD": {
      "type": "object",
      "properties": {
        "state": { "type": "string" },
        "lengthFrom": { "type": "number" },
        "lengthTo": { "type": "number" }
      },
      "required": ["state", "lengthFrom", "lengthTo"]
    },
    "pairs": {
      "type": "object",
      "properties": {
        "pairA": { "$ref": "#/definitions/pairA" },
        "pairB": { "$ref": "#/definitions/pairB" },
        "pairC": { "$ref": "#/definitions/pairC" },
        "pairD": { "$ref": "#/definitions/pairD" }
      }
    },
    "Data coming from cabkle test on ES devices": {
      "type": "object",
      "properties": {
        "status": { "type": "string" },
        "lengthFrom": { "type": "number" },
        "lengthTo": { "type": "number" },
        "pairs": { "$ref": "#/definitions/pairs" }
      },
      "required": ["status", "lengthFrom", "lengthTo"]
    },
    "Model 78": {
      "type": "object",
      "properties": {
        "detail": { "type": "string" },
        "error": { "type": "number" },
        "message": { "type": "string" },
        "statusCode": { "type": "number" }
      },
      "required": ["detail", "message", "statusCode"]
    },
    "ImageOrder": {
      "type": "object",
      "properties": {
        "currentOrder": { "type": "number" },
        "nextOrder": { "type": "number" }
      },
      "required": ["currentOrder", "nextOrder"]
    },
    "RouterRoute": {
      "type": "object",
      "properties": {
        "description": { "type": "string", "maxLength": 200 },
        "destination": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "staticType": {
          "type": "string",
          "enum": ["interface", "blackhole", "gateway"]
        },
        "distance": { "type": "number", "minimum": 1, "maximum": 255 }
      },
      "required": ["destination", "staticType"]
    },
    "networks": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "required" } }
      }
    },
    "OspfArea": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": ["md5", "plaintext-password", "off"]
        },
        "id": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "networks": { "$ref": "#/definitions/networks" },
        "type": { "type": "string", "enum": ["normal", "nssa", "stub"] }
      },
      "required": ["id", "networks", "type"]
    },
    "Model 79": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": ["md5", "plaintext-password", "off"]
        },
        "id": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "networks": { "$ref": "#/definitions/networks" },
        "type": { "type": "string", "enum": ["normal", "nssa", "stub"] }
      }
    },
    "Model 80": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": ["md5", "plaintext-password", "off"]
        },
        "id": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "networks": { "$ref": "#/definitions/networks" },
        "type": { "type": "string", "enum": ["normal", "nssa", "stub"] }
      }
    },
    "Model 81": {
      "type": "object",
      "properties": { "unmsKey": { "type": "string" } },
      "required": ["unmsKey"]
    },
    "PayloadUnmsHostnameReachable": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "port": {
          "type": "integer",
          "example": "443",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "EditUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_]*$"
        },
        "email": { "type": "string", "x-format": { "email": true } },
        "currentPassword": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64
        },
        "newPassword": { "type": "string", "minLength": 4, "maxLength": 64 },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "presentationMode": { "type": "boolean" },
        "forceChangePassword": { "type": "boolean" },
        "tableConfig": { "$ref": "#/definitions/tableConfig" },
        "preferences": { "$ref": "#/definitions/preferences" },
        "lastLogItemId": { "type": "string" },
        "sessionTimeout": { "type": "integer", "minimum": 1 },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "alerts": { "type": "boolean" },
        "role": {
          "type": "string",
          "description": "Ignored, user cannot change his own role."
        },
        "ucrmRole": { "type": "string" },
        "homeScreen": { "type": "string" },
        "ucrmId": { "type": "string", "example": "123" }
      },
      "required": [
        "username",
        "email",
        "currentPassword",
        "forceChangePassword",
        "alerts"
      ]
    },
    "NmsUpdateSettings": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "example": "Europe/Prague",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Khartoum",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Havana",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Damascus",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Pyongyang",
            "Asia/Qatar",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tehran",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "Cuba",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Iran",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Pacific-New",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "homePage": {
          "type": "string",
          "example": "unms",
          "enum": ["unms", "ucrm"]
        },
        "hostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "autoBackups": { "type": "boolean", "example": true },
        "deviceAutoBackups": { "type": "boolean", "example": true },
        "discoveryAutoConfiguration": { "type": "boolean", "example": true },
        "discoveryAllowUnsecuredChannels": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowLocalScan": { "type": "boolean", "example": false },
        "discoveryAllowRemoteScan": { "type": "boolean", "example": false },
        "discoverySnmpCommunity": { "type": "string", "example": "public" },
        "discoveryHideBlackBox": { "type": "boolean", "example": false },
        "discoveryBlacklist": { "$ref": "#/definitions/discoveryBlacklist" },
        "mapsProvider": {
          "type": "string",
          "example": "OpenStreetMap",
          "enum": ["GoogleMaps", "OpenStreetMap"]
        },
        "googleMapsApiKey": { "type": "string", "example": null },
        "devicePingAddressMode": {
          "type": "string",
          "enum": ["auto", "custom"]
        },
        "devicePingAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "optional" } } },
            { "type": "string" }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 30000,
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 5000,
          "minimum": 2000,
          "maximum": 300000
        },
        "useLetsEncrypt": { "type": "boolean", "example": true },
        "allowLoggingToSentry": { "type": "boolean", "example": true },
        "allowLoggingToLogentries": { "type": "boolean", "example": true },
        "deviceTransmissionProfile": {
          "type": "string",
          "example": "auto",
          "enum": ["auto", "custom"]
        },
        "deviceTransmissionFrequencies": {
          "$ref": "#/definitions/deviceTransmissionFrequencies"
        },
        "defaultGracePeriod": {
          "type": "integer",
          "example": 30000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "restartGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "upgradeGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "outageMailablePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 0,
          "maximum": 86400000
        },
        "dateFormat": {
          "type": "string",
          "example": "D MMM YYYY",
          "enum": [
            "D MMM YYYY",
            "Do MMM YYYY",
            "DD MMM YYYY",
            "MMM D, YYYY",
            "MMM Do, YYYY",
            "MMM DD, YYYY",
            "YYYY-MM-DD",
            "DD-MM-YYYY",
            "D.M.YYYY",
            "DD.MM.YYYY",
            "D/M/YYYY",
            "DD/MM/YYYY",
            "M/D/YYYY",
            "MM/DD/YYYY"
          ]
        },
        "timeFormat": {
          "type": "string",
          "example": "h:mm a",
          "enum": ["H:mm", "h:mm a"]
        },
        "allowAutoUpdateUbntFirmwares": { "type": "boolean", "example": true },
        "allowBetaFirmwares": { "type": "boolean", "example": false },
        "ucrmEnabled": { "type": "boolean", "example": false },
        "isIsp": { "type": "boolean", "example": true },
        "country": {
          "type": "string",
          "example": "CZ",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "deviceNumberOfBackups": {
          "type": "integer",
          "example": 30,
          "minimum": 1,
          "maximum": 100
        },
        "trafficShapingAdjustment": {
          "type": "integer",
          "example": 5,
          "minimum": 1,
          "maximum": 100
        },
        "defaultQosPropagation": {
          "type": "string",
          "enum": ["all", "gateway"]
        },
        "migrationModeEnabled": {
          "type": "boolean",
          "description": "When true all new device connections and connected devices will change UNMS Key.",
          "example": false
        },
        "migrationForceModeEnabled": {
          "type": "boolean",
          "description": "When true reachability check will be skipped.",
          "example": false
        },
        "migrationHostname": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } },
            { "type": "string", "x-format": { "hostname": true } }
          ]
        },
        "migrationPort": {
          "type": "integer",
          "description": "UNMS port to migrate to.",
          "minimum": 1,
          "maximum": 65535
        },
        "allowUnmsBetaVersion": {
          "type": "boolean",
          "description": "When true UNMS will look for latest UNMS version among beta releases.",
          "example": false
        },
        "maintenanceWindowFromTime": {
          "type": "integer",
          "description": "Hour when maintenance window start.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowToTime": {
          "type": "integer",
          "description": "Hour when maintenance window end.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowFriday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowMonday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSaturday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSunday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowThursday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowTuesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowWednesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        }
      },
      "required": [
        "timezone",
        "homePage",
        "hostname",
        "autoBackups",
        "deviceAutoBackups",
        "discoveryAutoConfiguration",
        "discoveryAllowUnsecuredChannels",
        "discoveryAllowLocalScan",
        "discoveryAllowRemoteScan",
        "discoverySnmpCommunity",
        "discoveryHideBlackBox",
        "mapsProvider",
        "googleMapsApiKey",
        "devicePingAddressMode",
        "devicePingAddress",
        "devicePingIntervalNormal",
        "devicePingIntervalOutage",
        "useLetsEncrypt",
        "allowLoggingToSentry",
        "allowLoggingToLogentries",
        "deviceTransmissionProfile",
        "defaultGracePeriod",
        "restartGracePeriod",
        "upgradeGracePeriod",
        "outageMailablePeriod",
        "dateFormat",
        "timeFormat",
        "allowAutoUpdateUbntFirmwares",
        "allowBetaFirmwares",
        "ucrmEnabled",
        "isIsp",
        "country",
        "defaultQosPropagation",
        "migrationModeEnabled",
        "migrationForceModeEnabled",
        "migrationHostname",
        "migrationPort"
      ]
    },
    "Model 82": {
      "type": "object",
      "properties": { "version": { "type": "string", "example": "0.13.0" } },
      "required": ["version"]
    },
    "SiteIdentificationDetail 1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": ["site", "endpoint"]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "parent": { "$ref": "#/definitions/parent%204" },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        }
      },
      "required": ["id", "type", "name", "status"]
    },
    "SiteDescription 1": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "contact": { "$ref": "#/definitions/SiteDescriptionContact" },
        "location": { "$ref": "#/definitions/SiteDescriptionLocation" },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "endpoints": { "$ref": "#/definitions/SiteEndpointsList" },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices in this site.",
          "example": 1
        },
        "deviceListStatus": {
          "type": "string",
          "description": "Deprecated. Use site.identification.status instead.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "ipAddresses": { "$ref": "#/definitions/ipAddresses" }
      }
    },
    "SiteUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "identification": {
          "$ref": "#/definitions/SiteIdentificationDetail%201"
        },
        "description": { "$ref": "#/definitions/SiteDescription%201" },
        "notifications": { "$ref": "#/definitions/SiteNotifications" },
        "qos": { "$ref": "#/definitions/SiteTrafficShaping%201" },
        "ucrm": { "$ref": "#/definitions/SiteUcrmDescription" }
      },
      "required": ["identification", "description"]
    },
    "VerifyPasswordAction": {
      "type": "object",
      "properties": {
        "password": { "type": "string", "minLength": 4, "maxLength": 64 },
        "totpAuthEnabled": { "type": "boolean" }
      },
      "required": ["password", "totpAuthEnabled"]
    },
    "EditUserPreferences": {
      "type": "object",
      "properties": {
        "mapConfig": { "$ref": "#/definitions/mapConfig" },
        "tableConfig": { "$ref": "#/definitions/tableConfig" },
        "preferences": { "$ref": "#/definitions/preferences" },
        "alerts": { "type": "boolean" }
      }
    },
    "EnableTotpAuth": {
      "type": "object",
      "properties": {
        "totpAuthEnabled": { "type": "boolean" },
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64,
          "optional": ["password"],
          "x-alternatives": [
            { "type": "string", "minLength": 4, "maxLength": 64 }
          ]
        },
        "verificationCode": {
          "type": "string",
          "optional": ["verificationCode"],
          "x-alternatives": [{ "type": "string" }]
        },
        "totpAuthSecret": {
          "type": "string",
          "optional": ["totpAuthSecret"],
          "x-alternatives": [{ "type": "string" }]
        }
      },
      "required": ["totpAuthEnabled"]
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "username": {
          "type": "string",
          "description": "Username used for login.",
          "example": "admin",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_]*$"
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "example": "admin@example.com",
          "x-format": { "email": true }
        },
        "firstName": {
          "type": "string",
          "description": "User's first name.",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name.",
          "example": "Doe"
        },
        "role": {
          "type": "string",
          "description": "Users's role in Network.",
          "example": "admin",
          "enum": ["superadmin", "admin", "guest", "anonymous", "installer"]
        },
        "ucrmRole": {
          "type": "string",
          "description": "Users's role ID in CRM.",
          "example": null
        },
        "homeScreen": {
          "type": "string",
          "example": "/nms",
          "enum": ["/nms", "/crm"]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether user is allowed to login or not.",
          "example": true
        },
        "alerts": {
          "type": "boolean",
          "description": "Whether to send email alerts or not.",
          "example": true
        },
        "totpAuthEnabled": {
          "type": "boolean",
          "description": "Whether two-factor authentication is enabled or not.",
          "example": false
        },
        "ucrmId": {
          "type": "string",
          "description": "Ignored, kept for backward compatibility.",
          "example": null
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "role",
        "alerts",
        "totpAuthEnabled"
      ]
    },
    "login 1": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Admin's username",
          "example": "admin",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_]*$"
        },
        "password": {
          "type": "string",
          "description": "Admin's password",
          "example": "secredPa$$word",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": ["username", "password"]
    },
    "DeviceAdmin": {
      "type": "object",
      "description": "Admin settings",
      "properties": { "login": { "$ref": "#/definitions/login%201" } }
    },
    "login 2": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Read only user's username",
          "example": "readOnlyUser",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_]*$"
        },
        "password": {
          "type": "string",
          "description": "Read only user's password",
          "example": "secredPa$$word",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": ["username", "password"]
    },
    "DeviceReadOnlyAccount": {
      "type": "object",
      "description": "Read only user's settings",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if a read only user is set",
          "example": true
        },
        "login": { "$ref": "#/definitions/login%202" }
      },
      "required": ["enabled"]
    },
    "dnsServers 1": {
      "type": "array",
      "description": "Array of IP addresses of DNS servers in IPv4 form",
      "example": ["8.8.8.8"],
      "minItems": 0,
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "forbidden" } }
      }
    },
    "DeviceSystem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Device's hostname",
          "example": "UNMS",
          "minLength": 2,
          "maxLength": 63
        },
        "domainName": {
          "type": "string",
          "description": "Device's domain name",
          "example": "UNMS",
          "minLength": 2,
          "maxLength": 63
        },
        "timezone": {
          "type": "string",
          "description": "Device's time zone",
          "example": "UTC",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Khartoum",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Havana",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Damascus",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Pyongyang",
            "Asia/Qatar",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tehran",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "Cuba",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Iran",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Pacific-New",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "admin": { "$ref": "#/definitions/DeviceAdmin" },
        "dns1": {
          "type": "string",
          "description": "Primary DNS server address",
          "example": "8.8.8.8",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dns2": {
          "type": "string",
          "description": "Secondary DNS server address",
          "example": "8.8.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "gateway": {
          "type": "string",
          "description": "Default gateway static address",
          "example": "192.168.0.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "readOnlyAccount": { "$ref": "#/definitions/DeviceReadOnlyAccount" },
        "mtu": {
          "type": "integer",
          "description": "MTU on GPON's ports",
          "example": 1518,
          "minimum": 1518,
          "maximum": 1982
        },
        "clientIsolation": {
          "type": "boolean",
          "description": "Set to true to isolate clients",
          "example": true
        },
        "igmpSnooping": {
          "type": "boolean",
          "description": "Set to true to enable IGMP snooping",
          "example": true
        },
        "accessFromSfp": {
          "type": "boolean",
          "description": "Set to true to allow access from SFP",
          "example": true
        },
        "dhcpOption82": {
          "type": "boolean",
          "description": "Set to true to allow DHCP option 82",
          "example": true
        },
        "inbandManagementVlan": {
          "type": "integer",
          "description": "Inband management VLAN",
          "example": 1,
          "minimum": 1,
          "maximum": 4063
        },
        "ipV4AddressType": {
          "type": "string",
          "description": "IP address origin",
          "example": "dhcp",
          "enum": ["dhcp", "static"]
        },
        "ipV4Address": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "required" } } }
          ]
        },
        "ipV4Gateway": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } }
          ]
        },
        "dnsServers": { "$ref": "#/definitions/dnsServers%201" },
        "ipV6AddressType": {
          "type": "string",
          "description": "IP address origin",
          "example": "slaac",
          "enum": ["dhcp", "slaac", "linkLocal", "static"]
        },
        "ipV6Address": {
          "type": "string",
          "x-format": { "ip": { "cidr": "required" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "required" } } }
          ]
        },
        "ipV6Gateway": {
          "type": "string",
          "x-format": { "ip": { "cidr": "forbidden" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "forbidden" } } }
          ]
        },
        "ipV6SlaacEnabled": {
          "type": "boolean",
          "description": "Set to true if Edge Switch has a SLAAC IPv6 address.",
          "example": true
        },
        "stp": { "$ref": "#/definitions/SpanningTreeProtocolSchema" },
        "jumboMtu": { "$ref": "#/definitions/jumboMtu" }
      },
      "required": ["name", "mtu"]
    },
    "Model 83": {
      "type": "object",
      "properties": { "file": { "type": "string", "format": "binary" } },
      "required": ["file"]
    },
    "SimulationLinkPayload": {
      "type": "object",
      "properties": {
        "quality": { "type": "string", "maxLength": 200 },
        "terrain": { "$ref": "#/definitions/terrain" }
      },
      "required": ["quality"]
    },
    "Model 84": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Device name",
          "example": "UBNTe7961646",
          "minLength": 1
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to true if device is enabled",
          "example": true
        },
        "adminPassword": {
          "type": "string",
          "description": "Admin password",
          "example": "secredPass_123",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": ["name", "enabled"]
    },
    "meta 1": {
      "type": "object",
      "properties": {
        "alias": { "type": "string", "maxLength": 30 },
        "note": { "type": "string", "maxLength": 300 },
        "maintenance": { "type": "boolean" },
        "customIpAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        }
      },
      "required": ["maintenance"]
    },
    "PayloadUnmsSettings": {
      "type": "object",
      "properties": {
        "overrideGlobal": { "type": "boolean" },
        "devicePingAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } },
          "x-alternatives": [
            { "type": "string", "x-format": { "ip": { "cidr": "optional" } } },
            { "type": "string" }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "minimum": 2000,
          "maximum": 300000
        },
        "deviceTransmissionFrequency": {
          "type": "string",
          "enum": ["minimal", "low", "medium", "high", "realtime"]
        },
        "deviceGracePeriodOutage": {
          "type": "number",
          "minimum": 30000,
          "maximum": 2592000000
        },
        "meta": { "$ref": "#/definitions/meta%201" }
      },
      "required": ["overrideGlobal"]
    },
    "login 3": {
      "type": "object",
      "properties": {
        "username": { "type": "string", "minLength": 1 },
        "password": { "type": "string", "minLength": 1 }
      },
      "required": ["username", "password"]
    },
    "admin 1": {
      "type": "object",
      "properties": { "login": { "$ref": "#/definitions/login%203" } }
    },
    "Model 85": {
      "type": "object",
      "properties": { "admin": { "$ref": "#/definitions/admin%201" } }
    },
    "redistributeDefaultRoute 1": {
      "type": "object",
      "properties": { "enabled": { "type": "boolean" } },
      "required": ["enabled"]
    },
    "redistributeStatic": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "metric": { "type": "number", "minimum": 1, "maximum": 16 }
      },
      "required": ["enabled", "metric"]
    },
    "redistributeConnected": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "metric": { "type": "number", "minimum": 1, "maximum": 16 }
      },
      "required": ["enabled", "metric"]
    },
    "Model 86": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute%201"
        },
        "redistributeStatic": { "$ref": "#/definitions/redistributeStatic" },
        "redistributeConnected": {
          "$ref": "#/definitions/redistributeConnected"
        }
      },
      "required": [
        "router",
        "redistributeDefaultRoute",
        "redistributeStatic",
        "redistributeConnected"
      ]
    },
    "login 4": {
      "type": "object",
      "properties": {
        "username": { "type": "string", "minLength": 1 },
        "password": { "type": "string", "minLength": 1 }
      },
      "required": ["username", "password"]
    },
    "admin 2": {
      "type": "object",
      "properties": { "login": { "$ref": "#/definitions/login%204" } }
    },
    "Model 87": {
      "type": "object",
      "properties": { "admin": { "$ref": "#/definitions/admin%202" } }
    },
    "OnuPolicies 1": {
      "type": "object",
      "properties": {
        "defaultState": { "type": "string", "enum": ["enabled", "disabled"] },
        "dhcpOption82": { "type": "boolean" }
      },
      "required": ["defaultState"]
    },
    "login 5": {
      "type": "object",
      "properties": {
        "username": { "type": "string", "minLength": 1 },
        "password": { "type": "string", "minLength": 1 }
      },
      "required": ["username", "password"]
    },
    "admin 3": {
      "type": "object",
      "properties": { "login": { "$ref": "#/definitions/login%205" } }
    },
    "Model 88": {
      "type": "object",
      "properties": { "admin": { "$ref": "#/definitions/admin%203" } }
    },
    "redistributeDefaultRoute 2": {
      "type": "object",
      "properties": { "enabled": { "type": "boolean" } },
      "required": ["enabled"]
    },
    "Model 89": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute%202"
        },
        "redistributeStatic": { "$ref": "#/definitions/redistributeStatic" },
        "redistributeConnected": {
          "$ref": "#/definitions/redistributeConnected"
        }
      },
      "required": [
        "router",
        "redistributeDefaultRoute",
        "redistributeStatic",
        "redistributeConnected"
      ]
    },
    "login 6": {
      "type": "object",
      "properties": {
        "username": { "type": "string", "minLength": 1 },
        "password": { "type": "string", "minLength": 1 }
      },
      "required": ["username", "password"]
    },
    "admin 4": {
      "type": "object",
      "properties": { "login": { "$ref": "#/definitions/login%206" } }
    },
    "Model 90": {
      "type": "object",
      "properties": { "admin": { "$ref": "#/definitions/admin%204" } }
    },
    "Model 91": {
      "type": "object",
      "properties": {
        "cost": { "type": "integer", "minimum": 1, "maximum": 255 },
        "auth": {
          "type": "string",
          "enum": ["md5", "plaintext-password", "off"]
        },
        "authKey": {
          "type": "string",
          "required": ["authKey"],
          "x-alternatives": [{ "type": "string" }]
        }
      },
      "required": ["cost", "auth"]
    },
    "UpdateDHCPServer": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "description": "Primary DNS server address.",
          "example": "8.8.8.8",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dns2": {
          "type": "string",
          "description": "Secondary DNS server address.",
          "example": "8.8.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "unms.com",
          "minLength": 1
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": ["interface", "leaseTime", "name", "rangeEnd", "rangeStart"]
    },
    "UpdateDHCPServer 1": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "description": "Primary DNS server address.",
          "example": "8.8.8.8",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "dns2": {
          "type": "string",
          "description": "Secondary DNS server address.",
          "example": "8.8.4.4",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "unms.com",
          "minLength": 1
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "optional" } }
        }
      },
      "required": ["interface", "leaseTime", "name", "rangeEnd", "rangeStart"]
    },
    "DHCPServerList 4": {
      "type": "array",
      "items": { "$ref": "#/definitions/DHCPServer%201" }
    },
    "PayloadDeviceStation": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        }
      }
    },
    "Model 92": { "type": "array", "items": { "type": "string" } },
    "Model 93": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "wanPort": { "type": "number", "minimum": 0, "maximum": 65535 },
        "protocol": { "type": "string", "enum": ["udp", "tcp", "tcp_udp"] },
        "lanPort": { "type": "number", "minimum": 0, "maximum": 65535 },
        "lanAddress": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "forbidden" } }
        },
        "comment": { "type": "string" }
      },
      "required": [
        "enabled",
        "wanPort",
        "protocol",
        "lanPort",
        "lanAddress",
        "comment"
      ]
    },
    "portForwards 1": {
      "type": "array",
      "items": { "$ref": "#/definitions/Model%2093" }
    },
    "Model 94": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "minLength": 2, "maxLength": 80 },
        "profile": { "type": "string", "minLength": 1 },
        "enabled": { "type": "boolean" },
        "wanAddress": {
          "type": "string",
          "x-format": { "ip": { "version": ["ipv4"], "cidr": "required" } }
        },
        "pppoePassword": { "type": "string", "minLength": 4, "maxLength": 80 },
        "pppoeUser": {
          "type": "string",
          "minLength": 2,
          "maxLength": 80,
          "required": ["pppoeUser"],
          "x-alternatives": [
            { "type": "string", "minLength": 2, "maxLength": 80 }
          ]
        },
        "portForwards": { "$ref": "#/definitions/portForwards%201" }
      },
      "required": ["name", "profile", "enabled", "wanAddress"]
    },
    "antenna 3": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "maxLength": 200 },
        "gain": { "type": "integer" },
        "angle": { "type": "number" },
        "custom": { "type": "boolean" }
      },
      "required": ["name", "gain", "angle", "custom"]
    },
    "SimulationDevicePartialPayload": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "role": { "type": "string", "enum": ["ap", "cpe"] },
        "apType": { "type": "string", "enum": ["ptp", "ptmp"] },
        "name": { "type": "string", "maxLength": 200 },
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "height": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "altitude": { "type": "number", "minimum": -10000, "maximum": 10000 },
        "radius": { "type": "number", "enum": [0] },
        "coverageCpeHeight": {
          "type": "number",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "deviceName": {
          "type": "string",
          "example": "NanoStation 5AC Loco",
          "maxLength": 200
        },
        "eirp": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "frequency": {
          "type": "integer",
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "antenna": { "$ref": "#/definitions/antenna%203" },
        "channelWidth": {
          "type": "number",
          "example": 40,
          "enum": [0],
          "x-constraint": { "positive": true }
        },
        "color": { "type": "string", "example": "#ff00ff", "maxLength": 20 },
        "heading": { "type": "number" }
      }
    },
    "SimulationLinkPartialPayload": {
      "type": "object",
      "properties": {
        "quality": { "type": "string", "maxLength": 200 },
        "terrain": { "$ref": "#/definitions/terrain" }
      }
    },
    "ImageData": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "description": { "type": "string" }
      }
    }
  },
  "x-alt-definitions": {
    "parent": { "type": "object" },
    "site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Site ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": {
          "type": "string",
          "description": "Site name.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": ["site", "endpoint"]
        },
        "parent": { "$ref": "#/x-alt-definitions/parent" }
      },
      "required": ["id", "status", "type"]
    },
    "tableConfig": { "type": "object" },
    "mapConfig": {
      "type": "object",
      "properties": { "showClientSites": { "type": "boolean" } }
    },
    "preferences": { "type": "object" },
    "UserLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.83455844211215,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.463579999999956,
          "minimum": -180,
          "maximum": 180
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the location was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": ["latitude", "longitude", "updated"]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "username": { "type": "string", "example": "admin" },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": { "email": true }
        },
        "firstName": { "type": "string", "example": "John" },
        "lastName": { "type": "string", "example": "Doe" },
        "alerts": { "type": "boolean" },
        "totpAuthEnabled": { "type": "boolean" },
        "role": {
          "type": "string",
          "description": "Role of this user in UNMS. 'anonymous' if user is only allowed to access CRM.",
          "example": "admin",
          "enum": ["superadmin", "admin", "guest", "anonymous", "installer"]
        },
        "presentationMode": {
          "type": "boolean",
          "description": "Obsolete.",
          "example": false
        },
        "forceChangePassword": { "type": "boolean" },
        "tableConfig": { "$ref": "#/x-alt-definitions/tableConfig" },
        "mapConfig": { "$ref": "#/x-alt-definitions/mapConfig" },
        "preferences": { "$ref": "#/x-alt-definitions/preferences" },
        "lastLogItemId": { "type": "string" },
        "location": { "$ref": "#/x-alt-definitions/UserLocation" },
        "sessionTimeout": {
          "type": "integer",
          "description": "Session expiration in milliseconds, max 30 days.",
          "example": 3600000,
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "lastNewsSeenDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last news check time in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "Last seen version of release notes.",
          "example": "1.0.0-alpha"
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM user that is bound with this user.",
          "example": "123"
        },
        "ucrmRole": {
          "type": "string",
          "description": "Role of this user in UCRM. 'null' if user is not allowed to access UCRM.",
          "example": "1"
        },
        "homeScreen": {
          "type": "string",
          "description": "Where should the user be redirected after login.",
          "example": "/nms",
          "enum": ["/nms", "/crm"]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the user can log in or not.",
          "example": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the user was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "alerts",
        "forceChangePassword",
        "location",
        "keepMeSignedIn",
        "lastNewsSeenDate",
        "lastReleaseNotesSeen",
        "ucrmId",
        "ucrmRole",
        "homeScreen",
        "enabled",
        "updated"
      ]
    },
    "SsoUserSchema": {
      "type": "object",
      "properties": {
        "username": { "type": "string", "example": "admin" },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": { "email": true }
        },
        "firstName": { "type": "string", "example": "John" },
        "lastName": { "type": "string", "example": "Doe" }
      },
      "required": ["username", "email"]
    },
    "apDevice": {
      "type": "object",
      "properties": {
        "series": { "type": "string" },
        "id": { "type": "string" },
        "name": { "type": "string" },
        "type": { "type": "string" },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        }
      }
    },
    "DeviceAttributes": {
      "type": "object",
      "properties": {
        "series": { "type": "string" },
        "ssid": { "type": "string", "description": "SSID" },
        "gatewayId": { "type": "string" },
        "hasGatewayInterfaceAvailable": { "type": "boolean" },
        "isGatewaySupported": { "type": "boolean", "example": true },
        "apDevice": { "$ref": "#/x-alt-definitions/apDevice" },
        "country": {
          "type": "string",
          "enum": [
            "Unknown",
            "Licensed",
            "Afghanistan",
            "Åland Islands",
            "Albania",
            "Algeria",
            "American Samoa",
            "Andorra",
            "Angola",
            "Anguilla",
            "Antarctica",
            "Antigua and Barbuda",
            "Argentina",
            "Armenia",
            "Aruba",
            "Australia",
            "Austria",
            "Azerbaijan",
            "Bahamas",
            "Bahrain",
            "Bangladesh",
            "Barbados",
            "Belarus",
            "Belgium",
            "Belize",
            "Benin",
            "Bermuda",
            "Bhutan",
            "Bolivia",
            "Bonaire, Sint Eustatius and Saba",
            "Bosnia and Herzegovina",
            "Botswana",
            "Bouvet Island",
            "Brazil",
            "British Indian Ocean Territory",
            "Brunei Darussalam",
            "Bulgaria",
            "Burkina Faso",
            "Burundi",
            "Cabo Verde",
            "Cambodia",
            "Cameroon",
            "Canada",
            "Cayman Islands",
            "Central Africa Republic",
            "Chad  ",
            "Chile",
            "China",
            "Christmas Island",
            "Cocos Islands",
            "Colombia",
            "Comoros",
            "Cook Islands",
            "Costa Rica",
            "Côte d'Ivoire",
            "Croatia",
            "Curaçao",
            "Cyprus",
            "Czech Republic",
            "Democratic Republic of the Congo",
            "Denmark",
            "Djibouti",
            "Dominica",
            "Dominican Republic",
            "Ecuador",
            "Egypt",
            "El Salvador",
            "Equatorial Guinea",
            "Eritrea",
            "Estonia",
            "Eswatini",
            "Ethiopia",
            "Falkland Islands",
            "Faroe Islands",
            "Fiji",
            "Finland",
            "France",
            "French Guiana",
            "French Polynesia",
            "French Southern Territories",
            "Gabon",
            "Gambia",
            "Georgia",
            "Germany",
            "Ghana",
            "Gibraltar",
            "Greece",
            "Greenland",
            "Grenada",
            "Guadeloupe",
            "Guam",
            "Guatemala",
            "Guernsey",
            "Guinea",
            "Guinea-Bissau",
            "Guyana",
            "Haiti",
            "Heard Island and McDonald Islands",
            "Honduras",
            "Hong Kong",
            "Hungary",
            "Iceland",
            "India",
            "Indonesia",
            "Iraq",
            "Ireland",
            "Isle of Man",
            "Israel",
            "Italy",
            "Jamaica",
            "Japan",
            "Jersey",
            "Jordan",
            "Kazakhstan",
            "Kenya",
            "Kiribati",
            "Kuwait",
            "Kyrgyzstan",
            "Lao People's Democratic Republic",
            "Latvia",
            "Lebanon",
            "Lesotho",
            "Liberia",
            "Libya",
            "Liechtenstein",
            "Lithuania",
            "Luxembourg",
            "Macau Sar",
            "Macedonia, Fyro",
            "Madagascar",
            "Malawi",
            "Malaysia",
            "Maldives",
            "Mali",
            "Malta",
            "Marshall Islands",
            "Martinique",
            "Mauritania",
            "Mauritius",
            "Mayotte",
            "Mexico",
            "Micronesia",
            "Moldova",
            "Monaco",
            "Mongolia",
            "Montenegro",
            "Montserrat",
            "Morocco",
            "Mozambique",
            "Myanmar",
            "Namibia",
            "Nauru",
            "Nepal",
            "Netherlands",
            "New Caledonia",
            "New Zealand",
            "Nicaragua",
            "Niger",
            "Nigeria",
            "Niue",
            "Norfolk Island",
            "Northern Mariana Islands",
            "Norway",
            "Oman",
            "Pakistan",
            "Palau",
            "Panama",
            "Papua New Guinea",
            "Paraguay",
            "Peru",
            "Philippines",
            "Pitcairn",
            "Poland",
            "Portugal",
            "Puerto Rico",
            "Qatar",
            "Republic of Korea",
            "Republic of Serbia",
            "Republic of Seychelles",
            "Republic of the Congo",
            "Reunion",
            "Romania",
            "Russia",
            "Rwanda",
            "Saint Barthélemy",
            "Saint Helena, Ascension and Tristan da Cunh",
            "Saint Kitts and Nevis",
            "Saint Lucia",
            "Saint Martin",
            "Saint Pierre Miquelon",
            "Saint Vincent Grenadiens",
            "Samoa",
            "San Marino",
            "Sao Tome and Principe",
            "Saudi Arabia",
            "Senegal",
            "Sierra Leone",
            "Singapore",
            "Sint Maarten",
            "Slovakia",
            "Slovenia",
            "Solomon Islands",
            "Somalia",
            "South Africa",
            "South Georgia and the South Sandwich Islands",
            "South Sudan",
            "Spain",
            "Sri Lanka",
            "State of Palestine",
            "Suriname",
            "Svalbard and Jan Mayen",
            "Sweden",
            "Switzerland",
            "Taiwan",
            "Tajikistan",
            "Tanzania",
            "Thailand",
            "Timor-Leste",
            "Togo",
            "Tokelau",
            "Tonga",
            "Trinidad and Tobago",
            "Tunisia",
            "Turkey",
            "Turkmenistan",
            "Turks Caicos",
            "Tuvalu",
            "Uganda",
            "Ukraine",
            "United Arab Emirates",
            "United Kingdom",
            "United States",
            "Uruguay",
            "Uzbekistan",
            "Vanuatu",
            "Vatican City State",
            "Venezuela",
            "Vietnam",
            "Virgin Islands (British)",
            "Virgin Islands (U.S.)",
            "Wallis Futuna",
            "Western Sahara",
            "Yemen",
            "Zambia",
            "Zimbabwe"
          ]
        }
      }
    },
    "visibleBy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "name": { "type": "string" }
      },
      "required": ["id", "type", "model", "name"]
    },
    "discovery": {
      "type": "object",
      "properties": {
        "configured": { "type": "boolean" },
        "error": { "type": "string" },
        "protocol": { "type": "string" },
        "snmpCommunity": { "type": "string" },
        "status": { "type": "string" },
        "isProcessing": { "type": "boolean" },
        "visibleBy": { "$ref": "#/x-alt-definitions/visibleBy" }
      }
    },
    "interface": { "type": "object" },
    "vlans": {
      "type": "object",
      "properties": {
        "interface": { "$ref": "#/x-alt-definitions/interface" },
        "vlanId": { "$ref": "#/x-alt-definitions/interface" }
      }
    },
    "eswitch": {
      "type": "object",
      "properties": { "vlans": { "$ref": "#/x-alt-definitions/vlans" } }
    },
    "unmss": {
      "type": "object",
      "properties": { "vlans": { "$ref": "#/x-alt-definitions/vlans" } }
    },
    "prerelease": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "alpha",
        "x-alternatives": [
          { "type": "string", "example": "alpha" },
          { "type": "number", "example": 1 }
        ]
      }
    },
    "current": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/x-alt-definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "latest": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/x-alt-definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "semver": {
      "type": "object",
      "properties": {
        "current": { "$ref": "#/x-alt-definitions/current" },
        "latest": { "$ref": "#/x-alt-definitions/latest" }
      },
      "required": ["current", "latest"]
    },
    "DeviceFirmware": {
      "type": "object",
      "properties": {
        "current": {
          "type": "string",
          "description": "Current firmware version."
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version."
        },
        "compatible": {
          "type": "boolean",
          "description": "Is firmware compatible with UNMS"
        },
        "semver": { "$ref": "#/x-alt-definitions/semver" }
      },
      "required": ["current", "latest", "compatible"]
    },
    "DeviceIdentification": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS."
        },
        "category": {
          "type": "string",
          "enum": ["optical", "wired", "wireless", "accessories"]
        },
        "displayName": {
          "type": "string",
          "description": "UNMS device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "hostname": { "type": "string" },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UFiber OLT."
        },
        "name": { "type": "string" },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UFiber NanoG",
            "UFiber Loco",
            "UFiber Wifi",
            "UFiber Instant",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "lturocket",
            "GP",
            "ltu60",
            "SunMax",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "serialNumber": { "type": "string" },
        "site": {
          "$ref": "#/definitions/site",
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/site" }]
        },
        "started": { "type": "string", "format": "date-time" },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "wanInterfaceId": { "type": "string" },
        "updated": { "type": "string", "format": "date-time" }
      },
      "required": ["id"]
    },
    "latestBackup": {
      "type": "object",
      "description": "Latest backup info.",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Latest backup timestamp.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "id": { "type": "string", "description": "Latest backup ID." }
      },
      "required": ["timestamp", "id"]
    },
    "DeviceMeta": {
      "type": "object",
      "properties": {
        "alias": { "type": "string", "maxLength": 30 },
        "customIpAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "failedMessageDecryption": { "type": "boolean" },
        "maintenance": { "type": "boolean" },
        "note": { "type": "string", "maxLength": 300 },
        "restartTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": ["failedMessageDecryption", "maintenance", "restartTimestamp"]
    },
    "linkScore": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalDownlinkCapacity": { "type": "integer" },
        "theoreticalUplinkCapacity": { "type": "integer" }
      }
    },
    "antenna": {
      "type": "object",
      "properties": {
        "gain": { "type": "number" },
        "name": { "type": "string" }
      }
    },
    "wirelessActiveInterfaceIds": {
      "type": "array",
      "description": "Main active radios currently used to send/receive traffic.",
      "example": ["wlan0"],
      "items": { "type": "string" }
    },
    "DeviceOverview": {
      "type": "object",
      "description": "Read-only basic device/client overview attributes.",
      "properties": {
        "batteryCapacity": { "type": "number" },
        "batteryTime": { "type": "number" },
        "biasCurrent": {
          "type": "number",
          "description": "Nullable property in milliamperes."
        },
        "canUpgrade": {
          "type": "boolean",
          "description": "TRUE if device can be upgraded."
        },
        "cpu": { "type": "number", "description": "Current cpu load." },
        "createdAt": { "type": "string", "format": "date-time" },
        "distance": {
          "type": "number",
          "description": "Nullable property in meters."
        },
        "frequency": {
          "type": "number",
          "description": "Nullable prop; current frequency (only for airmax devices)."
        },
        "isLocateRunning": {
          "type": "boolean",
          "description": "TRUE if device is in location mode."
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Last seen timestamp in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "powerStatus": { "type": "number" },
        "runningOnBattery": {
          "type": "boolean",
          "description": "TRUE if device is running on battery"
        },
        "ram": { "type": "number", "description": "Current memory usage." },
        "signal": {
          "type": "number",
          "description": "Nullable prop; current signal level (only for airmax devices), for example -55 dBm.",
          "example": "-55"
        },
        "signalMax": {
          "type": "number",
          "description": "Theoretical max local signal level.",
          "example": "-55"
        },
        "remoteSignalMax": {
          "type": "number",
          "description": "Theoretical max remote signal level.",
          "example": "-55"
        },
        "stationsCount": {
          "type": "number",
          "description": "Count of stations (only for airmax and aircube)."
        },
        "status": {
          "type": "string",
          "description": "Read-only value generated by UNMS."
        },
        "temperature": { "type": "number" },
        "uptime": { "type": "number", "description": "Uptime in seconds." },
        "voltage": {
          "type": "number",
          "description": "System input voltage in V."
        },
        "linkScore": { "$ref": "#/x-alt-definitions/linkScore" },
        "downlinkCapacity": { "type": "integer" },
        "uplinkCapacity": { "type": "integer" },
        "theoreticalUplinkCapacity": { "type": "integer" },
        "theoreticalDownlinkCapacity": { "type": "integer" },
        "theoreticalMaxUplinkCapacity": { "type": "integer" },
        "theoreticalMaxDownlinkCapacity": { "type": "integer" },
        "antenna": { "$ref": "#/x-alt-definitions/antenna" },
        "channelWidth": { "type": "number" },
        "transmitPower": { "type": "number" },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "wirelessActiveInterfaceIds": {
          "$ref": "#/x-alt-definitions/wirelessActiveInterfaceIds"
        }
      }
    },
    "firmware": {
      "type": "object",
      "properties": {
        "major": { "type": "number", "example": 1 },
        "minor": { "type": "number", "example": 10 },
        "patch": { "type": "number", "example": 8 },
        "prerelease": { "$ref": "#/x-alt-definitions/prerelease" },
        "order": { "type": "string", "example": "65546.8.0" }
      },
      "required": ["major", "minor", "patch"]
    },
    "DeviceUpgrade": {
      "type": "object",
      "properties": {
        "status": { "type": "string" },
        "progress": { "type": "number" },
        "firmware": { "$ref": "#/x-alt-definitions/firmware" }
      },
      "required": ["status", "progress", "firmware"]
    },
    "Model 1": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string",
          "example": "192.168.1.100/24",
          "x-format": { "ip": { "cidr": "required" } }
        },
        "origin": {
          "type": "string",
          "example": "dhcp",
          "enum": ["dhcp", "slaac", "link-local", "static"]
        },
        "type": {
          "type": "string",
          "example": "dynamic",
          "enum": ["dynamic", "static", "dhcp", "dhcpv6"]
        },
        "version": { "type": "string", "example": "v4", "enum": ["v4", "v6"] }
      },
      "required": ["cidr", "type"]
    },
    "addresses": {
      "type": "array",
      "items": { "$ref": "#/x-alt-definitions/Model%201" }
    },
    "InterfaceIdentification": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Nullable string.",
          "example": "Uplink"
        },
        "displayName": {
          "type": "string",
          "description": "Computed display name from name and description",
          "example": "eth0"
        },
        "mac": {
          "type": "string",
          "example": "fc:ec:da:03:bb:a8",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "name": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        },
        "position": {
          "type": "integer",
          "description": "Physical port position.",
          "example": 0
        },
        "type": { "type": "string", "example": "eth" }
      }
    },
    "ports": { "type": "array", "items": { "type": "string" } },
    "stp": {
      "type": "object",
      "properties": {
        "edgePort": { "type": "string", "enum": ["auto", "enable", "disable"] },
        "enabled": { "type": "boolean" },
        "pathCost": { "type": "number" },
        "portPriority": { "type": "number" }
      }
    },
    "lag": {
      "type": "object",
      "properties": {
        "mode": { "type": "string" },
        "vlanNative": { "type": "number" },
        "includeVlans": { "type": "string" },
        "ports": { "$ref": "#/x-alt-definitions/ports" },
        "loadBalance": { "type": "string" },
        "linkTrap": { "type": "boolean" },
        "dhcpSnooping": { "type": "boolean" },
        "static": { "type": "boolean" },
        "stp": { "$ref": "#/x-alt-definitions/stp" }
      }
    },
    "ospfConfig": {
      "type": "object",
      "properties": {
        "auth": { "type": "string", "example": null },
        "authKey": { "type": "string", "example": null },
        "cost": { "type": "string", "example": null },
        "enabled": { "type": "boolean", "example": false }
      }
    },
    "InterfaceOspf": {
      "type": "object",
      "properties": {
        "ospfCapable": { "type": "boolean", "example": true },
        "ospfConfig": { "$ref": "#/x-alt-definitions/ospfConfig" }
      },
      "required": ["ospfConfig"]
    },
    "capacities": {
      "type": "array",
      "items": { "type": "string", "enum": ["off"] }
    },
    "InterfacePoe": {
      "type": "object",
      "properties": {
        "capacities": { "$ref": "#/x-alt-definitions/capacities" },
        "output": {
          "type": "string",
          "example": "off",
          "enum": [
            "off",
            "active",
            "24v",
            "48v",
            "54v",
            "24v-4pair",
            "54v-4pair",
            "pthru"
          ]
        }
      }
    },
    "capacities 1": {
      "type": "array",
      "items": { "type": "string", "enum": ["auto"] }
    },
    "InterfaceSpeeds": {
      "type": "object",
      "properties": {
        "capacities": { "$ref": "#/x-alt-definitions/capacities%201" },
        "speed": {
          "type": "string",
          "example": "auto",
          "enum": [
            "auto",
            "autodetect",
            "10-half",
            "10-full",
            "100-half",
            "100-full",
            "300-full",
            "1000-half",
            "1000-full",
            "2500-full",
            "10000-full"
          ]
        }
      }
    },
    "loadBalanceValues": { "type": "array", "items": { "type": "string" } },
    "capabilities": {
      "type": "object",
      "properties": {
        "supportCableTest": { "type": "boolean" },
        "supportReset": { "type": "boolean" },
        "loadBalanceValues": { "$ref": "#/x-alt-definitions/loadBalanceValues" }
      }
    },
    "InterfaceStatistics": {
      "type": "object",
      "properties": {
        "dropped": { "type": "number", "example": 0 },
        "errors": { "type": "number", "example": 0 },
        "rxbytes": { "type": "number", "example": 7487858302 },
        "rxrate": { "type": "number", "example": 3440 },
        "txbytes": { "type": "number", "example": 368737600 },
        "txrate": { "type": "number", "example": 736 },
        "poePower": { "type": "number", "example": 736 }
      }
    },
    "InterfaceStatus": {
      "type": "object",
      "properties": {
        "currentSpeed": { "type": "string", "example": "1000-full" },
        "description": { "type": "string", "example": "1 Gbps - Full Duplex" },
        "plugged": { "type": "boolean", "example": true },
        "speed": { "type": "string", "example": "auto" },
        "status": { "type": "string", "example": "active" }
      }
    },
    "vid": { "type": "array", "items": { "type": "string" } },
    "Model 2": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "pvid": { "type": "string" },
        "vid": { "$ref": "#/x-alt-definitions/vid" },
        "displayName": { "type": "string" },
        "enabled": { "type": "boolean" },
        "hasAddress": { "type": "boolean" }
      },
      "required": ["id", "enabled", "hasAddress"]
    },
    "ports 1": {
      "type": "array",
      "items": { "$ref": "#/x-alt-definitions/Model%202" }
    },
    "switch": {
      "type": "object",
      "example": null,
      "properties": {
        "ports": { "$ref": "#/x-alt-definitions/ports%201" },
        "vlanCapable": { "type": "boolean" },
        "vlanEnabled": { "type": "boolean" }
      },
      "required": ["ports", "vlanCapable", "vlanEnabled"]
    },
    "pingWatchdog": {
      "type": "object",
      "example": null,
      "properties": {
        "address": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "enabled": { "type": "boolean" },
        "failureCount": { "type": "number" },
        "interval": { "type": "number" },
        "offDelay": { "type": "number" },
        "startDelay": { "type": "number" }
      }
    },
    "speedLimit": {
      "type": "object",
      "example": null,
      "properties": {
        "enabled": { "type": "boolean" },
        "rx": { "type": "number", "minimum": 0, "maximum": 1000000 },
        "tx": { "type": "number", "minimum": 0, "maximum": 1000000 }
      }
    },
    "stp 1": {
      "type": "object",
      "example": null,
      "properties": {
        "edgePort": { "type": "string", "enum": ["auto", "enable", "disable"] },
        "enabled": { "type": "boolean" },
        "pathCost": { "type": "number" },
        "portPriority": { "type": "number" }
      }
    },
    "port": {
      "type": "object",
      "description": "Properties specific for ports on ES and TS devices.",
      "example": null,
      "properties": {
        "dhcpSnooping": { "type": "boolean" },
        "flowControl": { "type": "boolean" },
        "isolated": { "type": "boolean" },
        "pingWatchdog": { "$ref": "#/x-alt-definitions/pingWatchdog" },
        "speedLimit": { "$ref": "#/x-alt-definitions/speedLimit" },
        "routed": { "type": "boolean" },
        "stp": { "$ref": "#/x-alt-definitions/stp%201" }
      }
    },
    "dfsLockouts": {
      "type": "array",
      "description": "DFS lockout frequencies",
      "example": [5440, 5460],
      "items": { "type": "number" }
    },
    "antenna 1": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "gain": { "type": "number" },
        "cableLoss": { "type": "number" }
      }
    },
    "wireless": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string",
          "description": "SSID",
          "example": "ubnt.com"
        },
        "frequency": {
          "type": "number",
          "description": "Frequency in MHz, on which radio is listening.",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBand": {
          "type": "string",
          "enum": ["2.4GHz", "3GHz", "4GHz", "5GHz", "11GHz", "24GHz", "60GHz"]
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width in MHz radio is operating on.",
          "example": 40,
          "minimum": 0
        },
        "dfsTimeRemaining": {
          "type": "number",
          "description": "DFS wait time remaining.",
          "example": 0
        },
        "dfsTimeTotal": {
          "type": "number",
          "description": "DFS expected total wait time.",
          "example": 0
        },
        "dfsLockouts": { "$ref": "#/x-alt-definitions/dfsLockouts" },
        "key": { "type": "string", "description": "Pre shared key" },
        "security": {
          "type": "string",
          "enum": ["wep", "wpa", "wpa2", "enabled", "none"]
        },
        "transmitPower": { "type": "number" },
        "transmitEirp": { "type": "number" },
        "frameLength": { "type": "number", "minimum": 0 },
        "minTxPower": { "type": "number" },
        "maxTxPower": { "type": "number" },
        "antenna": { "$ref": "#/x-alt-definitions/antenna%201" }
      },
      "required": [
        "ssid",
        "frequency",
        "channelWidth",
        "dfsTimeRemaining",
        "dfsTimeTotal",
        "dfsLockouts",
        "key",
        "security",
        "frameLength"
      ]
    },
    "DeviceIdentification 1": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UNMS."
        },
        "category": {
          "type": "string",
          "enum": ["optical", "wired", "wireless", "accessories"]
        },
        "displayName": {
          "type": "string",
          "description": "UNMS device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "hostname": { "type": "string" },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UFiber OLT."
        },
        "name": { "type": "string" },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UFiber NanoG",
            "UFiber Loco",
            "UFiber Wifi",
            "UFiber Instant",
            "UNMSR",
            "UNMSS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "lturocket",
            "GP",
            "ltu60",
            "SunMax",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "router",
            "switch",
            "gpon",
            "ap",
            "station",
            "other",
            "ups",
            "server",
            "wireless",
            "convertor",
            "gateway"
          ]
        },
        "serialNumber": { "type": "string" },
        "site": {
          "$ref": "#/definitions/site",
          "x-alternatives": [{ "$ref": "#/x-alt-definitions/site" }]
        },
        "started": { "type": "string", "format": "date-time" },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "unmsr",
            "unmss",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox"
          ]
        },
        "wanInterfaceId": { "type": "string" },
        "updated": { "type": "string", "format": "date-time" }
      },
      "required": ["id"]
    },
    "rxChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [30, 40],
      "items": { "type": "integer" }
    },
    "txChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [30, 40],
      "items": { "type": "integer" }
    },
    "statistics": {
      "type": "object",
      "properties": {
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer",
          "description": "Theoretical downlink capacity."
        },
        "theoreticalUplinkCapacity": {
          "type": "integer",
          "description": "Theoretical uplink capacity."
        }
      }
    },
    "Station": {
      "type": "object",
      "properties": {
        "connected": { "type": "boolean" },
        "deviceIdentification": {
          "$ref": "#/x-alt-definitions/DeviceIdentification%201"
        },
        "distance": {
          "type": "integer",
          "description": "Distance in meters.",
          "example": 100
        },
        "downlinkCapacity": { "type": "integer" },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latency": {
          "type": "integer",
          "description": "Latency in milliseconds.",
          "example": 10
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "interfaceId": {
          "type": "string",
          "description": "Interface name, where the station is connected.",
          "example": "wlan0"
        },
        "name": { "type": "string", "example": "lab-ISM5-1" },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "radio": {
          "type": "string",
          "enum": ["2.4GHz", "3GHz", "4GHz", "5GHz", "11GHz", "24GHz", "60GHz"]
        },
        "rxBytes": {
          "type": "integer",
          "description": "Received bytes.",
          "example": 926000
        },
        "rxModulation": {
          "type": "string",
          "description": "Local Rx data rate.",
          "example": 8
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 456
        },
        "rxSignal": {
          "type": "integer",
          "description": "Local Signal in dBm.",
          "example": -44
        },
        "rxChain": { "$ref": "#/x-alt-definitions/rxChain" },
        "rxChainMask": { "type": "integer", "example": 2 },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "txBytes": {
          "type": "integer",
          "description": "Transmitted/Sent bytes.",
          "example": 436000
        },
        "txModulation": {
          "type": "string",
          "description": "Remote Rx data rate.",
          "example": 8
        },
        "txRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 325
        },
        "txSignal": {
          "type": "integer",
          "description": "Remote Signal in dBm.",
          "example": -39
        },
        "txChain": { "$ref": "#/x-alt-definitions/txChain" },
        "txChainMask": { "type": "integer", "example": 2 },
        "noiseFloor": {
          "type": "integer",
          "description": "Wireless noise level in dBm",
          "example": -84
        },
        "uplinkCapacity": { "type": "integer" },
        "uptime": { "type": "integer" },
        "vendor": { "type": "string", "example": "Ubiquiti Networks" },
        "statistics": { "$ref": "#/x-alt-definitions/statistics" },
        "firmware": { "$ref": "#/x-alt-definitions/DeviceFirmware" }
      },
      "required": [
        "rxChain",
        "rxChainMask",
        "txChain",
        "txChainMask",
        "noiseFloor"
      ]
    },
    "stations": {
      "type": "array",
      "items": { "$ref": "#/x-alt-definitions/Station" }
    },
    "DeviceInterfaceSchema": {
      "type": "object",
      "properties": {
        "addresses": { "$ref": "#/x-alt-definitions/addresses" },
        "bridge": { "type": "string" },
        "canDisplayStatistics": { "type": "boolean", "example": true },
        "enabled": { "type": "boolean", "example": true },
        "identification": {
          "$ref": "#/x-alt-definitions/InterfaceIdentification"
        },
        "isSwitchedPort": { "type": "boolean" },
        "lag": { "$ref": "#/x-alt-definitions/lag" },
        "mtu": { "type": "number" },
        "ospf": { "$ref": "#/x-alt-definitions/InterfaceOspf" },
        "poe": { "$ref": "#/x-alt-definitions/InterfacePoe" },
        "speeds": { "$ref": "#/x-alt-definitions/InterfaceSpeeds" },
        "pppoe": { "type": "string", "example": null },
        "proxyARP": { "type": "string" },
        "sfp": { "type": "string", "example": null },
        "speed": {
          "type": "string",
          "example": "auto",
          "pattern": "^autodetect|auto|\\d+-(half|full)$"
        },
        "capabilities": { "$ref": "#/x-alt-definitions/capabilities" },
        "statistics": { "$ref": "#/x-alt-definitions/InterfaceStatistics" },
        "status": { "$ref": "#/x-alt-definitions/InterfaceStatus" },
        "switch": { "$ref": "#/x-alt-definitions/switch" },
        "visible": { "type": "boolean", "example": true },
        "vlan": { "type": "string", "example": null },
        "port": { "$ref": "#/x-alt-definitions/port" },
        "wireless": { "$ref": "#/x-alt-definitions/wireless" },
        "stations": { "$ref": "#/x-alt-definitions/stations" }
      },
      "required": ["identification"]
    },
    "DeviceInterfaceListSchema": {
      "type": "array",
      "items": { "$ref": "#/x-alt-definitions/DeviceInterfaceSchema" }
    },
    "DeviceStatusOverview": {
      "type": "object",
      "properties": {
        "attributes": { "$ref": "#/x-alt-definitions/DeviceAttributes" },
        "discovery": { "$ref": "#/x-alt-definitions/discovery" },
        "enabled": { "type": "boolean" },
        "eswitch": { "$ref": "#/x-alt-definitions/eswitch" },
        "unmss": { "$ref": "#/x-alt-definitions/unmss" },
        "firmware": { "$ref": "#/x-alt-definitions/DeviceFirmware" },
        "identification": {
          "$ref": "#/x-alt-definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "latestBackup": { "$ref": "#/x-alt-definitions/latestBackup" },
        "meta": { "$ref": "#/x-alt-definitions/DeviceMeta" },
        "mode": { "type": "string" },
        "overview": { "$ref": "#/x-alt-definitions/DeviceOverview" },
        "upgrade": { "$ref": "#/x-alt-definitions/DeviceUpgrade" },
        "interfaces": {
          "$ref": "#/x-alt-definitions/DeviceInterfaceListSchema"
        }
      },
      "required": ["enabled", "ipAddress"]
    },
    "SearchResultMatch": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Identification of the matched string.",
          "example": "interfaces.addresses.cidr"
        },
        "field": {
          "type": "string",
          "description": "Where in the \"data\" is the matched string.",
          "example": "interfaces.2.addresses.7.cidr"
        },
        "value": {
          "type": "string",
          "description": "String that contains the match.",
          "example": "667 Acboa road, Pimprehills"
        },
        "position": {
          "type": "number",
          "description": "Position in the \"value\" where the match starts.",
          "example": 4
        },
        "length": {
          "type": "number",
          "description": "Length of the matched string.",
          "example": 3
        }
      }
    },
    "SearchResultMatches": {
      "type": "array",
      "items": { "$ref": "#/x-alt-definitions/SearchResultMatch" }
    },
    "Model 3": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "example": "device", "enum": ["device"] },
        "data": { "$ref": "#/x-alt-definitions/DeviceStatusOverview" },
        "matches": { "$ref": "#/x-alt-definitions/SearchResultMatches" }
      },
      "required": ["type", "data", "matches"]
    },
    "SiteIdentificationDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": ["site", "endpoint"]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "parent": { "$ref": "#/x-alt-definitions/parent" },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        }
      },
      "required": ["id", "type", "name", "status"]
    },
    "SiteDescriptionContact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact person."
        },
        "email": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        }
      }
    },
    "SiteDescriptionLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 86.922623,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": 27.986065,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": ["longitude", "latitude"]
    },
    "SiteEndpointIdentification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": ["site", "endpoint"]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "parentId": {
          "type": "string",
          "description": "Parent siteId.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status",
        "parentId",
        "updated",
        "suspended"
      ]
    },
    "SiteEndpointsList": {
      "type": "array",
      "items": { "$ref": "#/x-alt-definitions/SiteEndpointIdentification" }
    },
    "ipAddresses": {
      "type": "array",
      "description": "Devices IPs assigned to a site/client site.",
      "items": {
        "type": "string",
        "example": "192.168.10.12",
        "x-format": { "ip": { "cidr": "optional" } }
      }
    },
    "SiteDescription": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "contact": { "$ref": "#/x-alt-definitions/SiteDescriptionContact" },
        "location": { "$ref": "#/x-alt-definitions/SiteDescriptionLocation" },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "endpoints": { "$ref": "#/x-alt-definitions/SiteEndpointsList" },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices in this site.",
          "example": 1
        },
        "deviceListStatus": {
          "type": "string",
          "description": "Deprecated. Use site.identification.status instead.",
          "example": "active",
          "enum": ["active", "disconnected", "inactive"]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "ipAddresses": { "$ref": "#/x-alt-definitions/ipAddresses" }
      }
    },
    "Model 4": {
      "type": "object",
      "description": "Users who will receive notifications. Notification type must be set to custom.",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "username": { "type": "string" },
        "email": { "type": "string", "x-format": { "email": true } }
      },
      "required": ["id", "username", "email"]
    },
    "users": {
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/x-alt-definitions/Model%204" }
    },
    "SiteNotifications": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "What notification system is used by this site.",
          "example": "system",
          "enum": ["system", "custom", "none"]
        },
        "users": { "$ref": "#/x-alt-definitions/users" }
      },
      "required": ["type", "users"]
    },
    "SiteTrafficShaping": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE if optional Traffic Shaping queue are activated.",
          "example": true
        },
        "propagation": {
          "type": "string",
          "description": "\n      Whether or not set Traffic Shaping on Client devices like, CPEs and ONUs.\n      Enabling this will lower your traffic in local network.\n    ",
          "enum": ["all", "gateway"]
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Download speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": { "positive": true }
        },
        "downloadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at downloadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": { "positive": true }
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Upload speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": { "positive": true }
        },
        "uploadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at uploadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": { "positive": true }
        },
        "aggregation": {
          "type": "integer",
          "description": "\n      Number indicating how many times the guaranteed rate is less than the maximum allowed bandwidth.\n      Null for auto calculation by UNMS.\n    ",
          "example": 2,
          "minimum": 1,
          "maximum": 10000
        }
      },
      "required": [
        "enabled",
        "downloadSpeed",
        "downloadBurstSize",
        "uploadSpeed",
        "uploadBurstSize",
        "aggregation"
      ]
    },
    "client": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "123" },
        "name": {
          "type": "string",
          "description": "CRM client's name.",
          "example": "John Smith"
        }
      },
      "required": ["id", "name"]
    },
    "service": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "example": "123" },
        "name": {
          "type": "string",
          "description": "Service name.",
          "example": "Building B"
        },
        "status": {
          "type": "number",
          "description": "Service status.",
          "example": 7,
          "enum": [0, 1, 2, 3, 4, 5, 6, 7]
        },
        "activeFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the service was activated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "tariffId": {
          "type": "string",
          "description": "ID of the tariff (service plan) used for this service.",
          "example": "1"
        }
      },
      "required": ["id", "name", "status", "activeFrom", "tariffId"]
    },
    "SiteUcrmDescription": {
      "type": "object",
      "properties": {
        "client": { "$ref": "#/x-alt-definitions/client" },
        "service": { "$ref": "#/x-alt-definitions/service" }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "identification": {
          "$ref": "#/x-alt-definitions/SiteIdentificationDetail"
        },
        "description": { "$ref": "#/x-alt-definitions/SiteDescription" },
        "notifications": { "$ref": "#/x-alt-definitions/SiteNotifications" },
        "qos": { "$ref": "#/x-alt-definitions/SiteTrafficShaping" },
        "ucrm": { "$ref": "#/x-alt-definitions/SiteUcrmDescription" },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices on this site.",
          "example": 2
        }
      },
      "required": [
        "identification",
        "description",
        "notifications",
        "qos",
        "deviceCount"
      ]
    },
    "Model 5": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "example": "site", "enum": ["site"] },
        "data": { "$ref": "#/x-alt-definitions/Site" },
        "matches": { "$ref": "#/x-alt-definitions/SearchResultMatches" }
      },
      "required": ["type", "data", "matches"]
    },
    "device": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "name": { "type": "string" },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-OLT",
            "UF-OLT4",
            "UNMS-R-PRO",
            "UNMS-R-Lite",
            "UNMS-S-Lite",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-LITE",
            "AF-LTU5",
            "LTU-Rocket",
            "AFLTULR",
            "AF60",
            "AF60-LR",
            "WaveAP",
            "WaveCPE",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "UNKNOWN"
          ]
        },
        "type": { "type": "string" },
        "series": { "type": "string" },
        "ssid": { "type": "string", "description": "SSID" }
      },
      "required": ["deviceId", "name", "type", "series"]
    },
    "StationOverview": {
      "type": "object",
      "properties": {
        "stationId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "ipAddress": {
          "type": "string",
          "x-format": { "ip": { "cidr": "optional" } }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "name": { "type": "string" },
        "connected": { "type": "boolean" },
        "device": { "$ref": "#/x-alt-definitions/device" }
      },
      "required": ["stationId", "ipAddress", "mac", "name", "connected"]
    },
    "Model 6": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "example": "station", "enum": ["station"] },
        "data": { "$ref": "#/x-alt-definitions/StationOverview" },
        "matches": { "$ref": "#/x-alt-definitions/SearchResultMatches" }
      },
      "required": ["type", "data", "matches"]
    },
    "airfiber": {
      "type": "object",
      "properties": {
        "frameLength": { "type": "number", "minimum": 0 },
        "mode": { "type": "string" }
      },
      "required": ["frameLength", "mode"]
    },
    "airmax": {
      "type": "object",
      "properties": {
        "wds": { "type": "boolean" },
        "mode": { "type": "string" }
      },
      "required": ["wds", "mode"]
    },
    "Model 7": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "firmwareVersion": { "type": "string" },
        "firmwareForMStationsVersion": {
          "type": "string",
          "description": "For accessPoint (AC series) with M stations."
        }
      },
      "required": ["deviceId", "firmwareVersion"]
    },
    "Model 8": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "firmwareVersion": { "type": "string" },
        "firmwareForMStationsVersion": {
          "type": "string",
          "description": "For accessPoint (AC series) with M stations."
        }
      },
      "required": ["deviceId", "firmwareVersion"]
    },
    "addressComponents": { "type": "array", "items": { "type": "string" } },
    "addresses 1": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "x-format": { "ip": { "cidr": "required", "version": ["ipv4"] } }
      }
    },
    "Model 9": {
      "type": "object",
      "properties": {
        "index": { "type": "integer", "minimum": 0 },
        "name": { "type": "string" },
        "mac": {
          "type": "string",
          "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
        },
        "type": {
          "type": "string",
          "default": "eth",
          "enum": ["eth", "sfp+", "wlan"]
        },
        "addresses": { "$ref": "#/x-alt-definitions/addresses%201" }
      },
      "required": ["index", "name"]
    },
    "DeviceImportInterfaces": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/x-alt-definitions/Model%209" }
    },
    "DeviceImportInterfaces 1": {
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/x-alt-definitions/Model%209" }
    },
    "DeviceImportInterfaces 2": {
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/x-alt-definitions/Model%209" }
    },
    "DeviceImportInterfaces 3": {
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/x-alt-definitions/Model%209" }
    },
    "terrain": {
      "type": "object",
      "properties": {
        "altitudeAp": { "type": "number", "minimum": -10000, "maximum": 10000 },
        "altitudeCpe": { "type": "number", "minimum": -10000, "maximum": 10000 }
      },
      "required": ["altitudeAp", "altitudeCpe"]
    },
    "link": {
      "type": "object",
      "properties": {
        "apDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "quality": { "type": "string", "maxLength": 200 },
        "terrain": { "$ref": "#/x-alt-definitions/terrain" }
      },
      "required": ["apDeviceId", "quality", "terrain"]
    },
    "SimulationLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "apDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "cpeDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": { "guid": true }
        },
        "quality": { "type": "string", "maxLength": 200 },
        "terrain": { "$ref": "#/x-alt-definitions/terrain" },
        "updatedAt": { "type": "string", "format": "date-time" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": [
        "id",
        "apDeviceId",
        "cpeDeviceId",
        "quality",
        "updatedAt",
        "createdAt"
      ]
    }
  }
}
